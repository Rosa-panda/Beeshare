2025-04-16 13:17:57,601 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 13:17:57,601 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 13:17:57,601 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 13:18:05,923 - __main__ - INFO - 初始化CSV存储
2025-04-16 13:18:05,924 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 13:18:05,925 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 13:18:05,944 - __main__ - INFO - 从 akshare 获取 2 只股票的实时数据...
2025-04-16 13:18:06,090 - src.data_sources.akshare - WARNING - 未找到股票 600519 的当日数据
2025-04-16 13:18:06,178 - src.data_sources.akshare - WARNING - 未找到股票 601398 的当日数据
2025-04-16 13:18:06,180 - __main__ - WARNING - 未找到实时数据
2025-04-16 13:18:06,181 - __main__ - INFO - 程序执行完毕
2025-04-16 13:18:25,599 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 13:18:25,599 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 13:18:25,600 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 13:18:33,634 - __main__ - INFO - 初始化CSV存储
2025-04-16 13:18:33,635 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 13:18:33,636 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 13:18:33,652 - __main__ - INFO - 从 akshare 获取 1 只股票的实时数据...
2025-04-16 13:18:33,723 - src.data_sources.akshare - WARNING - 未找到股票 001279 的当日数据
2025-04-16 13:18:33,723 - __main__ - WARNING - 未找到实时数据
2025-04-16 13:18:33,724 - __main__ - INFO - 程序执行完毕
2025-04-16 13:26:30,139 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 13:26:30,140 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 13:26:30,140 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 13:26:38,856 - __main__ - INFO - 初始化CSV存储
2025-04-16 13:26:38,856 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 13:26:38,857 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 13:26:38,866 - __main__ - INFO - 从 akshare 获取 1 只股票的实时数据...
2025-04-16 13:26:39,022 - src.data_sources.akshare - WARNING - 未找到股票 001279 的当日数据
2025-04-16 13:26:39,024 - __main__ - WARNING - 未找到实时数据
2025-04-16 13:26:39,025 - __main__ - INFO - 程序执行完毕
2025-04-16 13:49:45,261 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 13:49:45,261 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 13:49:45,261 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 13:49:53,050 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 13:49:53,050 - __main__ - INFO - 初始化CSV存储
2025-04-16 13:49:53,050 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 13:49:53,051 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 13:49:53,057 - __main__ - INFO - 识别股票代码 001279 的信息...
2025-04-16 13:49:53,058 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 13:49:53,059 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 13:49:53,059 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 13:49:53,194 - src.data_sources.akshare - ERROR - 获取001279的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 13:49:53,195 - __main__ - INFO - 成功识别 1 只股票的信息:
2025-04-16 13:49:53,203 - __main__ - INFO - 程序执行完毕
2025-04-16 13:50:06,104 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 13:50:06,105 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 13:50:06,105 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 13:51:49,610 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 13:51:49,611 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 13:51:49,611 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 13:52:04,600 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 13:52:04,601 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 13:52:04,601 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 13:52:12,265 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 13:52:12,265 - __main__ - INFO - 初始化CSV存储
2025-04-16 13:52:12,265 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 13:52:12,266 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 13:52:12,270 - __main__ - INFO - 从 akshare 获取 001279 的历史数据...
2025-04-16 13:52:12,272 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 13:52:12,272 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 13:52:12,273 - src.data_sources.akshare - INFO - 获取 001279 历史数据，市场: 深圳证券交易所, 板块: 主板
2025-04-16 13:52:12,337 - src.data_sources.akshare - WARNING - 未找到 001279 的历史数据
2025-04-16 13:52:12,337 - __main__ - WARNING - 未找到 001279 的历史数据
2025-04-16 13:52:12,338 - __main__ - INFO - 程序执行完毕
2025-04-16 13:52:24,841 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 13:52:24,841 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 13:52:24,841 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 13:52:32,394 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 13:52:32,394 - __main__ - INFO - 初始化CSV存储
2025-04-16 13:52:32,394 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 13:52:32,395 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 13:52:32,401 - __main__ - INFO - 使用 akshare 搜索 '强邦新材'...
2025-04-16 13:52:32,407 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 13:52:32,407 - __main__ - INFO - 找到 1 个匹配结果:
2025-04-16 13:52:32,413 - __main__ - INFO - 程序执行完毕
2025-04-16 13:54:50,052 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 13:54:50,053 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 13:54:50,053 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 13:54:58,090 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 13:54:58,091 - __main__ - INFO - 初始化CSV存储
2025-04-16 13:54:58,092 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 13:54:58,093 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 13:54:58,106 - __main__ - INFO - 从 akshare 获取 2 只股票的实时数据...
2025-04-16 13:54:58,109 - src.data_sources.akshare - WARNING - 股票代码 1279 未在A股列表中找到
2025-04-16 13:54:58,110 - src.data_sources.akshare - INFO - 股票 1279 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'exists': False}
2025-04-16 13:54:58,110 - src.data_sources.akshare - INFO - 获取 1279 实时数据，市场: 未知, 板块: 未知
2025-04-16 13:54:58,112 - src.data_sources.akshare - WARNING - 股票代码 1279 未在A股列表中找到
2025-04-16 13:54:58,113 - src.data_sources.akshare - INFO - 股票 1279 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'exists': False}
2025-04-16 13:54:58,248 - src.data_sources.akshare - WARNING - 使用实时行情接口获取 1279 数据失败: Can not decode value starting with character '<'
2025-04-16 13:54:58,390 - src.data_sources.akshare - WARNING - 未找到股票 1279 的当日数据
2025-04-16 13:54:58,394 - src.data_sources.akshare - INFO - 股票 603681 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永冠新材', 'exists': True}
2025-04-16 13:54:58,395 - src.data_sources.akshare - INFO - 获取 603681 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 13:54:58,399 - src.data_sources.akshare - INFO - 股票 603681 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永冠新材', 'exists': True}
2025-04-16 13:54:58,547 - src.data_sources.akshare - WARNING - 使用实时行情接口获取 603681 数据失败: Can not decode value starting with character '<'
2025-04-16 13:54:58,634 - src.data_sources.akshare - WARNING - 未找到股票 603681 的当日数据
2025-04-16 13:54:58,635 - __main__ - WARNING - 未找到实时数据
2025-04-16 13:54:58,636 - __main__ - INFO - 程序执行完毕
2025-04-16 14:00:48,924 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:00:48,924 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:00:48,924 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:00:56,706 - src.data_sources.akshare - ERROR - 初始化AKShare函数映射失败: module 'akshare' has no attribute 'stock_zh_a_hist_em'
2025-04-16 14:00:56,706 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 14:00:56,706 - __main__ - INFO - 初始化CSV存储
2025-04-16 14:00:56,706 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 14:00:56,707 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 14:01:23,628 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:01:23,628 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:01:23,628 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:01:32,791 - src.data_sources.akshare - ERROR - 初始化AKShare函数映射失败: module 'akshare' has no attribute 'stock_zh_a_hist_em'
2025-04-16 14:01:32,791 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 14:01:32,791 - __main__ - INFO - 初始化CSV存储
2025-04-16 14:01:32,791 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 14:01:32,792 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 14:01:32,797 - __main__ - INFO - 从 akshare 获取 1 只股票的实时数据...
2025-04-16 14:01:32,797 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 14:01:32,797 - src.data_sources.akshare - WARNING - 获取A股全部实时行情失败: 'realtime'
2025-04-16 14:01:32,797 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:01:32,798 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:01:32,799 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:01:32,799 - src.data_sources.akshare - INFO - 获取 001279 实时数据，市场: 深圳证券交易所, 板块: 主板
2025-04-16 14:01:32,799 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:01:32,799 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:01:32,800 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:01:32,801 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 001279 的实时数据...
2025-04-16 14:01:32,801 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 001279 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 14:01:32,801 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 001279 的当日数据...
2025-04-16 14:01:32,940 - src.data_sources.akshare - WARNING - 未找到股票 001279 的当日数据
2025-04-16 14:01:32,940 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 001279 的行情数据...
2025-04-16 14:01:37,965 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 001279 的行情数据
2025-04-16 14:01:37,965 - src.data_sources.akshare - INFO - 成功获取 1 只股票的实时数据
2025-04-16 14:01:37,966 - __main__ - INFO - 成功获取 1 条实时数据
2025-04-16 14:01:37,966 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 14:01:37,975 - src.storage.csv_storage - INFO - 创建目录: C:\Users\laisn\Desktop\Beeshare\data/stock_data\realtime
2025-04-16 14:01:37,978 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\realtime/all.csv，行数: 1
2025-04-16 14:01:37,978 - __main__ - INFO - 成功保存实时数据
2025-04-16 14:01:37,979 - __main__ - INFO - 程序执行完毕
2025-04-16 14:01:53,391 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:01:53,391 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:01:53,391 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:02:01,659 - src.data_sources.akshare - ERROR - 初始化AKShare函数映射失败: module 'akshare' has no attribute 'stock_zh_a_hist_em'
2025-04-16 14:02:01,660 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 14:02:01,660 - __main__ - INFO - 初始化CSV存储
2025-04-16 14:02:01,660 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 14:02:01,660 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 14:02:01,666 - __main__ - INFO - 从 akshare 获取 001279 的历史数据...
2025-04-16 14:02:01,666 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:02:01,666 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:02:01,667 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:02:01,667 - src.data_sources.akshare - INFO - 获取 001279 历史数据，市场: 深圳证券交易所, 板块: 主板
2025-04-16 14:02:01,668 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:02:01,668 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:02:01,669 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:02:01,670 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 001279 历史数据
2025-04-16 14:02:01,670 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist获取 001279 历史数据失败: 'historical'
2025-04-16 14:02:01,670 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 001279 历史数据
2025-04-16 14:02:01,762 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist(无前缀)未能获取到 001279 历史数据
2025-04-16 14:02:01,762 - src.data_sources.akshare - INFO - 方法3: 尝试使用stock_zh_a_hist_em获取 001279 历史数据
2025-04-16 14:02:01,763 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist_em获取 001279 历史数据失败: module 'akshare' has no attribute 'stock_zh_a_hist_em'
2025-04-16 14:02:01,763 - src.data_sources.akshare - INFO - 方法4: 尝试使用交易所特定接口获取 001279 历史数据
2025-04-16 14:02:01,764 - src.data_sources.akshare - WARNING - 使用交易所特定接口获取 001279 历史数据失败: module 'akshare' has no attribute 'stock_sz_a_hist'
2025-04-16 14:02:01,764 - src.data_sources.akshare - WARNING - 所有方法都未能获取到 001279 的历史数据
2025-04-16 14:02:01,765 - __main__ - WARNING - 未找到 001279 的历史数据
2025-04-16 14:02:01,765 - __main__ - INFO - 程序执行完毕
2025-04-16 14:06:52,124 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:06:52,124 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:06:52,125 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:07:00,019 - src.data_sources.akshare - ERROR - 初始化AKShare函数映射失败: module 'akshare' has no attribute 'stock_sh_a_hist'
2025-04-16 14:07:00,019 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 14:07:00,020 - __main__ - INFO - 初始化CSV存储
2025-04-16 14:07:00,020 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 14:07:00,020 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 14:07:00,025 - __main__ - INFO - 从 akshare 获取 001279 的历史数据...
2025-04-16 14:07:00,025 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:07:00,026 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:07:00,027 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:07:00,027 - src.data_sources.akshare - INFO - 获取 001279 历史数据，市场: 深圳证券交易所, 板块: 主板
2025-04-16 14:07:00,027 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:07:00,027 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:07:00,029 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:07:00,029 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 001279 历史数据
2025-04-16 14:07:00,029 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist获取 001279 历史数据失败: 'historical'
2025-04-16 14:07:00,030 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 001279 历史数据
2025-04-16 14:07:00,141 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist(无前缀)未能获取到 001279 历史数据
2025-04-16 14:07:00,142 - src.data_sources.akshare - INFO - 方法3: 尝试使用股票历史数据接口获取 001279 历史数据
2025-04-16 14:07:00,210 - src.data_sources.akshare - WARNING - 使用股票历史数据接口未能获取到 001279 历史数据
2025-04-16 14:07:00,211 - src.data_sources.akshare - INFO - 方法4: 尝试使用交易所特定接口获取 001279 历史数据
2025-04-16 14:07:00,211 - src.data_sources.akshare - WARNING - 使用交易所特定接口获取 001279 历史数据失败: module 'akshare' has no attribute 'stock_sz_a_hist'
2025-04-16 14:07:00,212 - src.data_sources.akshare - WARNING - 所有方法都未能获取到 001279 的历史数据
2025-04-16 14:07:00,212 - __main__ - WARNING - 未找到 001279 的历史数据
2025-04-16 14:07:00,212 - __main__ - INFO - 程序执行完毕
2025-04-16 14:07:49,011 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:07:49,011 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:07:49,011 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:07:56,662 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 14:07:56,662 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 14:07:56,663 - __main__ - INFO - 初始化CSV存储
2025-04-16 14:07:56,663 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 14:07:56,663 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 14:07:56,668 - __main__ - INFO - 从 akshare 获取 001279 的历史数据...
2025-04-16 14:07:56,668 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:07:56,669 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:07:56,670 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:07:56,670 - src.data_sources.akshare - INFO - 获取 001279 历史数据，市场: 深圳证券交易所, 板块: 主板
2025-04-16 14:07:56,670 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:07:56,670 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:07:56,671 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:07:56,672 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 001279 历史数据
2025-04-16 14:07:56,739 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 001279 历史数据
2025-04-16 14:07:56,740 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 001279 历史数据
2025-04-16 14:07:56,822 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist(无前缀)未能获取到 001279 历史数据
2025-04-16 14:07:56,822 - src.data_sources.akshare - INFO - 方法3: 尝试使用股票历史数据接口获取 001279 历史数据
2025-04-16 14:07:56,892 - src.data_sources.akshare - WARNING - 使用股票历史数据接口未能获取到 001279 历史数据
2025-04-16 14:07:56,892 - src.data_sources.akshare - INFO - 方法4: 尝试使用统一接口获取 001279 历史数据
2025-04-16 14:07:56,956 - src.data_sources.akshare - WARNING - 使用统一接口未能获取到 001279 历史数据
2025-04-16 14:07:56,956 - src.data_sources.akshare - WARNING - 所有方法都未能获取到 001279 的历史数据
2025-04-16 14:07:56,957 - __main__ - WARNING - 未找到 001279 的历史数据
2025-04-16 14:07:56,957 - __main__ - INFO - 程序执行完毕
2025-04-16 14:10:41,564 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:10:41,565 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:10:41,565 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:10:49,927 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 14:10:49,927 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 14:10:49,927 - __main__ - INFO - 初始化CSV存储
2025-04-16 14:10:49,928 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 14:10:49,928 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 14:10:49,933 - __main__ - INFO - 从 akshare 获取 001279 的历史数据...
2025-04-16 14:10:49,933 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:10:49,934 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:10:49,935 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:10:49,935 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:10:49,935 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:10:49,936 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:10:50,174 - src.data_sources.akshare - ERROR - 获取001279的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 14:10:50,175 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:10:50,175 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:10:50,176 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:10:50,176 - src.data_sources.akshare - INFO - 获取 001279 历史数据，市场: 深圳证券交易所, 板块: 主板
2025-04-16 14:10:50,177 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:10:50,177 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:10:50,178 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:10:50,178 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 001279 历史数据
2025-04-16 14:10:50,306 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 001279 历史数据
2025-04-16 14:10:50,306 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 001279 历史数据
2025-04-16 14:10:50,382 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist(无前缀)未能获取到 001279 历史数据
2025-04-16 14:10:50,383 - src.data_sources.akshare - INFO - 方法3: 尝试使用股票历史数据接口获取 001279 历史数据
2025-04-16 14:10:50,453 - src.data_sources.akshare - WARNING - 使用股票历史数据接口未能获取到 001279 历史数据
2025-04-16 14:10:50,454 - src.data_sources.akshare - INFO - 方法4: 尝试使用统一接口获取 001279 历史数据
2025-04-16 14:10:50,514 - src.data_sources.akshare - WARNING - 使用统一接口未能获取到 001279 历史数据
2025-04-16 14:10:50,515 - src.data_sources.akshare - WARNING - 所有方法都未能获取到 001279 的历史数据
2025-04-16 14:10:50,515 - __main__ - WARNING - 未找到 001279 的历史数据
2025-04-16 14:10:50,515 - __main__ - INFO - 建议: 您可以尝试以下方法:
2025-04-16 14:10:50,516 - __main__ - INFO - 1. 使用不同的日期范围
2025-04-16 14:10:50,516 - __main__ - INFO - 2. 检查股票代码是否正确
2025-04-16 14:10:50,516 - __main__ - INFO - 3. 尝试使用其他数据源
2025-04-16 14:10:50,516 - __main__ - INFO - 4. 如果这是一支新上市的股票，可能尚未有足够的历史数据。您可以尝试获取实时数据: python main.py realtime --symbol 001279
2025-04-16 14:10:50,517 - __main__ - INFO - 程序执行完毕
2025-04-16 14:11:02,402 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:11:02,402 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:11:02,402 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:11:14,365 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:11:14,366 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:11:14,366 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:12:21,558 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:12:21,558 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:12:21,558 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:12:29,573 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 14:12:29,573 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 14:12:29,574 - __main__ - INFO - 初始化CSV存储
2025-04-16 14:12:29,575 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 14:12:29,575 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 14:12:29,586 - __main__ - INFO - 从 akshare 获取 2 只股票的实时数据...
2025-04-16 14:12:29,586 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 14:12:29,725 - src.data_sources.akshare - WARNING - 获取A股全部实时行情失败: Can not decode value starting with character '<'
2025-04-16 14:12:29,726 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:12:29,726 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:12:29,728 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:12:29,728 - src.data_sources.akshare - INFO - 获取 001279 实时数据，市场: 深圳证券交易所, 板块: 主板
2025-04-16 14:12:29,728 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:12:29,728 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:12:29,729 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:12:29,729 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 001279 的实时数据...
2025-04-16 14:12:29,730 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 001279 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 14:12:29,730 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 001279 的当日数据...
2025-04-16 14:12:29,806 - src.data_sources.akshare - WARNING - 未找到股票 1279 的当日数据
2025-04-16 14:12:29,806 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 001279 的行情数据...
2025-04-16 14:12:35,528 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 001279 的行情数据
2025-04-16 14:12:35,528 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603681 -> 输出 603681
2025-04-16 14:12:35,529 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603681 -> 输出 603681
2025-04-16 14:12:35,529 - src.data_sources.akshare - INFO - 股票 603681 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永冠新材', 'exists': True}
2025-04-16 14:12:35,530 - src.data_sources.akshare - INFO - 获取 603681 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 14:12:35,530 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603681 -> 输出 603681
2025-04-16 14:12:35,530 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603681 -> 输出 603681
2025-04-16 14:12:35,531 - src.data_sources.akshare - INFO - 股票 603681 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永冠新材', 'exists': True}
2025-04-16 14:12:35,532 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 603681 的实时数据...
2025-04-16 14:12:35,532 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 603681 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 14:12:35,532 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 603681 的当日数据...
2025-04-16 14:12:35,606 - src.data_sources.akshare - WARNING - 未找到股票 603681 的当日数据
2025-04-16 14:12:35,607 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 603681 的行情数据...
2025-04-16 14:12:40,306 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 603681 的行情数据
2025-04-16 14:12:40,306 - src.data_sources.akshare - INFO - 成功获取 2 只股票的实时数据
2025-04-16 14:12:40,308 - __main__ - INFO - 成功获取 2 条实时数据
2025-04-16 14:12:40,308 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 14:12:40,310 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\realtime/all.csv，行数: 2
2025-04-16 14:12:40,311 - __main__ - INFO - 成功保存实时数据
2025-04-16 14:12:40,311 - __main__ - INFO - 程序执行完毕
2025-04-16 14:17:10,655 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:17:10,656 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:17:10,656 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:17:18,099 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 14:17:18,100 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 14:17:18,100 - __main__ - INFO - 初始化CSV存储
2025-04-16 14:17:18,101 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 14:17:18,101 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 14:17:18,106 - __main__ - INFO - 从 akshare 获取 1 只股票的实时数据...
2025-04-16 14:17:18,106 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 14:17:37,751 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:17:37,752 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:17:37,752 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:17:56,767 - src.data_sources.akshare - INFO - 成功获取A股实时行情，共 5410 只股票
2025-04-16 14:17:56,768 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:17:56,769 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:17:56,770 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:17:56,771 - src.data_sources.akshare - INFO - 获取 001279 实时数据，市场: 深圳证券交易所, 板块: 主板
2025-04-16 14:17:56,771 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:17:56,771 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:17:56,772 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:17:56,773 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 001279 的实时数据...
2025-04-16 14:17:56,774 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 001279 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 14:17:56,774 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 001279 的当日数据...
2025-04-16 14:17:56,909 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 001279 的当日数据
2025-04-16 14:17:56,909 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 001279 的行情数据...
2025-04-16 14:18:01,930 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 001279 的行情数据
2025-04-16 14:18:01,931 - src.data_sources.akshare - INFO - 成功获取 2 只股票的实时数据
2025-04-16 14:18:01,932 - __main__ - INFO - 成功获取 2 条实时数据
2025-04-16 14:18:01,933 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 14:18:01,935 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\realtime/all.csv，行数: 2
2025-04-16 14:18:01,936 - __main__ - INFO - 成功保存实时数据
2025-04-16 14:18:01,936 - __main__ - INFO - 程序执行完毕
2025-04-16 14:18:30,511 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:18:30,511 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:18:30,511 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:18:39,137 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 14:18:39,137 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 14:18:39,137 - __main__ - INFO - 初始化CSV存储
2025-04-16 14:18:39,137 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 14:18:39,138 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 14:18:39,142 - __main__ - INFO - 从 akshare 获取 1 只股票的实时数据...
2025-04-16 14:18:39,142 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 14:18:39,289 - src.data_sources.akshare - WARNING - 获取A股全部实时行情失败: Can not decode value starting with character '<'
2025-04-16 14:18:39,290 - src.data_sources.akshare - INFO - 股票代码修正: 添加前导零 -> 001279
2025-04-16 14:18:39,290 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:18:39,290 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:18:39,291 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:18:39,292 - src.data_sources.akshare - INFO - 获取 001279 实时数据，市场: 深圳证券交易所, 板块: 主板
2025-04-16 14:18:39,292 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:18:39,293 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:18:39,293 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:18:39,294 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 001279 的实时数据...
2025-04-16 14:18:39,294 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 001279 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 14:18:39,295 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 001279 的当日数据...
2025-04-16 14:18:39,377 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 001279 的当日数据
2025-04-16 14:18:39,377 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 001279 的行情数据...
2025-04-16 14:18:44,251 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 001279 的行情数据
2025-04-16 14:18:44,252 - src.data_sources.akshare - INFO - 成功获取 2 只股票的实时数据
2025-04-16 14:18:44,253 - __main__ - INFO - 成功获取 2 条实时数据
2025-04-16 14:18:44,253 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 14:18:44,255 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\realtime/all.csv，行数: 2
2025-04-16 14:18:44,256 - __main__ - INFO - 成功保存实时数据
2025-04-16 14:18:44,256 - __main__ - INFO - 程序执行完毕
2025-04-16 14:19:31,102 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:19:31,102 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:19:31,103 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:19:39,975 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 14:19:39,976 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 14:19:39,977 - __main__ - INFO - 初始化CSV存储
2025-04-16 14:19:39,977 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 14:19:39,978 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 14:19:39,992 - __main__ - INFO - 从 akshare 获取 2 只股票的实时数据...
2025-04-16 14:19:39,992 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 14:19:40,170 - src.data_sources.akshare - WARNING - 获取A股全部实时行情失败: Can not decode value starting with character '<'
2025-04-16 14:19:40,171 - src.data_sources.akshare - INFO - 股票代码修正: 添加前导零 -> 001279
2025-04-16 14:19:40,172 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:19:40,172 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:19:40,174 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:19:40,175 - src.data_sources.akshare - INFO - 获取 001279 实时数据，市场: 深圳证券交易所, 板块: 主板
2025-04-16 14:19:40,175 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:19:40,176 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:19:40,177 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:19:40,178 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 001279 的实时数据...
2025-04-16 14:19:40,178 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 001279 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 14:19:40,179 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 001279 的当日数据...
2025-04-16 14:19:40,252 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 001279 的当日数据
2025-04-16 14:19:40,252 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 001279 的行情数据...
2025-04-16 14:19:45,725 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 001279 的行情数据
2025-04-16 14:19:45,725 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603681 -> 输出 603681
2025-04-16 14:19:45,726 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603681 -> 输出 603681
2025-04-16 14:19:45,727 - src.data_sources.akshare - INFO - 股票 603681 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永冠新材', 'exists': True}
2025-04-16 14:19:45,727 - src.data_sources.akshare - INFO - 获取 603681 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 14:19:45,728 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603681 -> 输出 603681
2025-04-16 14:19:45,728 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603681 -> 输出 603681
2025-04-16 14:19:45,729 - src.data_sources.akshare - INFO - 股票 603681 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永冠新材', 'exists': True}
2025-04-16 14:19:45,729 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 603681 的实时数据...
2025-04-16 14:19:45,729 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 603681 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 14:19:45,730 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 603681 的当日数据...
2025-04-16 14:19:45,804 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 603681 的当日数据
2025-04-16 14:19:45,805 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 603681 的行情数据...
2025-04-16 14:19:50,276 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 603681 的行情数据
2025-04-16 14:19:50,277 - src.data_sources.akshare - INFO - 成功获取 4 只股票的实时数据
2025-04-16 14:19:50,278 - __main__ - INFO - 成功获取 4 条实时数据
2025-04-16 14:19:50,279 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 14:19:50,283 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\realtime/all.csv，行数: 4
2025-04-16 14:19:50,284 - __main__ - INFO - 成功保存实时数据
2025-04-16 14:19:50,284 - __main__ - INFO - 程序执行完毕
2025-04-16 14:38:06,047 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:38:06,047 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:38:06,047 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:38:14,328 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 14:38:14,329 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 14:38:14,330 - __main__ - INFO - 初始化CSV存储
2025-04-16 14:38:14,331 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 14:38:14,333 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 14:38:14,348 - __main__ - INFO - 使用 akshare 搜索 '贵州茅台'...
2025-04-16 14:38:14,356 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 14:38:14,358 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 14:38:14,358 - __main__ - INFO - 找到 1 个匹配结果:
2025-04-16 14:38:14,368 - __main__ - INFO - 程序执行完毕
2025-04-16 14:38:24,543 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:38:24,544 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:38:24,544 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:38:32,322 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 14:38:32,323 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 14:38:32,324 - __main__ - INFO - 初始化CSV存储
2025-04-16 14:38:32,324 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 14:38:32,325 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 14:38:32,339 - __main__ - INFO - 从 akshare 获取指数 000001 的数据...
2025-04-16 14:38:32,340 - src.data_sources.akshare - INFO - 获取指数 000001 的历史数据
2025-04-16 14:38:32,341 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 14:38:32,342 - src.data_sources.akshare - INFO - 检测到指数代码 000001，使用指数接口获取数据
2025-04-16 14:38:32,698 - __main__ - INFO - 成功获取 242 条指数数据
2025-04-16 14:38:32,698 - __main__ - INFO - 将指数数据保存到 csv 存储...
2025-04-16 14:38:32,702 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\index/000001.csv，行数: 242
2025-04-16 14:38:32,703 - __main__ - INFO - 成功保存指数 000001 的数据
2025-04-16 14:38:32,703 - __main__ - INFO - 程序执行完毕
2025-04-16 14:38:41,002 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:38:41,002 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:38:41,002 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:38:50,034 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 14:38:50,035 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 14:38:50,036 - __main__ - INFO - 初始化CSV存储
2025-04-16 14:38:50,037 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 14:38:50,039 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 14:38:50,051 - __main__ - INFO - 识别股票代码 600519 的信息...
2025-04-16 14:38:50,052 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 14:38:50,054 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 14:38:50,055 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 14:38:50,055 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 14:38:50,057 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 14:38:50,058 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 14:38:50,059 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 14:38:50,061 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 14:38:50,274 - src.data_sources.akshare - ERROR - 获取600519的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 14:38:50,276 - __main__ - INFO - 识别股票代码 1279 的信息...
2025-04-16 14:38:50,277 - src.data_sources.akshare - INFO - 股票代码修正: 添加前导零 -> 001279
2025-04-16 14:38:50,278 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:38:50,282 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:38:50,283 - src.data_sources.akshare - INFO - 股票代码修正: 添加前导零 -> 001279
2025-04-16 14:38:50,284 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:38:50,285 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:38:50,289 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:38:50,291 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:38:50,292 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 14:38:50,296 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 14:38:50,401 - src.data_sources.akshare - ERROR - 获取1279的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 14:38:50,402 - __main__ - INFO - 识别股票代码 300059 的信息...
2025-04-16 14:38:50,403 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 14:38:50,405 - src.data_sources.akshare - INFO - 股票 300059 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东方财富', 'exists': True}
2025-04-16 14:38:50,406 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 14:38:50,407 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 14:38:50,409 - src.data_sources.akshare - INFO - 股票 300059 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东方财富', 'exists': True}
2025-04-16 14:38:50,410 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 14:38:50,411 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 14:38:50,413 - src.data_sources.akshare - INFO - 股票 300059 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东方财富', 'exists': True}
2025-04-16 14:38:50,518 - src.data_sources.akshare - ERROR - 获取300059的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 14:38:50,520 - __main__ - INFO - 识别股票代码 688001 的信息...
2025-04-16 14:38:50,521 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 14:38:50,525 - src.data_sources.akshare - INFO - 股票 688001 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华兴源创', 'exists': True}
2025-04-16 14:38:50,526 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 14:38:50,527 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 14:38:50,531 - src.data_sources.akshare - INFO - 股票 688001 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华兴源创', 'exists': True}
2025-04-16 14:38:50,532 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 14:38:50,533 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 14:38:50,537 - src.data_sources.akshare - INFO - 股票 688001 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华兴源创', 'exists': True}
2025-04-16 14:38:50,642 - src.data_sources.akshare - ERROR - 获取688001的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 14:38:50,642 - __main__ - INFO - 成功识别 4 只股票的信息:
2025-04-16 14:38:50,656 - __main__ - INFO - 程序执行完毕
2025-04-16 14:39:09,628 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 14:39:09,628 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 14:39:09,628 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 14:39:18,545 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 14:39:18,545 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 14:39:18,545 - __main__ - INFO - 初始化CSV存储
2025-04-16 14:39:18,546 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 14:39:18,546 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 14:39:18,550 - __main__ - INFO - 从 akshare 获取 600036 的历史数据...
2025-04-16 14:39:18,551 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 14:39:18,551 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 14:39:18,553 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 14:39:18,553 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 14:39:18,553 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 14:39:18,555 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 14:39:18,664 - src.data_sources.akshare - ERROR - 获取600036的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 14:39:18,665 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 14:39:18,665 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 14:39:18,666 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 14:39:18,667 - src.data_sources.akshare - INFO - 获取 600036 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 14:39:18,667 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 14:39:18,667 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 14:39:18,668 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 14:39:18,669 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600036 历史数据
2025-04-16 14:39:18,816 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 600036 历史数据
2025-04-16 14:39:18,817 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600036 历史数据
2025-04-16 14:39:18,925 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 600036 历史数据
2025-04-16 14:39:18,928 - __main__ - INFO - 成功获取 242 条历史数据
2025-04-16 14:39:18,929 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 14:39:18,952 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600036.csv，总行数: 264
2025-04-16 14:39:18,953 - __main__ - INFO - 成功保存 600036 的历史数据
2025-04-16 14:39:18,953 - __main__ - INFO - 程序执行完毕
2025-04-16 15:30:32,569 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 15:30:32,569 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 15:30:32,569 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 15:30:45,447 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 15:30:45,447 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 15:30:45,447 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 15:35:23,254 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 15:35:23,254 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 15:35:23,255 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 15:35:31,070 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 15:35:31,071 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 15:35:31,071 - __main__ - INFO - 初始化CSV存储
2025-04-16 15:35:31,071 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 15:35:31,072 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 15:35:31,074 - __main__ - ERROR - 程序执行过程中发生错误: name 'get_available_data_sources' is not defined
Traceback (most recent call last):
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 721, in <module>
    main()
    ~~~~^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 522, in main
    parser = setup_args()
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 438, in setup_args
    choices=get_available_data_sources(), help='数据源，默认为akshare')
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_available_data_sources' is not defined
2025-04-16 15:35:54,460 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 15:35:54,460 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 15:35:54,461 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 15:36:01,967 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 15:36:01,967 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 15:36:01,968 - __main__ - INFO - 初始化CSV存储
2025-04-16 15:36:01,969 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 15:36:01,970 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 15:36:01,975 - __main__ - ERROR - 程序执行过程中发生错误: name 'get_available_data_sources' is not defined
Traceback (most recent call last):
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 721, in <module>
    main()
    ~~~~^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 522, in main
    parser = setup_args()
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 438, in setup_args
    choices=get_available_data_sources(), help='数据源，默认为akshare')
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_available_data_sources' is not defined
2025-04-16 15:37:43,909 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 15:37:43,909 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 15:37:43,909 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 15:37:52,416 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 15:37:52,417 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 15:37:52,417 - __main__ - INFO - 初始化CSV存储
2025-04-16 15:37:52,417 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 15:37:52,417 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 15:37:52,423 - __main__ - INFO - 从 akshare 获取 600036 的历史数据...
2025-04-16 15:37:52,424 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:37:52,424 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:37:52,425 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:37:52,425 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:37:52,425 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:37:52,426 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:37:52,587 - src.data_sources.akshare - ERROR - 获取600036的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 15:37:52,588 - __main__ - ERROR - 程序执行过程中发生错误: 'Namespace' object has no attribute 'interval'
Traceback (most recent call last):
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 739, in <module>
    main()
    ~~~~^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 532, in main
    get_historical_data(args, data_sources, storage)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 142, in get_historical_data
    interval=args.interval
             ^^^^^^^^^^^^^
AttributeError: 'Namespace' object has no attribute 'interval'
2025-04-16 15:38:40,487 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 15:38:40,487 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 15:38:40,487 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 15:38:48,872 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 15:38:48,872 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 15:38:48,872 - __main__ - INFO - 初始化CSV存储
2025-04-16 15:38:48,872 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 15:38:48,873 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 15:38:48,878 - __main__ - INFO - 从 akshare 获取 600036 的历史数据...
2025-04-16 15:38:48,879 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:38:48,879 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:38:48,880 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:38:48,880 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:38:48,880 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:38:48,881 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:38:48,954 - src.data_sources.akshare - ERROR - 获取600036的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 15:38:48,955 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:38:48,956 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:38:48,957 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:38:48,957 - src.data_sources.akshare - INFO - 获取 600036 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 15:38:48,958 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:38:48,958 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:38:48,959 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:38:48,959 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600036 历史数据
2025-04-16 15:38:49,109 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 600036 历史数据
2025-04-16 15:38:49,109 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600036 历史数据
2025-04-16 15:38:49,196 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 600036 历史数据
2025-04-16 15:38:49,197 - __main__ - INFO - 成功获取 242 条历史数据
2025-04-16 15:38:49,197 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 15:38:49,213 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600036.csv，总行数: 506
2025-04-16 15:38:49,214 - __main__ - INFO - 成功保存 600036 的历史数据
2025-04-16 15:38:49,214 - __main__ - INFO - 程序执行完毕
2025-04-16 15:38:59,641 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 15:38:59,641 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 15:38:59,641 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 15:39:08,123 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 15:39:08,123 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 15:39:08,123 - __main__ - INFO - 初始化CSV存储
2025-04-16 15:39:08,123 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 15:39:08,123 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 15:39:08,129 - __main__ - INFO - 分析时间范围: 2023-01-01 至 2023-12-31
2025-04-16 15:39:08,129 - __main__ - INFO - 分析股票: ['600036', '601398']
2025-04-16 15:39:08,129 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 15:39:08,136 - __main__ - INFO - 从网络获取股票 600036 的历史数据...
2025-04-16 15:39:08,136 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:39:08,136 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:39:08,137 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:39:08,138 - src.data_sources.akshare - INFO - 获取 600036 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 15:39:08,138 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:39:08,138 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:39:08,139 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:39:08,140 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600036 历史数据
2025-04-16 15:39:08,243 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 600036 历史数据
2025-04-16 15:39:08,243 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600036 历史数据
2025-04-16 15:39:08,367 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 600036 历史数据
2025-04-16 15:39:08,385 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600036.csv，总行数: 506
2025-04-16 15:39:08,386 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 15:39:08,389 - __main__ - INFO - 从网络获取股票 601398 的历史数据...
2025-04-16 15:39:08,389 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:39:08,390 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:39:08,391 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 15:39:08,391 - src.data_sources.akshare - INFO - 获取 601398 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 15:39:08,391 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:39:08,392 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:39:08,393 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 15:39:08,394 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 601398 历史数据
2025-04-16 15:39:08,484 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 601398 历史数据
2025-04-16 15:39:08,484 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 601398 历史数据
2025-04-16 15:39:08,569 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 601398 历史数据
2025-04-16 15:39:08,583 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/601398.csv，总行数: 264
2025-04-16 15:39:08,584 - __main__ - INFO - 成功加载 2 支股票的数据，共 484 条记录
2025-04-16 15:39:09,656 - matplotlib.font_manager - INFO - generated new fontManager
2025-04-16 15:39:10,355 - __main__ - ERROR - 导入聚类分析模块失败: No module named 'matplotlib.finance'
2025-04-16 15:39:10,356 - __main__ - ERROR - 请确保已安装所需的依赖: scikit-learn, matplotlib, seaborn
2025-04-16 15:39:10,356 - __main__ - INFO - 程序执行完毕
2025-04-16 15:40:36,160 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 15:40:36,160 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 15:40:36,160 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 15:40:45,242 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 15:40:45,242 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 15:40:45,243 - __main__ - INFO - 初始化CSV存储
2025-04-16 15:40:45,243 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 15:40:45,243 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 15:40:45,250 - __main__ - INFO - 分析时间范围: 2023-01-01 至 2023-12-31
2025-04-16 15:40:45,250 - __main__ - INFO - 分析股票: ['600036', '601398']
2025-04-16 15:40:45,250 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 15:40:45,256 - __main__ - INFO - 从网络获取股票 600036 的历史数据...
2025-04-16 15:40:45,256 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:40:45,257 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:40:45,258 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:40:45,258 - src.data_sources.akshare - INFO - 获取 600036 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 15:40:45,258 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:40:45,259 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:40:45,260 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:40:45,261 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600036 历史数据
2025-04-16 15:40:45,350 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 600036 历史数据
2025-04-16 15:40:45,350 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600036 历史数据
2025-04-16 15:40:45,446 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 600036 历史数据
2025-04-16 15:40:45,464 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600036.csv，总行数: 506
2025-04-16 15:40:45,464 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 15:40:45,470 - __main__ - INFO - 从网络获取股票 601398 的历史数据...
2025-04-16 15:40:45,471 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:40:45,471 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:40:45,472 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 15:40:45,472 - src.data_sources.akshare - INFO - 获取 601398 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 15:40:45,473 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:40:45,473 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:40:45,474 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 15:40:45,474 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 601398 历史数据
2025-04-16 15:40:45,561 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 601398 历史数据
2025-04-16 15:40:45,562 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 601398 历史数据
2025-04-16 15:40:45,655 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 601398 历史数据
2025-04-16 15:40:45,670 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/601398.csv，总行数: 506
2025-04-16 15:40:45,671 - __main__ - INFO - 成功加载 2 支股票的数据，共 484 条记录
2025-04-16 15:40:46,671 - __main__ - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 15:40:46,672 - src.analysis.clustering - ERROR - 数据中没有可用的特征列
2025-04-16 15:40:46,672 - __main__ - ERROR - 聚类分析失败
2025-04-16 15:40:46,673 - __main__ - INFO - 程序执行完毕
2025-04-16 15:41:34,511 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 15:41:34,511 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 15:41:34,511 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 15:41:42,693 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 15:41:42,693 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 15:41:42,693 - __main__ - INFO - 初始化CSV存储
2025-04-16 15:41:42,694 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 15:41:42,694 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 15:41:42,700 - __main__ - INFO - 分析时间范围: 2023-01-01 至 2023-12-31
2025-04-16 15:41:42,700 - __main__ - INFO - 分析股票: ['600036', '601398']
2025-04-16 15:41:42,700 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 15:41:42,706 - __main__ - INFO - 从网络获取股票 600036 的历史数据...
2025-04-16 15:41:42,707 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:41:42,707 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:41:42,708 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:41:42,708 - src.data_sources.akshare - INFO - 获取 600036 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 15:41:42,709 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:41:42,709 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:41:42,710 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:41:42,711 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600036 历史数据
2025-04-16 15:41:42,848 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 600036 历史数据
2025-04-16 15:41:42,848 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600036 历史数据
2025-04-16 15:41:43,004 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 600036 历史数据
2025-04-16 15:41:43,022 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600036.csv，总行数: 506
2025-04-16 15:41:43,023 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 15:41:43,028 - __main__ - INFO - 从网络获取股票 601398 的历史数据...
2025-04-16 15:41:43,028 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:41:43,029 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:41:43,030 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 15:41:43,030 - src.data_sources.akshare - INFO - 获取 601398 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 15:41:43,031 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:41:43,031 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:41:43,032 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 15:41:43,032 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 601398 历史数据
2025-04-16 15:41:43,151 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 601398 历史数据
2025-04-16 15:41:43,151 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 601398 历史数据
2025-04-16 15:41:43,253 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 601398 历史数据
2025-04-16 15:41:43,270 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/601398.csv，总行数: 506
2025-04-16 15:41:43,271 - __main__ - INFO - 成功加载 2 支股票的数据，共 484 条记录
2025-04-16 15:41:43,271 - __main__ - INFO - 数据列名: ['日期', '股票代码', '开盘', '收盘', '最高', '最低', '成交量', '成交额', '振幅', '涨跌幅', '涨跌额', '换手率', 'source', 'symbol']
2025-04-16 15:41:44,291 - __main__ - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 15:41:44,292 - src.analysis.clustering - ERROR - 数据中没有可用的特征列
2025-04-16 15:41:44,292 - __main__ - ERROR - 聚类分析失败
2025-04-16 15:41:44,292 - __main__ - INFO - 程序执行完毕
2025-04-16 15:42:15,499 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 15:42:15,499 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 15:42:15,500 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 15:42:30,026 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 15:42:30,026 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 15:42:30,026 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 15:42:38,567 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 15:42:38,568 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 15:42:38,568 - __main__ - INFO - 初始化CSV存储
2025-04-16 15:42:38,568 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 15:42:38,568 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 15:42:38,574 - __main__ - INFO - 分析时间范围: 2023-01-01 至 2023-12-31
2025-04-16 15:42:38,574 - __main__ - INFO - 分析股票: ['600036', '601398']
2025-04-16 15:42:38,574 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 15:42:38,581 - __main__ - INFO - 从网络获取股票 600036 的历史数据...
2025-04-16 15:42:38,581 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:42:38,582 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:42:38,583 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:42:38,583 - src.data_sources.akshare - INFO - 获取 600036 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 15:42:38,583 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:42:38,584 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:42:38,585 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:42:38,585 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600036 历史数据
2025-04-16 15:42:38,671 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 600036 历史数据
2025-04-16 15:42:38,671 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600036 历史数据
2025-04-16 15:42:38,788 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 600036 历史数据
2025-04-16 15:42:38,806 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600036.csv，总行数: 506
2025-04-16 15:42:38,807 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 15:42:38,812 - __main__ - INFO - 从网络获取股票 601398 的历史数据...
2025-04-16 15:42:38,813 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:42:38,813 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:42:38,814 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 15:42:38,814 - src.data_sources.akshare - INFO - 获取 601398 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 15:42:38,815 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:42:38,815 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:42:38,816 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 15:42:38,817 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 601398 历史数据
2025-04-16 15:42:38,893 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 601398 历史数据
2025-04-16 15:42:38,893 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 601398 历史数据
2025-04-16 15:42:39,157 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 601398 历史数据
2025-04-16 15:42:39,173 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/601398.csv，总行数: 506
2025-04-16 15:42:39,174 - __main__ - INFO - 成功加载 2 支股票的数据，共 484 条记录
2025-04-16 15:42:39,175 - __main__ - INFO - 数据列名: ['日期', '股票代码', '开盘', '收盘', '最高', '最低', '成交量', '成交额', '振幅', '涨跌幅', '涨跌额', '换手率', 'source', 'symbol']
2025-04-16 15:42:39,176 - __main__ - INFO - 重命名后的数据列名: ['date', 'code', 'open', 'close', 'high', 'low', 'volume', 'amount', 'amplitude', 'change_percent', 'change', 'turnover_rate', 'source', 'symbol']
2025-04-16 15:42:40,154 - __main__ - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 15:42:40,155 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 15:42:40,246 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 2, 总体惯性: 740.64
2025-04-16 15:42:40,246 - __main__ - INFO - 聚类完成，聚类数: 2
2025-04-16 15:42:40,246 - __main__ - INFO - cluster_0: 242 个样本 (50.00%)
2025-04-16 15:42:40,246 - __main__ - INFO - cluster_1: 242 个样本 (50.00%)
2025-04-16 15:42:40,247 - __main__ - INFO - 生成 clusters 可视化...
2025-04-16 15:42:40,248 - src.analysis.clustering - INFO - PCA解释方差: ['76.58%', '16.73%']
2025-04-16 15:42:41,298 - __main__ - INFO - 图表已保存至: results\cluster_clusters_20250416_154240.png
2025-04-16 15:42:41,314 - __main__ - INFO - 生成 elbow 可视化...
2025-04-16 15:42:41,314 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 15:42:41,337 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 1, 总体惯性: 2904.00
2025-04-16 15:42:41,338 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 15:42:41,363 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 2, 总体惯性: 740.64
2025-04-16 15:42:41,363 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 15:42:41,391 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 3, 总体惯性: 565.33
2025-04-16 15:42:41,392 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 15:42:41,423 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 4, 总体惯性: 428.47
2025-04-16 15:42:41,423 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 15:42:41,456 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 5, 总体惯性: 350.48
2025-04-16 15:42:41,456 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 15:42:41,490 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 6, 总体惯性: 285.47
2025-04-16 15:42:41,491 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 15:42:41,528 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 7, 总体惯性: 237.39
2025-04-16 15:42:41,547 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 15:42:41,620 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 8, 总体惯性: 211.66
2025-04-16 15:42:41,620 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 15:42:41,659 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 9, 总体惯性: 184.99
2025-04-16 15:42:41,660 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 15:42:41,698 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 10, 总体惯性: 164.59
2025-04-16 15:42:41,698 - src.analysis.clustering - INFO - 最佳聚类数: 2
2025-04-16 15:43:49,594 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 15:43:49,595 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 15:43:49,595 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 15:43:57,617 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 15:43:57,617 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 15:43:57,618 - __main__ - INFO - 初始化CSV存储
2025-04-16 15:43:57,618 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 15:43:57,618 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 15:43:57,624 - __main__ - INFO - 分析时间范围: 2023-01-01 至 2023-12-31
2025-04-16 15:43:57,624 - __main__ - INFO - 分析股票: ['600036', '601398']
2025-04-16 15:43:57,625 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 15:43:57,631 - __main__ - INFO - 从网络获取股票 600036 的历史数据...
2025-04-16 15:43:57,631 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:43:57,632 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:43:57,633 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:43:57,633 - src.data_sources.akshare - INFO - 获取 600036 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 15:43:57,634 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:43:57,634 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 15:43:57,635 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 15:43:57,636 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600036 历史数据
2025-04-16 15:43:57,745 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 600036 历史数据
2025-04-16 15:43:57,745 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600036 历史数据
2025-04-16 15:43:57,839 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 600036 历史数据
2025-04-16 15:43:57,857 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600036.csv，总行数: 506
2025-04-16 15:43:57,858 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 15:43:57,863 - __main__ - INFO - 从网络获取股票 601398 的历史数据...
2025-04-16 15:43:57,864 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:43:57,864 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:43:57,865 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 15:43:57,865 - src.data_sources.akshare - INFO - 获取 601398 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 15:43:57,866 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:43:57,866 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 15:43:57,867 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 15:43:57,868 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 601398 历史数据
2025-04-16 15:43:57,950 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 601398 历史数据
2025-04-16 15:43:57,950 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 601398 历史数据
2025-04-16 15:43:58,041 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 601398 历史数据
2025-04-16 15:43:58,058 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/601398.csv，总行数: 506
2025-04-16 15:43:58,059 - __main__ - INFO - 成功加载 2 支股票的数据，共 484 条记录
2025-04-16 15:43:58,059 - __main__ - INFO - 数据列名: ['日期', '股票代码', '开盘', '收盘', '最高', '最低', '成交量', '成交额', '振幅', '涨跌幅', '涨跌额', '换手率', 'source', 'symbol']
2025-04-16 15:43:58,061 - __main__ - INFO - 重命名后的数据列名: ['date', 'code', 'open', 'close', 'high', 'low', 'volume', 'amount', 'amplitude', 'change_percent', 'change', 'turnover_rate', 'source', 'symbol']
2025-04-16 15:43:59,035 - __main__ - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amount']
2025-04-16 15:43:59,036 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amount']
2025-04-16 15:43:59,135 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 4, 总体惯性: 699.90
2025-04-16 15:43:59,136 - __main__ - INFO - 聚类完成，聚类数: 4
2025-04-16 15:43:59,136 - __main__ - INFO - cluster_0: 232 个样本 (47.93%)
2025-04-16 15:43:59,136 - __main__ - INFO - cluster_1: 200 个样本 (41.32%)
2025-04-16 15:43:59,136 - __main__ - INFO - cluster_2: 10 个样本 (2.07%)
2025-04-16 15:43:59,136 - __main__ - INFO - cluster_3: 42 个样本 (8.68%)
2025-04-16 15:43:59,137 - __main__ - INFO - 生成 clusters 可视化...
2025-04-16 15:43:59,138 - src.analysis.clustering - INFO - PCA解释方差: ['67.73%', '18.30%', '12.39%']
2025-04-16 15:43:59,658 - __main__ - INFO - 图表已保存至: results\cluster_clusters_20250416_154359.png
2025-04-16 15:43:59,673 - __main__ - INFO - 生成 elbow 可视化...
2025-04-16 15:43:59,673 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amount']
2025-04-16 15:43:59,691 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 1, 总体惯性: 3388.00
2025-04-16 15:43:59,692 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amount']
2025-04-16 15:43:59,714 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 2, 总体惯性: 1146.41
2025-04-16 15:43:59,714 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amount']
2025-04-16 15:43:59,740 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 3, 总体惯性: 920.19
2025-04-16 15:43:59,741 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amount']
2025-04-16 15:43:59,771 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 4, 总体惯性: 699.90
2025-04-16 15:43:59,771 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amount']
2025-04-16 15:43:59,802 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 5, 总体惯性: 575.22
2025-04-16 15:43:59,803 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amount']
2025-04-16 15:43:59,879 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 6, 总体惯性: 486.77
2025-04-16 15:43:59,892 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amount']
2025-04-16 15:43:59,940 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 7, 总体惯性: 424.28
2025-04-16 15:43:59,940 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amount']
2025-04-16 15:43:59,977 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 8, 总体惯性: 365.08
2025-04-16 15:43:59,978 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amount']
2025-04-16 15:44:00,019 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 9, 总体惯性: 325.57
2025-04-16 15:44:00,020 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amount']
2025-04-16 15:44:00,061 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 10, 总体惯性: 291.30
2025-04-16 15:44:00,062 - src.analysis.clustering - INFO - 最佳聚类数: 2
2025-04-16 15:44:00,371 - __main__ - INFO - 图表已保存至: results\cluster_elbow_20250416_154400.png
2025-04-16 15:44:00,380 - __main__ - INFO - 生成 feature_distribution 可视化...
2025-04-16 15:44:01,871 - __main__ - INFO - 图表已保存至: results\cluster_feature_distribution_20250416_154400.png
2025-04-16 15:44:01,883 - __main__ - INFO - 生成 centroids 可视化...
2025-04-16 15:44:02,347 - __main__ - INFO - 图表已保存至: results\cluster_centroids_20250416_154401.png
2025-04-16 15:44:02,359 - __main__ - INFO - 聚类结果数据已保存至: results\cluster_results_20250416_154402.csv
2025-04-16 15:44:02,360 - __main__ - INFO - 聚类分析完成
2025-04-16 15:44:02,360 - __main__ - INFO - 程序执行完毕
2025-04-16 16:14:00,263 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:14:00,264 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:14:00,264 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:14:10,358 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 16:14:10,360 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 16:14:10,361 - __main__ - INFO - 初始化CSV存储
2025-04-16 16:14:10,361 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 16:14:10,363 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 16:14:10,387 - __main__ - INFO - 从 akshare 获取 600036 的历史数据...
2025-04-16 16:14:10,387 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:14:10,388 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:14:10,390 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 16:14:10,390 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:14:10,391 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:14:10,392 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 16:14:10,549 - src.data_sources.akshare - ERROR - 获取600036的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 16:14:10,552 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:14:10,553 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:14:10,557 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 16:14:10,558 - src.data_sources.akshare - INFO - 获取 600036 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 16:14:10,559 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:14:10,560 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:14:10,564 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 16:14:10,566 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600036 历史数据
2025-04-16 16:14:10,707 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 600036 历史数据
2025-04-16 16:14:10,708 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600036 历史数据
2025-04-16 16:14:10,816 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 600036 历史数据
2025-04-16 16:14:10,819 - __main__ - INFO - 成功获取 242 条历史数据
2025-04-16 16:14:10,819 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 16:14:10,874 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600036.csv，总行数: 506
2025-04-16 16:14:10,874 - __main__ - INFO - 成功保存 600036 的历史数据
2025-04-16 16:14:10,875 - __main__ - INFO - 程序执行完毕
2025-04-16 16:14:44,083 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:14:44,084 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:14:44,084 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:14:53,079 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 16:14:53,080 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 16:14:53,080 - __main__ - INFO - 初始化CSV存储
2025-04-16 16:14:53,081 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 16:14:53,081 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 16:14:53,094 - __main__ - INFO - 从 akshare 获取 2 只股票的实时数据...
2025-04-16 16:14:53,094 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 16:15:25,310 - src.data_sources.akshare - INFO - 成功获取A股实时行情，共 5410 只股票
2025-04-16 16:15:25,311 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:15:25,312 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:15:25,313 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 16:15:25,313 - src.data_sources.akshare - INFO - 获取 600519 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 16:15:25,314 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:15:25,314 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:15:25,316 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 16:15:25,317 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600519 的实时数据...
2025-04-16 16:15:25,318 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600519 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 16:15:25,318 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600519 的当日数据...
2025-04-16 16:15:25,396 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600519 的当日数据
2025-04-16 16:15:25,396 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600519 的行情数据...
2025-04-16 16:15:28,921 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600519 的行情数据
2025-04-16 16:15:28,921 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 16:15:28,922 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 16:15:28,923 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 16:15:28,924 - src.data_sources.akshare - INFO - 获取 601398 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 16:15:28,925 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 16:15:28,925 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 16:15:28,926 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 16:15:28,928 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601398 的实时数据...
2025-04-16 16:15:28,928 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 601398 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 16:15:28,929 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 601398 的当日数据...
2025-04-16 16:15:29,012 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 601398 的当日数据
2025-04-16 16:15:29,013 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 601398 的行情数据...
2025-04-16 16:15:32,201 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 601398 的行情数据
2025-04-16 16:15:32,202 - src.data_sources.akshare - INFO - 成功获取 4 只股票的实时数据
2025-04-16 16:15:32,204 - __main__ - INFO - 成功获取 4 条实时数据
2025-04-16 16:15:32,204 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 16:15:32,207 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\realtime/all.csv，行数: 4
2025-04-16 16:15:32,208 - __main__ - INFO - 成功保存实时数据
2025-04-16 16:15:32,208 - __main__ - INFO - 程序执行完毕
2025-04-16 16:15:43,745 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:15:43,746 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:15:43,746 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:15:52,434 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 16:15:52,435 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 16:15:52,436 - __main__ - INFO - 初始化CSV存储
2025-04-16 16:15:52,437 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 16:15:52,438 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 16:28:59,846 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:28:59,846 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:28:59,846 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:29:27,817 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:29:27,818 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:29:27,818 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:29:36,075 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 16:29:36,075 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 16:29:36,076 - __main__ - INFO - 初始化CSV存储
2025-04-16 16:29:36,076 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 16:29:36,076 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 16:29:36,085 - __main__ - INFO - 从 akshare 获取 5 只股票的实时数据...
2025-04-16 16:29:36,085 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 16:30:10,004 - src.data_sources.akshare - INFO - 成功获取A股实时行情，共 5410 只股票
2025-04-16 16:30:10,004 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:30:10,004 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:30:10,005 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 16:30:10,006 - src.data_sources.akshare - INFO - 获取 600036 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 16:30:10,006 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:30:10,006 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:30:10,007 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 16:30:10,009 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600036 的实时数据...
2025-04-16 16:30:10,009 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600036 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 16:30:10,009 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600036 的当日数据...
2025-04-16 16:30:10,144 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600036 的当日数据
2025-04-16 16:30:10,144 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600036 的行情数据...
2025-04-16 16:30:12,609 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600036 的行情数据
2025-04-16 16:30:12,609 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 16:30:12,610 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 16:30:12,611 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 16:30:12,611 - src.data_sources.akshare - INFO - 获取 601398 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 16:30:12,612 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 16:30:12,612 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 16:30:12,613 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 16:30:12,615 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601398 的实时数据...
2025-04-16 16:30:12,615 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 601398 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 16:30:12,615 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 601398 的当日数据...
2025-04-16 16:30:12,695 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 601398 的当日数据
2025-04-16 16:30:12,695 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 601398 的行情数据...
2025-04-16 16:30:15,584 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 601398 的行情数据
2025-04-16 16:30:15,585 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 16:30:15,585 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 16:30:15,586 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 16:30:15,587 - src.data_sources.akshare - INFO - 获取 600276 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 16:30:15,587 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 16:30:15,588 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 16:30:15,588 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 16:30:15,589 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600276 的实时数据...
2025-04-16 16:30:15,590 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600276 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 16:30:15,590 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600276 的当日数据...
2025-04-16 16:30:15,660 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600276 的当日数据
2025-04-16 16:30:15,660 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600276 的行情数据...
2025-04-16 16:30:17,931 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600276 的行情数据
2025-04-16 16:30:17,932 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:30:17,932 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:30:17,933 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 16:30:17,933 - src.data_sources.akshare - INFO - 获取 600519 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 16:30:17,934 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:30:17,934 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:30:17,935 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 16:30:17,936 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600519 的实时数据...
2025-04-16 16:30:17,937 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600519 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 16:30:17,937 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600519 的当日数据...
2025-04-16 16:30:18,002 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600519 的当日数据
2025-04-16 16:30:18,003 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600519 的行情数据...
2025-04-16 16:30:20,216 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600519 的行情数据
2025-04-16 16:30:20,217 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 16:30:20,217 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 16:30:20,218 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 16:30:20,218 - src.data_sources.akshare - INFO - 获取 601288 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 16:30:20,219 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 16:30:20,219 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 16:30:20,220 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 16:30:20,221 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601288 的实时数据...
2025-04-16 16:30:20,222 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 601288 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 16:30:20,222 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 601288 的当日数据...
2025-04-16 16:30:20,292 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 601288 的当日数据
2025-04-16 16:30:20,293 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 601288 的行情数据...
2025-04-16 16:30:22,645 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 601288 的行情数据
2025-04-16 16:30:22,645 - src.data_sources.akshare - INFO - 成功获取 10 只股票的实时数据
2025-04-16 16:30:22,648 - __main__ - INFO - 成功获取 10 条实时数据
2025-04-16 16:30:22,648 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 16:30:22,652 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\realtime/all.csv，行数: 10
2025-04-16 16:30:22,653 - __main__ - INFO - 成功保存实时数据
2025-04-16 16:30:22,654 - __main__ - INFO - 程序执行完毕
2025-04-16 16:31:16,763 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:31:16,764 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:31:16,764 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:31:25,310 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 16:31:25,312 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 16:31:25,313 - __main__ - INFO - 初始化CSV存储
2025-04-16 16:31:25,314 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 16:31:25,315 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 16:31:25,333 - __main__ - INFO - 从 akshare 获取 5 只股票的实时数据...
2025-04-16 16:31:25,334 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 16:31:25,479 - src.data_sources.akshare - WARNING - 获取A股全部实时行情失败: Can not decode value starting with character '<'
2025-04-16 16:31:25,480 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:31:25,481 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:31:25,482 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 16:31:25,483 - src.data_sources.akshare - INFO - 获取 600036 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 16:31:25,483 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:31:25,483 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:31:25,485 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 16:31:25,485 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600036 的实时数据...
2025-04-16 16:31:25,486 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600036 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 16:31:25,486 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600036 的当日数据...
2025-04-16 16:31:25,576 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600036 的当日数据
2025-04-16 16:31:25,577 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600036 的行情数据...
2025-04-16 16:31:28,289 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600036 的行情数据
2025-04-16 16:31:28,289 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 16:31:28,290 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 16:31:28,291 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 16:31:28,292 - src.data_sources.akshare - INFO - 获取 601398 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 16:31:28,292 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 16:31:28,293 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 16:31:28,294 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 16:31:28,295 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601398 的实时数据...
2025-04-16 16:31:28,295 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 601398 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 16:31:28,296 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 601398 的当日数据...
2025-04-16 16:31:28,375 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 601398 的当日数据
2025-04-16 16:31:28,376 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 601398 的行情数据...
2025-04-16 16:31:31,121 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 601398 的行情数据
2025-04-16 16:31:31,121 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 16:31:31,122 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 16:31:31,123 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 16:31:31,123 - src.data_sources.akshare - INFO - 获取 600276 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 16:31:31,123 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 16:31:31,124 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 16:31:31,124 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 16:31:31,125 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600276 的实时数据...
2025-04-16 16:31:31,125 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600276 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 16:31:31,125 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600276 的当日数据...
2025-04-16 16:31:31,267 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600276 的当日数据
2025-04-16 16:31:31,268 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600276 的行情数据...
2025-04-16 16:31:33,869 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600276 的行情数据
2025-04-16 16:31:33,869 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:31:33,870 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:31:33,871 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 16:31:33,872 - src.data_sources.akshare - INFO - 获取 600519 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 16:31:33,872 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:31:33,873 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:31:33,874 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 16:31:33,875 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600519 的实时数据...
2025-04-16 16:31:33,875 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600519 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 16:31:33,876 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600519 的当日数据...
2025-04-16 16:31:33,959 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600519 的当日数据
2025-04-16 16:31:33,959 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600519 的行情数据...
2025-04-16 16:31:36,446 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600519 的行情数据
2025-04-16 16:31:36,447 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 16:31:36,447 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 16:31:36,448 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 16:31:36,449 - src.data_sources.akshare - INFO - 获取 601288 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 16:31:36,449 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 16:31:36,450 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 16:31:36,451 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 16:31:36,452 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601288 的实时数据...
2025-04-16 16:31:36,452 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 601288 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 16:31:36,452 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 601288 的当日数据...
2025-04-16 16:31:36,529 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 601288 的当日数据
2025-04-16 16:31:36,529 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 601288 的行情数据...
2025-04-16 16:31:39,083 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 601288 的行情数据
2025-04-16 16:31:39,084 - src.data_sources.akshare - INFO - 成功获取 10 只股票的实时数据
2025-04-16 16:31:39,085 - __main__ - INFO - 成功获取 10 条实时数据
2025-04-16 16:31:39,085 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 16:31:39,087 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\realtime/all.csv，行数: 10
2025-04-16 16:31:39,088 - __main__ - INFO - 成功保存实时数据
2025-04-16 16:31:39,088 - __main__ - INFO - 程序执行完毕
2025-04-16 16:33:03,547 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:33:03,547 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:33:03,547 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:33:12,459 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:33:12,459 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:33:12,460 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:33:20,717 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 16:33:20,718 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 16:33:20,719 - __main__ - INFO - 初始化CSV存储
2025-04-16 16:33:20,720 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 16:33:20,722 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 16:33:20,741 - __main__ - INFO - 使用 akshare 搜索 '保险'...
2025-04-16 16:33:20,752 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601336 -> 输出 601336
2025-04-16 16:33:20,754 - src.data_sources.akshare - INFO - 股票 601336 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '新华保险', 'exists': True}
2025-04-16 16:33:20,755 - __main__ - INFO - 找到 1 个匹配结果:
2025-04-16 16:33:20,767 - __main__ - INFO - 程序执行完毕
2025-04-16 16:33:46,982 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:33:46,983 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:33:46,983 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:33:54,743 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 16:33:54,744 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 16:33:54,745 - __main__ - INFO - 初始化CSV存储
2025-04-16 16:33:54,746 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 16:33:54,748 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 16:33:54,766 - __main__ - INFO - 识别股票代码 600519 的信息...
2025-04-16 16:33:54,766 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:33:54,768 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 16:33:54,769 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:33:54,769 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:33:54,771 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 16:33:54,772 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:33:54,773 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:33:54,775 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 16:33:54,910 - src.data_sources.akshare - ERROR - 获取600519的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 16:33:54,912 - __main__ - INFO - 识别股票代码 1279 的信息...
2025-04-16 16:33:54,913 - src.data_sources.akshare - INFO - 股票代码修正: 添加前导零 -> 001279
2025-04-16 16:33:54,914 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 16:33:54,917 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 16:33:54,919 - src.data_sources.akshare - INFO - 股票代码修正: 添加前导零 -> 001279
2025-04-16 16:33:54,919 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 16:33:54,920 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 16:33:54,924 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 16:33:54,925 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 16:33:54,926 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 16:33:54,930 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 16:33:55,000 - src.data_sources.akshare - ERROR - 获取1279的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 16:33:55,002 - __main__ - INFO - 识别股票代码 300059 的信息...
2025-04-16 16:33:55,003 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 16:33:55,006 - src.data_sources.akshare - INFO - 股票 300059 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东方财富', 'exists': True}
2025-04-16 16:33:55,008 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 16:33:55,008 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 16:33:55,012 - src.data_sources.akshare - INFO - 股票 300059 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东方财富', 'exists': True}
2025-04-16 16:33:55,013 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 16:33:55,014 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 16:33:55,017 - src.data_sources.akshare - INFO - 股票 300059 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东方财富', 'exists': True}
2025-04-16 16:33:55,089 - src.data_sources.akshare - ERROR - 获取300059的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 16:33:55,091 - __main__ - INFO - 识别股票代码 688001 的信息...
2025-04-16 16:33:55,092 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 16:33:55,095 - src.data_sources.akshare - INFO - 股票 688001 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华兴源创', 'exists': True}
2025-04-16 16:33:55,097 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 16:33:55,098 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 16:33:55,101 - src.data_sources.akshare - INFO - 股票 688001 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华兴源创', 'exists': True}
2025-04-16 16:33:55,102 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 16:33:55,103 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 16:33:55,106 - src.data_sources.akshare - INFO - 股票 688001 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华兴源创', 'exists': True}
2025-04-16 16:33:55,211 - src.data_sources.akshare - ERROR - 获取688001的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 16:33:55,213 - __main__ - INFO - 成功识别 4 只股票的信息:
2025-04-16 16:33:55,238 - __main__ - INFO - 程序执行完毕
2025-04-16 16:35:46,344 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:35:46,345 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:35:46,345 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:35:53,867 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 16:35:53,869 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 16:35:53,870 - __main__ - INFO - 初始化CSV存储
2025-04-16 16:35:53,871 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 16:35:53,872 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 16:35:53,892 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 16:35:53,892 - __main__ - INFO - 分析股票: ['600519', '603681']
2025-04-16 16:35:53,893 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 16:35:53,900 - __main__ - INFO - 加载股票 603681 的数据...
2025-04-16 16:35:53,901 - src.storage.csv_storage - WARNING - 文件 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/603681.csv 不存在
2025-04-16 16:35:53,902 - __main__ - INFO - 从网络获取股票 603681 的历史数据...
2025-04-16 16:35:53,903 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603681 -> 输出 603681
2025-04-16 16:35:53,903 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603681 -> 输出 603681
2025-04-16 16:35:53,905 - src.data_sources.akshare - INFO - 股票 603681 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永冠新材', 'exists': True}
2025-04-16 16:35:53,906 - src.data_sources.akshare - INFO - 获取 603681 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 16:35:53,906 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603681 -> 输出 603681
2025-04-16 16:35:53,907 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603681 -> 输出 603681
2025-04-16 16:35:53,909 - src.data_sources.akshare - INFO - 股票 603681 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永冠新材', 'exists': True}
2025-04-16 16:35:53,910 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 603681 历史数据
2025-04-16 16:35:54,029 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 603681 历史数据
2025-04-16 16:35:54,030 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 603681 历史数据
2025-04-16 16:35:54,120 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 603681 历史数据
2025-04-16 16:35:54,130 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/603681.csv，行数: 58
2025-04-16 16:35:54,134 - __main__ - INFO - 成功加载 2 支股票的数据，共 80 条记录
2025-04-16 16:35:54,134 - __main__ - INFO - 数据列名: ['date', '股票代码', 'open', 'close', 'high', 'low', 'volume', 'amount', 'amplitude', 'change_percent', 'change', 'turnover_rate', 'source', 'symbol', '日期', '开盘', '收盘', '最高', '最低', '成交量', '成交额', '振幅', '涨跌幅', '涨跌额', '换手率']
2025-04-16 16:35:54,136 - __main__ - INFO - 重命名后的数据列名: ['date', 'code', 'open', 'close', 'high', 'low', 'volume', 'amount', 'amplitude', 'change_percent', 'change', 'turnover_rate', 'source', 'symbol', 'date', 'open', 'close', 'high', 'low', 'volume', 'amount', 'amplitude', 'change_percent', 'change', 'turnover_rate']
2025-04-16 16:35:55,032 - __main__ - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:35:55,033 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:35:55,034 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:35:55,139 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 3, 总体惯性: 436.83
2025-04-16 16:35:55,140 - __main__ - INFO - 聚类完成，聚类数: 3
2025-04-16 16:35:55,140 - __main__ - INFO - cluster_0: 58 个样本 (72.50%)
2025-04-16 16:35:55,140 - __main__ - INFO - cluster_1: 18 个样本 (22.50%)
2025-04-16 16:35:55,141 - __main__ - INFO - cluster_2: 4 个样本 (5.00%)
2025-04-16 16:35:55,141 - __main__ - INFO - 生成 clusters 可视化...
2025-04-16 16:35:55,142 - src.analysis.clustering - INFO - PCA解释方差: ['33.36%', '33.01%']
2025-04-16 16:35:55,593 - __main__ - INFO - 图表已保存至: results\cluster_clusters_20250416_163555.png
2025-04-16 16:35:55,608 - __main__ - INFO - 生成 elbow 可视化...
2025-04-16 16:35:55,609 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:35:55,610 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:35:55,641 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 1, 总体惯性: 960.00
2025-04-16 16:35:55,641 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:35:55,642 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:35:55,677 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 2, 总体惯性: 639.78
2025-04-16 16:35:55,677 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:35:55,678 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:35:55,710 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 3, 总体惯性: 436.83
2025-04-16 16:35:55,710 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:35:55,711 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:35:55,747 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 4, 总体惯性: 317.96
2025-04-16 16:35:55,748 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:35:55,749 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:35:55,791 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 5, 总体惯性: 258.89
2025-04-16 16:35:55,791 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:35:55,792 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:35:55,837 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 6, 总体惯性: 203.40
2025-04-16 16:35:55,837 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:35:55,838 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:35:55,889 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 7, 总体惯性: 161.28
2025-04-16 16:35:55,890 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:35:55,890 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:35:55,941 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 8, 总体惯性: 131.57
2025-04-16 16:35:55,941 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:35:55,942 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:35:55,997 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 9, 总体惯性: 115.08
2025-04-16 16:35:55,998 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:35:55,998 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:35:56,061 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 10, 总体惯性: 104.45
2025-04-16 16:35:56,062 - src.analysis.clustering - INFO - 最佳聚类数: 2
2025-04-16 16:35:56,326 - __main__ - INFO - 图表已保存至: results\cluster_elbow_20250416_163556.png
2025-04-16 16:35:56,335 - __main__ - INFO - 生成 feature_distribution 可视化...
2025-04-16 16:35:57,956 - __main__ - INFO - 图表已保存至: results\cluster_feature_distribution_20250416_163556.png
2025-04-16 16:35:57,966 - __main__ - INFO - 生成 centroids 可视化...
2025-04-16 16:35:58,389 - __main__ - INFO - 图表已保存至: results\cluster_centroids_20250416_163558.png
2025-04-16 16:35:58,399 - __main__ - INFO - 聚类结果数据已保存至: results\cluster_results_20250416_163558.csv
2025-04-16 16:35:58,400 - __main__ - INFO - 聚类分析完成
2025-04-16 16:35:58,401 - __main__ - INFO - 程序执行完毕
2025-04-16 16:36:56,726 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:36:56,726 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:36:56,727 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:37:04,063 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 16:37:04,064 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 16:37:04,065 - __main__ - INFO - 初始化CSV存储
2025-04-16 16:37:04,066 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 16:37:04,068 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 16:37:04,091 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 16:37:04,091 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 16:37:04,092 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 16:37:04,101 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 16:37:04,113 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 16:37:04,121 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 16:37:04,122 - src.storage.csv_storage - WARNING - 文件 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/1.csv 不存在
2025-04-16 16:37:04,122 - __main__ - INFO - 从网络获取股票 1 的历史数据...
2025-04-16 16:37:04,123 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 16:37:04,123 - src.data_sources.akshare - INFO - 检测到指数代码 000001，使用指数接口获取数据
2025-04-16 16:37:04,462 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/1.csv，行数: 57
2025-04-16 16:37:04,466 - __main__ - INFO - 成功加载 4 支股票的数据，共 123 条记录
2025-04-16 16:37:04,466 - __main__ - INFO - 数据列名: ['date', '股票代码', 'open', 'close', 'high', 'low', 'volume', 'amount', 'amplitude', 'change_percent', 'change', 'turnover_rate', 'source', 'symbol', '日期', '开盘', '收盘', '最高', '最低', '成交量', '成交额', '振幅', '涨跌幅', '涨跌额', '换手率']
2025-04-16 16:37:04,467 - __main__ - INFO - 重命名后的数据列名: ['date', 'code', 'open', 'close', 'high', 'low', 'volume', 'amount', 'amplitude', 'change_percent', 'change', 'turnover_rate', 'source', 'symbol', 'date', 'open', 'close', 'high', 'low', 'volume', 'amount', 'amplitude', 'change_percent', 'change', 'turnover_rate']
2025-04-16 16:37:05,356 - __main__ - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:37:05,356 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:37:05,357 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:37:05,461 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 3, 总体惯性: 128.56
2025-04-16 16:37:05,461 - __main__ - INFO - 聚类完成，聚类数: 3
2025-04-16 16:37:05,462 - __main__ - INFO - cluster_0: 57 个样本 (46.34%)
2025-04-16 16:37:05,462 - __main__ - INFO - cluster_1: 44 个样本 (35.77%)
2025-04-16 16:37:05,462 - __main__ - INFO - cluster_2: 22 个样本 (17.89%)
2025-04-16 16:37:05,462 - __main__ - INFO - 生成 clusters 可视化...
2025-04-16 16:37:05,463 - src.analysis.clustering - INFO - PCA解释方差: ['81.01%', '16.63%']
2025-04-16 16:37:05,917 - __main__ - INFO - 图表已保存至: results\cluster_clusters_20250416_163705.png
2025-04-16 16:37:05,933 - __main__ - INFO - 生成 elbow 可视化...
2025-04-16 16:37:05,934 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:37:05,935 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:37:05,969 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 1, 总体惯性: 738.00
2025-04-16 16:37:05,970 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:37:05,971 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:37:06,004 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 2, 总体惯性: 192.52
2025-04-16 16:37:06,005 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:37:06,006 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:37:06,037 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 3, 总体惯性: 128.56
2025-04-16 16:37:06,037 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:37:06,038 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:37:06,070 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 4, 总体惯性: 79.19
2025-04-16 16:37:06,071 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:37:06,071 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:37:06,110 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 5, 总体惯性: 61.72
2025-04-16 16:37:06,111 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:37:06,111 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:37:06,155 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 6, 总体惯性: 47.44
2025-04-16 16:37:06,155 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:37:06,156 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:37:06,202 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 7, 总体惯性: 37.05
2025-04-16 16:37:06,203 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:37:06,203 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:37:06,251 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 8, 总体惯性: 26.80
2025-04-16 16:37:06,251 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:37:06,252 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:37:06,302 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 9, 总体惯性: 22.57
2025-04-16 16:37:06,303 - src.analysis.clustering - INFO - 使用特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:37:06,304 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 16:37:06,358 - src.analysis.clustering - INFO - KMeans聚类完成, 聚类数: 10, 总体惯性: 18.81
2025-04-16 16:37:06,358 - src.analysis.clustering - INFO - 最佳聚类数: 2
2025-04-16 16:37:06,637 - __main__ - INFO - 图表已保存至: results\cluster_elbow_20250416_163706.png
2025-04-16 16:37:06,647 - __main__ - INFO - 生成 feature_distribution 可视化...
2025-04-16 16:37:08,241 - __main__ - INFO - 图表已保存至: results\cluster_feature_distribution_20250416_163707.png
2025-04-16 16:37:08,253 - __main__ - INFO - 生成 centroids 可视化...
2025-04-16 16:37:08,689 - __main__ - INFO - 图表已保存至: results\cluster_centroids_20250416_163708.png
2025-04-16 16:37:08,702 - __main__ - INFO - 聚类结果数据已保存至: results\cluster_results_20250416_163708.csv
2025-04-16 16:37:08,702 - __main__ - INFO - 聚类分析完成
2025-04-16 16:37:08,703 - __main__ - INFO - 程序执行完毕
2025-04-16 16:44:51,700 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:44:51,700 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:44:51,700 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:47:18,136 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:47:18,136 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:47:18,136 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:47:26,226 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 16:47:26,227 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 16:47:26,227 - __main__ - INFO - 初始化CSV存储
2025-04-16 16:47:26,228 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 16:47:26,229 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 16:47:26,240 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 16:47:26,241 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 16:47:26,241 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 16:47:26,248 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 16:47:26,258 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 16:47:26,265 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 16:47:26,269 - __main__ - WARNING - 转换列 open 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,269 - __main__ - WARNING - 转换列 close 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,270 - __main__ - WARNING - 转换列 high 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,270 - __main__ - WARNING - 转换列 low 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,271 - __main__ - WARNING - 转换列 volume 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,271 - __main__ - WARNING - 转换列 amount 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,271 - __main__ - WARNING - 转换列 amplitude 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,271 - __main__ - WARNING - 转换列 change_percent 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,272 - __main__ - WARNING - 转换列 change 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,272 - __main__ - WARNING - 转换列 turnover_rate 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,273 - __main__ - WARNING - 转换列 open 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,273 - __main__ - WARNING - 转换列 close 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,273 - __main__ - WARNING - 转换列 high 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,274 - __main__ - WARNING - 转换列 low 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,274 - __main__ - WARNING - 转换列 volume 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,274 - __main__ - WARNING - 转换列 amount 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,274 - __main__ - WARNING - 转换列 amplitude 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,275 - __main__ - WARNING - 转换列 change_percent 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,275 - __main__ - WARNING - 转换列 change 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,275 - __main__ - WARNING - 转换列 turnover_rate 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,275 - __main__ - WARNING - 转换列 open 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,276 - __main__ - WARNING - 转换列 close 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,276 - __main__ - WARNING - 转换列 high 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,276 - __main__ - WARNING - 转换列 low 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,277 - __main__ - WARNING - 转换列 volume 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,277 - __main__ - WARNING - 转换列 amount 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,277 - __main__ - WARNING - 转换列 amplitude 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,277 - __main__ - WARNING - 转换列 change_percent 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,277 - __main__ - WARNING - 转换列 change 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,278 - __main__ - WARNING - 转换列 turnover_rate 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,278 - __main__ - WARNING - 转换列 open 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,278 - __main__ - WARNING - 转换列 close 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,279 - __main__ - WARNING - 转换列 high 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,279 - __main__ - WARNING - 转换列 low 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,279 - __main__ - WARNING - 转换列 volume 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,279 - __main__ - WARNING - 转换列 change_percent 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,279 - __main__ - WARNING - 转换列 change 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,280 - __main__ - WARNING - 转换列 turnover_rate 为数值类型时出错: cannot access local variable 'pd' where it is not associated with a value
2025-04-16 16:47:26,280 - __main__ - INFO - 所有数据集共有的列: ['high', 'change', 'source', 'low', 'change_percent', 'symbol', 'close', 'volume', 'open', 'code', 'turnover_rate', 'date']
2025-04-16 16:47:26,282 - __main__ - ERROR - 程序执行过程中发生错误: Reindexing only valid with uniquely valued Index objects
Traceback (most recent call last):
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 852, in <module>
    main()
    ~~~~^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 554, in main
    run_clustering_analysis(args, data_sources['akshare'], storage['csv'])
    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 731, in run_clustering_analysis
    combined_data = pd.concat(all_data, ignore_index=True)
  File "C:\Users\laisn\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\reshape\concat.py", line 395, in concat
    return op.get_result()
           ~~~~~~~~~~~~~^^
  File "C:\Users\laisn\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    indexers[ax] = obj_labels.get_indexer(new_labels)
                   ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\laisn\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\indexes\base.py", line 3885, in get_indexer
    raise InvalidIndexError(self._requires_unique_msg)
pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects
2025-04-16 16:51:54,628 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:51:54,628 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:51:54,628 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:52:03,325 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 16:52:03,326 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 16:52:03,328 - __main__ - INFO - 初始化CSV存储
2025-04-16 16:52:03,329 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 16:52:03,330 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 16:52:03,613 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 16:52:03,614 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 16:52:03,614 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 16:52:03,618 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 16:52:03,625 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 16:52:03,630 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 16:52:03,639 - __main__ - WARNING - 转换列 open 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,640 - __main__ - WARNING - 转换列 close 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,641 - __main__ - WARNING - 转换列 high 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,641 - __main__ - WARNING - 转换列 low 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,642 - __main__ - WARNING - 转换列 volume 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,642 - __main__ - WARNING - 转换列 amount 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,643 - __main__ - WARNING - 转换列 amplitude 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,643 - __main__ - WARNING - 转换列 change_percent 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,644 - __main__ - WARNING - 转换列 change 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,644 - __main__ - WARNING - 转换列 turnover_rate 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,646 - __main__ - WARNING - 转换列 open 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,646 - __main__ - WARNING - 转换列 close 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,647 - __main__ - WARNING - 转换列 high 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,648 - __main__ - WARNING - 转换列 low 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,648 - __main__ - WARNING - 转换列 volume 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,649 - __main__ - WARNING - 转换列 amount 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,650 - __main__ - WARNING - 转换列 amplitude 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,650 - __main__ - WARNING - 转换列 change_percent 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,651 - __main__ - WARNING - 转换列 change 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,651 - __main__ - WARNING - 转换列 turnover_rate 为数值类型时出错: 'DataFrame' object has no attribute 'str'
2025-04-16 16:52:03,656 - __main__ - INFO - 所有数据集共有的列: ['index', 'source', 'change_percent', 'turnover_rate', 'symbol', 'high', 'stock_id', 'open', 'close', 'low', 'volume', 'code', 'change', 'date']
2025-04-16 16:52:03,660 - __main__ - ERROR - 合并数据时出错: Reindexing only valid with uniquely valued Index objects
2025-04-16 16:52:03,660 - __main__ - INFO - 尝试使用最小公共列进行合并...
2025-04-16 16:52:03,662 - __main__ - ERROR - 程序执行过程中发生错误: Reindexing only valid with uniquely valued Index objects
Traceback (most recent call last):
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 750, in run_clustering_analysis
    combined_data = pd.concat(processed_data, ignore_index=True)
  File "C:\Users\laisn\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\reshape\concat.py", line 395, in concat
    return op.get_result()
           ~~~~~~~~~~~~~^^
  File "C:\Users\laisn\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    indexers[ax] = obj_labels.get_indexer(new_labels)
                   ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\laisn\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\indexes\base.py", line 3885, in get_indexer
    raise InvalidIndexError(self._requires_unique_msg)
pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 901, in <module>
    main()
    ~~~~^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 554, in main
    run_clustering_analysis(args, data_sources['akshare'], storage['csv'])
    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 773, in run_clustering_analysis
    combined_data = pd.concat(all_data, ignore_index=True)
  File "C:\Users\laisn\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\reshape\concat.py", line 395, in concat
    return op.get_result()
           ~~~~~~~~~~~~~^^
  File "C:\Users\laisn\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\reshape\concat.py", line 680, in get_result
    indexers[ax] = obj_labels.get_indexer(new_labels)
                   ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\laisn\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\core\indexes\base.py", line 3885, in get_indexer
    raise InvalidIndexError(self._requires_unique_msg)
pandas.errors.InvalidIndexError: Reindexing only valid with uniquely valued Index objects
2025-04-16 16:54:25,547 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:54:25,547 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:54:25,547 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:54:32,414 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 16:54:32,414 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 16:54:32,415 - __main__ - INFO - 初始化CSV存储
2025-04-16 16:54:32,416 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 16:54:32,417 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 16:54:33,330 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 16:54:33,331 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 16:54:33,332 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 16:54:33,332 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 16:54:33,342 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:54:33,343 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 16:54:33,344 - __main__ - ERROR - 加载股票 600519 数据时出错: 'list' object has no attribute 'iloc'
2025-04-16 16:54:33,344 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 16:54:33,356 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 16:54:33,357 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 16:54:33,358 - __main__ - ERROR - 加载股票 601398 数据时出错: 'list' object has no attribute 'iloc'
2025-04-16 16:54:33,358 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 16:54:33,368 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 16:54:33,369 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 16:54:33,370 - __main__ - ERROR - 加载股票 600036 数据时出错: 'list' object has no attribute 'iloc'
2025-04-16 16:54:33,370 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 16:54:33,379 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 16:54:33,380 - src.data_sources.akshare - INFO - 股票 000001 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '平安银行', 'exists': True}
2025-04-16 16:54:33,381 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000010 -> 输出 000010
2025-04-16 16:54:33,382 - src.data_sources.akshare - INFO - 股票 000010 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '美丽生态', 'exists': True}
2025-04-16 16:54:33,382 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000011 -> 输出 000011
2025-04-16 16:54:33,383 - src.data_sources.akshare - INFO - 股票 000011 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '深物业A', 'exists': True}
2025-04-16 16:54:33,383 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000012 -> 输出 000012
2025-04-16 16:54:33,384 - src.data_sources.akshare - INFO - 股票 000012 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '南  玻Ａ', 'exists': True}
2025-04-16 16:54:33,384 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000014 -> 输出 000014
2025-04-16 16:54:33,385 - src.data_sources.akshare - INFO - 股票 000014 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '沙河股份', 'exists': True}
2025-04-16 16:54:33,385 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000016 -> 输出 000016
2025-04-16 16:54:33,386 - src.data_sources.akshare - INFO - 股票 000016 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '深康佳Ａ', 'exists': True}
2025-04-16 16:54:33,387 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000017 -> 输出 000017
2025-04-16 16:54:33,387 - src.data_sources.akshare - INFO - 股票 000017 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '深中华A', 'exists': True}
2025-04-16 16:54:33,388 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000019 -> 输出 000019
2025-04-16 16:54:33,389 - src.data_sources.akshare - INFO - 股票 000019 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '深粮控股', 'exists': True}
2025-04-16 16:54:33,390 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000021 -> 输出 000021
2025-04-16 16:54:33,390 - src.data_sources.akshare - INFO - 股票 000021 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '深科技', 'exists': True}
2025-04-16 16:54:33,391 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000031 -> 输出 000031
2025-04-16 16:54:33,392 - src.data_sources.akshare - INFO - 股票 000031 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '大悦城', 'exists': True}
2025-04-16 16:54:33,392 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000061 -> 输出 000061
2025-04-16 16:54:33,393 - src.data_sources.akshare - INFO - 股票 000061 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '农 产 品', 'exists': True}
2025-04-16 16:54:33,394 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000100 -> 输出 000100
2025-04-16 16:54:33,394 - src.data_sources.akshare - INFO - 股票 000100 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': 'TCL科技', 'exists': True}
2025-04-16 16:54:33,395 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000151 -> 输出 000151
2025-04-16 16:54:33,396 - src.data_sources.akshare - INFO - 股票 000151 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中成股份', 'exists': True}
2025-04-16 16:54:33,396 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000153 -> 输出 000153
2025-04-16 16:54:33,397 - src.data_sources.akshare - INFO - 股票 000153 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '丰原药业', 'exists': True}
2025-04-16 16:54:33,398 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000155 -> 输出 000155
2025-04-16 16:54:33,399 - src.data_sources.akshare - INFO - 股票 000155 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '川能动力', 'exists': True}
2025-04-16 16:54:33,399 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000156 -> 输出 000156
2025-04-16 16:54:33,400 - src.data_sources.akshare - INFO - 股票 000156 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '华数传媒', 'exists': True}
2025-04-16 16:54:33,401 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000157 -> 输出 000157
2025-04-16 16:54:33,401 - src.data_sources.akshare - INFO - 股票 000157 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中联重科', 'exists': True}
2025-04-16 16:54:33,402 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000158 -> 输出 000158
2025-04-16 16:54:33,402 - src.data_sources.akshare - INFO - 股票 000158 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '常山北明', 'exists': True}
2025-04-16 16:54:33,403 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000159 -> 输出 000159
2025-04-16 16:54:33,403 - src.data_sources.akshare - INFO - 股票 000159 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '国际实业', 'exists': True}
2025-04-16 16:54:33,403 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000166 -> 输出 000166
2025-04-16 16:54:33,404 - src.data_sources.akshare - INFO - 股票 000166 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '申万宏源', 'exists': True}
2025-04-16 16:54:33,405 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000301 -> 输出 000301
2025-04-16 16:54:33,405 - src.data_sources.akshare - INFO - 股票 000301 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '东方盛虹', 'exists': True}
2025-04-16 16:54:33,406 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000401 -> 输出 000401
2025-04-16 16:54:33,406 - src.data_sources.akshare - INFO - 股票 000401 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '冀东水泥', 'exists': True}
2025-04-16 16:54:33,407 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000410 -> 输出 000410
2025-04-16 16:54:33,408 - src.data_sources.akshare - INFO - 股票 000410 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '沈阳机床', 'exists': True}
2025-04-16 16:54:33,408 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000411 -> 输出 000411
2025-04-16 16:54:33,410 - src.data_sources.akshare - INFO - 股票 000411 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '英特集团', 'exists': True}
2025-04-16 16:54:33,410 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000415 -> 输出 000415
2025-04-16 16:54:33,411 - src.data_sources.akshare - INFO - 股票 000415 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '渤海租赁', 'exists': True}
2025-04-16 16:54:33,411 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000417 -> 输出 000417
2025-04-16 16:54:33,412 - src.data_sources.akshare - INFO - 股票 000417 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '合百集团', 'exists': True}
2025-04-16 16:54:33,412 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000419 -> 输出 000419
2025-04-16 16:54:33,413 - src.data_sources.akshare - INFO - 股票 000419 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '通程控股', 'exists': True}
2025-04-16 16:54:33,414 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000421 -> 输出 000421
2025-04-16 16:54:33,415 - src.data_sources.akshare - INFO - 股票 000421 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '南京公用', 'exists': True}
2025-04-16 16:54:33,415 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000501 -> 输出 000501
2025-04-16 16:54:33,416 - src.data_sources.akshare - INFO - 股票 000501 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '武商集团', 'exists': True}
2025-04-16 16:54:33,417 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000510 -> 输出 000510
2025-04-16 16:54:33,417 - src.data_sources.akshare - INFO - 股票 000510 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '新金路', 'exists': True}
2025-04-16 16:54:33,418 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000513 -> 输出 000513
2025-04-16 16:54:33,419 - src.data_sources.akshare - INFO - 股票 000513 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '丽珠集团', 'exists': True}
2025-04-16 16:54:33,419 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000514 -> 输出 000514
2025-04-16 16:54:33,420 - src.data_sources.akshare - INFO - 股票 000514 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '渝 开 发', 'exists': True}
2025-04-16 16:54:33,420 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000516 -> 输出 000516
2025-04-16 16:54:33,421 - src.data_sources.akshare - INFO - 股票 000516 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '国际医学', 'exists': True}
2025-04-16 16:54:33,421 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000517 -> 输出 000517
2025-04-16 16:54:33,422 - src.data_sources.akshare - INFO - 股票 000517 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '荣安地产', 'exists': True}
2025-04-16 16:54:33,422 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000518 -> 输出 000518
2025-04-16 16:54:33,423 - src.data_sources.akshare - INFO - 股票 000518 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '四环生物', 'exists': True}
2025-04-16 16:54:33,423 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000519 -> 输出 000519
2025-04-16 16:54:33,424 - src.data_sources.akshare - INFO - 股票 000519 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中兵红箭', 'exists': True}
2025-04-16 16:54:33,424 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000521 -> 输出 000521
2025-04-16 16:54:33,425 - src.data_sources.akshare - INFO - 股票 000521 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '长虹美菱', 'exists': True}
2025-04-16 16:54:33,425 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000531 -> 输出 000531
2025-04-16 16:54:33,427 - src.data_sources.akshare - INFO - 股票 000531 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '穗恒运Ａ', 'exists': True}
2025-04-16 16:54:33,427 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000541 -> 输出 000541
2025-04-16 16:54:33,429 - src.data_sources.akshare - INFO - 股票 000541 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '佛山照明', 'exists': True}
2025-04-16 16:54:33,429 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000551 -> 输出 000551
2025-04-16 16:54:33,431 - src.data_sources.akshare - INFO - 股票 000551 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '创元科技', 'exists': True}
2025-04-16 16:54:33,431 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000561 -> 输出 000561
2025-04-16 16:54:33,432 - src.data_sources.akshare - INFO - 股票 000561 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '烽火电子', 'exists': True}
2025-04-16 16:54:33,433 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000571 -> 输出 000571
2025-04-16 16:54:33,434 - src.data_sources.akshare - INFO - 股票 000571 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '新大洲A', 'exists': True}
2025-04-16 16:54:33,434 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000581 -> 输出 000581
2025-04-16 16:54:33,435 - src.data_sources.akshare - INFO - 股票 000581 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '威孚高科', 'exists': True}
2025-04-16 16:54:33,436 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000591 -> 输出 000591
2025-04-16 16:54:33,436 - src.data_sources.akshare - INFO - 股票 000591 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '太阳能', 'exists': True}
2025-04-16 16:54:33,437 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000601 -> 输出 000601
2025-04-16 16:54:33,437 - src.data_sources.akshare - INFO - 股票 000601 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '韶能股份', 'exists': True}
2025-04-16 16:54:33,438 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000610 -> 输出 000610
2025-04-16 16:54:33,439 - src.data_sources.akshare - INFO - 股票 000610 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '西安旅游', 'exists': True}
2025-04-16 16:54:33,440 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000612 -> 输出 000612
2025-04-16 16:54:33,440 - src.data_sources.akshare - INFO - 股票 000612 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '焦作万方', 'exists': True}
2025-04-16 16:54:33,441 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000615 -> 输出 000615
2025-04-16 16:54:33,442 - src.data_sources.akshare - INFO - 股票 000615 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': 'ST美谷', 'exists': True}
2025-04-16 16:54:33,442 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000617 -> 输出 000617
2025-04-16 16:54:33,443 - src.data_sources.akshare - INFO - 股票 000617 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中油资本', 'exists': True}
2025-04-16 16:54:33,443 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000619 -> 输出 000619
2025-04-16 16:54:33,444 - src.data_sources.akshare - INFO - 股票 000619 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '海螺新材', 'exists': True}
2025-04-16 16:54:33,444 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000631 -> 输出 000631
2025-04-16 16:54:33,445 - src.data_sources.akshare - INFO - 股票 000631 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '顺发恒业', 'exists': True}
2025-04-16 16:54:33,445 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000651 -> 输出 000651
2025-04-16 16:54:33,446 - src.data_sources.akshare - INFO - 股票 000651 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '格力电器', 'exists': True}
2025-04-16 16:54:33,447 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000661 -> 输出 000661
2025-04-16 16:54:33,448 - src.data_sources.akshare - INFO - 股票 000661 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '长春高新', 'exists': True}
2025-04-16 16:54:33,448 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000681 -> 输出 000681
2025-04-16 16:54:33,449 - src.data_sources.akshare - INFO - 股票 000681 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '视觉中国', 'exists': True}
2025-04-16 16:54:33,449 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000691 -> 输出 000691
2025-04-16 16:54:33,450 - src.data_sources.akshare - INFO - 股票 000691 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '亚太实业', 'exists': True}
2025-04-16 16:54:33,450 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000701 -> 输出 000701
2025-04-16 16:54:33,451 - src.data_sources.akshare - INFO - 股票 000701 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '厦门信达', 'exists': True}
2025-04-16 16:54:33,451 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000710 -> 输出 000710
2025-04-16 16:54:33,452 - src.data_sources.akshare - INFO - 股票 000710 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '贝瑞基因', 'exists': True}
2025-04-16 16:54:33,452 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000711 -> 输出 000711
2025-04-16 16:54:33,453 - src.data_sources.akshare - INFO - 股票 000711 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '*ST京蓝', 'exists': True}
2025-04-16 16:54:33,453 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000712 -> 输出 000712
2025-04-16 16:54:33,453 - src.data_sources.akshare - INFO - 股票 000712 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '锦龙股份', 'exists': True}
2025-04-16 16:54:33,454 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000713 -> 输出 000713
2025-04-16 16:54:33,455 - src.data_sources.akshare - INFO - 股票 000713 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '丰乐种业', 'exists': True}
2025-04-16 16:54:33,455 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000715 -> 输出 000715
2025-04-16 16:54:33,455 - src.data_sources.akshare - INFO - 股票 000715 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中兴商业', 'exists': True}
2025-04-16 16:54:33,456 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000716 -> 输出 000716
2025-04-16 16:54:33,456 - src.data_sources.akshare - INFO - 股票 000716 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '黑芝麻', 'exists': True}
2025-04-16 16:54:33,457 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000717 -> 输出 000717
2025-04-16 16:54:33,457 - src.data_sources.akshare - INFO - 股票 000717 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中南股份', 'exists': True}
2025-04-16 16:54:33,458 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000718 -> 输出 000718
2025-04-16 16:54:33,459 - src.data_sources.akshare - INFO - 股票 000718 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '苏宁环球', 'exists': True}
2025-04-16 16:54:33,460 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000719 -> 输出 000719
2025-04-16 16:54:33,460 - src.data_sources.akshare - INFO - 股票 000719 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中原传媒', 'exists': True}
2025-04-16 16:54:33,461 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000721 -> 输出 000721
2025-04-16 16:54:33,461 - src.data_sources.akshare - INFO - 股票 000721 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '西安饮食', 'exists': True}
2025-04-16 16:54:33,461 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000731 -> 输出 000731
2025-04-16 16:54:33,462 - src.data_sources.akshare - INFO - 股票 000731 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '四川美丰', 'exists': True}
2025-04-16 16:54:33,462 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000751 -> 输出 000751
2025-04-16 16:54:33,463 - src.data_sources.akshare - INFO - 股票 000751 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '锌业股份', 'exists': True}
2025-04-16 16:54:33,464 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000761 -> 输出 000761
2025-04-16 16:54:33,464 - src.data_sources.akshare - INFO - 股票 000761 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '本钢板材', 'exists': True}
2025-04-16 16:54:33,465 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000791 -> 输出 000791
2025-04-16 16:54:33,466 - src.data_sources.akshare - INFO - 股票 000791 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '甘肃能源', 'exists': True}
2025-04-16 16:54:33,466 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000801 -> 输出 000801
2025-04-16 16:54:33,467 - src.data_sources.akshare - INFO - 股票 000801 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '四川九洲', 'exists': True}
2025-04-16 16:54:33,467 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000810 -> 输出 000810
2025-04-16 16:54:33,468 - src.data_sources.akshare - INFO - 股票 000810 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '创维数字', 'exists': True}
2025-04-16 16:54:33,469 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000811 -> 输出 000811
2025-04-16 16:54:33,469 - src.data_sources.akshare - INFO - 股票 000811 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '冰轮环境', 'exists': True}
2025-04-16 16:54:33,470 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000812 -> 输出 000812
2025-04-16 16:54:33,471 - src.data_sources.akshare - INFO - 股票 000812 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '陕西金叶', 'exists': True}
2025-04-16 16:54:33,471 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000813 -> 输出 000813
2025-04-16 16:54:33,472 - src.data_sources.akshare - INFO - 股票 000813 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '德展健康', 'exists': True}
2025-04-16 16:54:33,473 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000815 -> 输出 000815
2025-04-16 16:54:33,474 - src.data_sources.akshare - INFO - 股票 000815 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '美利云', 'exists': True}
2025-04-16 16:54:33,474 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000816 -> 输出 000816
2025-04-16 16:54:33,475 - src.data_sources.akshare - INFO - 股票 000816 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '智慧农业', 'exists': True}
2025-04-16 16:54:33,475 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000818 -> 输出 000818
2025-04-16 16:54:33,476 - src.data_sources.akshare - INFO - 股票 000818 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '航锦科技', 'exists': True}
2025-04-16 16:54:33,476 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000819 -> 输出 000819
2025-04-16 16:54:33,477 - src.data_sources.akshare - INFO - 股票 000819 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '岳阳兴长', 'exists': True}
2025-04-16 16:54:33,477 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000821 -> 输出 000821
2025-04-16 16:54:33,478 - src.data_sources.akshare - INFO - 股票 000821 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '京山轻机', 'exists': True}
2025-04-16 16:54:33,478 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000831 -> 输出 000831
2025-04-16 16:54:33,479 - src.data_sources.akshare - INFO - 股票 000831 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中国稀土', 'exists': True}
2025-04-16 16:54:33,479 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000851 -> 输出 000851
2025-04-16 16:54:33,480 - src.data_sources.akshare - INFO - 股票 000851 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': 'ST高鸿', 'exists': True}
2025-04-16 16:54:33,480 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000881 -> 输出 000881
2025-04-16 16:54:33,481 - src.data_sources.akshare - INFO - 股票 000881 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中广核技', 'exists': True}
2025-04-16 16:54:33,481 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000901 -> 输出 000901
2025-04-16 16:54:33,482 - src.data_sources.akshare - INFO - 股票 000901 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '航天科技', 'exists': True}
2025-04-16 16:54:33,482 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000910 -> 输出 000910
2025-04-16 16:54:33,483 - src.data_sources.akshare - INFO - 股票 000910 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '大亚圣象', 'exists': True}
2025-04-16 16:54:33,484 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000911 -> 输出 000911
2025-04-16 16:54:33,484 - src.data_sources.akshare - INFO - 股票 000911 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '广农糖业', 'exists': True}
2025-04-16 16:54:33,485 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000912 -> 输出 000912
2025-04-16 16:54:33,486 - src.data_sources.akshare - INFO - 股票 000912 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '泸天化', 'exists': True}
2025-04-16 16:54:33,486 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000913 -> 输出 000913
2025-04-16 16:54:33,487 - src.data_sources.akshare - INFO - 股票 000913 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '钱江摩托', 'exists': True}
2025-04-16 16:54:33,487 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000915 -> 输出 000915
2025-04-16 16:54:33,488 - src.data_sources.akshare - INFO - 股票 000915 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '华特达因', 'exists': True}
2025-04-16 16:54:33,489 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000917 -> 输出 000917
2025-04-16 16:54:33,489 - src.data_sources.akshare - INFO - 股票 000917 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '电广传媒', 'exists': True}
2025-04-16 16:54:33,490 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000919 -> 输出 000919
2025-04-16 16:54:33,491 - src.data_sources.akshare - INFO - 股票 000919 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '金陵药业', 'exists': True}
2025-04-16 16:54:33,491 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000921 -> 输出 000921
2025-04-16 16:54:33,492 - src.data_sources.akshare - INFO - 股票 000921 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '海信家电', 'exists': True}
2025-04-16 16:54:33,492 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000931 -> 输出 000931
2025-04-16 16:54:33,493 - src.data_sources.akshare - INFO - 股票 000931 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中 关 村', 'exists': True}
2025-04-16 16:54:33,493 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000951 -> 输出 000951
2025-04-16 16:54:33,494 - src.data_sources.akshare - INFO - 股票 000951 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中国重汽', 'exists': True}
2025-04-16 16:54:33,494 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000981 -> 输出 000981
2025-04-16 16:54:33,495 - src.data_sources.akshare - INFO - 股票 000981 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '山子高科', 'exists': True}
2025-04-16 16:54:33,495 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001201 -> 输出 001201
2025-04-16 16:54:33,495 - src.data_sources.akshare - INFO - 股票 001201 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '东瑞股份', 'exists': True}
2025-04-16 16:54:33,496 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001202 -> 输出 001202
2025-04-16 16:54:33,496 - src.data_sources.akshare - INFO - 股票 001202 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '炬申股份', 'exists': True}
2025-04-16 16:54:33,497 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001203 -> 输出 001203
2025-04-16 16:54:33,498 - src.data_sources.akshare - INFO - 股票 001203 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '大中矿业', 'exists': True}
2025-04-16 16:54:33,498 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001205 -> 输出 001205
2025-04-16 16:54:33,499 - src.data_sources.akshare - INFO - 股票 001205 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '盛航股份', 'exists': True}
2025-04-16 16:54:33,499 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001206 -> 输出 001206
2025-04-16 16:54:33,500 - src.data_sources.akshare - INFO - 股票 001206 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '依依股份', 'exists': True}
2025-04-16 16:54:33,500 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001207 -> 输出 001207
2025-04-16 16:54:33,500 - src.data_sources.akshare - INFO - 股票 001207 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '联科科技', 'exists': True}
2025-04-16 16:54:33,501 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001208 -> 输出 001208
2025-04-16 16:54:33,501 - src.data_sources.akshare - INFO - 股票 001208 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '华菱线缆', 'exists': True}
2025-04-16 16:54:33,502 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001209 -> 输出 001209
2025-04-16 16:54:33,502 - src.data_sources.akshare - INFO - 股票 001209 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '洪兴股份', 'exists': True}
2025-04-16 16:54:33,502 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001210 -> 输出 001210
2025-04-16 16:54:33,503 - src.data_sources.akshare - INFO - 股票 001210 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '金房能源', 'exists': True}
2025-04-16 16:54:33,503 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001211 -> 输出 001211
2025-04-16 16:54:33,504 - src.data_sources.akshare - INFO - 股票 001211 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '双枪科技', 'exists': True}
2025-04-16 16:54:33,504 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001212 -> 输出 001212
2025-04-16 16:54:33,505 - src.data_sources.akshare - INFO - 股票 001212 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中旗新材', 'exists': True}
2025-04-16 16:54:33,505 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001213 -> 输出 001213
2025-04-16 16:54:33,506 - src.data_sources.akshare - INFO - 股票 001213 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中铁特货', 'exists': True}
2025-04-16 16:54:33,506 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001215 -> 输出 001215
2025-04-16 16:54:33,507 - src.data_sources.akshare - INFO - 股票 001215 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '千味央厨', 'exists': True}
2025-04-16 16:54:33,508 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001216 -> 输出 001216
2025-04-16 16:54:33,508 - src.data_sources.akshare - INFO - 股票 001216 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '华瓷股份', 'exists': True}
2025-04-16 16:54:33,509 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001217 -> 输出 001217
2025-04-16 16:54:33,509 - src.data_sources.akshare - INFO - 股票 001217 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '华尔泰', 'exists': True}
2025-04-16 16:54:33,510 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001218 -> 输出 001218
2025-04-16 16:54:33,510 - src.data_sources.akshare - INFO - 股票 001218 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '丽臣实业', 'exists': True}
2025-04-16 16:54:33,511 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001219 -> 输出 001219
2025-04-16 16:54:33,511 - src.data_sources.akshare - INFO - 股票 001219 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '青岛食品', 'exists': True}
2025-04-16 16:54:33,512 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001222 -> 输出 001222
2025-04-16 16:54:33,512 - src.data_sources.akshare - INFO - 股票 001222 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '源飞宠物', 'exists': True}
2025-04-16 16:54:33,513 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001223 -> 输出 001223
2025-04-16 16:54:33,513 - src.data_sources.akshare - INFO - 股票 001223 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '欧克科技', 'exists': True}
2025-04-16 16:54:33,514 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001225 -> 输出 001225
2025-04-16 16:54:33,514 - src.data_sources.akshare - INFO - 股票 001225 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '和泰机电', 'exists': True}
2025-04-16 16:54:33,515 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001226 -> 输出 001226
2025-04-16 16:54:33,515 - src.data_sources.akshare - INFO - 股票 001226 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '拓山重工', 'exists': True}
2025-04-16 16:54:33,516 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001227 -> 输出 001227
2025-04-16 16:54:33,517 - src.data_sources.akshare - INFO - 股票 001227 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '兰州银行', 'exists': True}
2025-04-16 16:54:33,517 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001228 -> 输出 001228
2025-04-16 16:54:33,518 - src.data_sources.akshare - INFO - 股票 001228 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '永泰运', 'exists': True}
2025-04-16 16:54:33,518 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001229 -> 输出 001229
2025-04-16 16:54:33,518 - src.data_sources.akshare - INFO - 股票 001229 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '魅视科技', 'exists': True}
2025-04-16 16:54:33,519 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001230 -> 输出 001230
2025-04-16 16:54:33,519 - src.data_sources.akshare - INFO - 股票 001230 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '劲旅环境', 'exists': True}
2025-04-16 16:54:33,520 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001231 -> 输出 001231
2025-04-16 16:54:33,520 - src.data_sources.akshare - INFO - 股票 001231 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '农心科技', 'exists': True}
2025-04-16 16:54:33,521 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001234 -> 输出 001234
2025-04-16 16:54:33,522 - src.data_sources.akshare - INFO - 股票 001234 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '泰慕士', 'exists': True}
2025-04-16 16:54:33,522 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001236 -> 输出 001236
2025-04-16 16:54:33,523 - src.data_sources.akshare - INFO - 股票 001236 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '弘业期货', 'exists': True}
2025-04-16 16:54:33,523 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001238 -> 输出 001238
2025-04-16 16:54:33,524 - src.data_sources.akshare - INFO - 股票 001238 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '浙江正特', 'exists': True}
2025-04-16 16:54:33,524 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001239 -> 输出 001239
2025-04-16 16:54:33,525 - src.data_sources.akshare - INFO - 股票 001239 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '永达股份', 'exists': True}
2025-04-16 16:54:33,526 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001255 -> 输出 001255
2025-04-16 16:54:33,526 - src.data_sources.akshare - INFO - 股票 001255 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '博菲电气', 'exists': True}
2025-04-16 16:54:33,527 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001256 -> 输出 001256
2025-04-16 16:54:33,527 - src.data_sources.akshare - INFO - 股票 001256 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '炜冈科技', 'exists': True}
2025-04-16 16:54:33,528 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001258 -> 输出 001258
2025-04-16 16:54:33,528 - src.data_sources.akshare - INFO - 股票 001258 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '立新能源', 'exists': True}
2025-04-16 16:54:33,528 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001259 -> 输出 001259
2025-04-16 16:54:33,529 - src.data_sources.akshare - INFO - 股票 001259 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '利仁科技', 'exists': True}
2025-04-16 16:54:33,529 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001260 -> 输出 001260
2025-04-16 16:54:33,530 - src.data_sources.akshare - INFO - 股票 001260 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '坤泰股份', 'exists': True}
2025-04-16 16:54:33,531 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001266 -> 输出 001266
2025-04-16 16:54:33,532 - src.data_sources.akshare - INFO - 股票 001266 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '宏英智能', 'exists': True}
2025-04-16 16:54:33,532 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001267 -> 输出 001267
2025-04-16 16:54:33,533 - src.data_sources.akshare - INFO - 股票 001267 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '汇绿生态', 'exists': True}
2025-04-16 16:54:33,533 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001268 -> 输出 001268
2025-04-16 16:54:33,534 - src.data_sources.akshare - INFO - 股票 001268 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '联合精密', 'exists': True}
2025-04-16 16:54:33,534 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001269 -> 输出 001269
2025-04-16 16:54:33,535 - src.data_sources.akshare - INFO - 股票 001269 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '欧晶科技', 'exists': True}
2025-04-16 16:54:33,535 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001270 -> 输出 001270
2025-04-16 16:54:33,535 - src.data_sources.akshare - INFO - 股票 001270 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '铖昌科技', 'exists': True}
2025-04-16 16:54:33,536 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001277 -> 输出 001277
2025-04-16 16:54:33,536 - src.data_sources.akshare - INFO - 股票 001277 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '速达股份', 'exists': True}
2025-04-16 16:54:33,537 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001278 -> 输出 001278
2025-04-16 16:54:33,537 - src.data_sources.akshare - INFO - 股票 001278 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '一彬科技', 'exists': True}
2025-04-16 16:54:33,538 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 16:54:33,538 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 16:54:33,539 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001282 -> 输出 001282
2025-04-16 16:54:33,540 - src.data_sources.akshare - INFO - 股票 001282 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '三联锻造', 'exists': True}
2025-04-16 16:54:33,540 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001283 -> 输出 001283
2025-04-16 16:54:33,541 - src.data_sources.akshare - INFO - 股票 001283 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '豪鹏科技', 'exists': True}
2025-04-16 16:54:33,542 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001286 -> 输出 001286
2025-04-16 16:54:33,542 - src.data_sources.akshare - INFO - 股票 001286 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '陕西能源', 'exists': True}
2025-04-16 16:54:33,543 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001287 -> 输出 001287
2025-04-16 16:54:33,543 - src.data_sources.akshare - INFO - 股票 001287 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中电港', 'exists': True}
2025-04-16 16:54:33,544 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001288 -> 输出 001288
2025-04-16 16:54:33,544 - src.data_sources.akshare - INFO - 股票 001288 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '运机集团', 'exists': True}
2025-04-16 16:54:33,545 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001289 -> 输出 001289
2025-04-16 16:54:33,545 - src.data_sources.akshare - INFO - 股票 001289 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '龙源电力', 'exists': True}
2025-04-16 16:54:33,546 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001296 -> 输出 001296
2025-04-16 16:54:33,547 - src.data_sources.akshare - INFO - 股票 001296 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '长江材料', 'exists': True}
2025-04-16 16:54:33,547 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001298 -> 输出 001298
2025-04-16 16:54:33,548 - src.data_sources.akshare - INFO - 股票 001298 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '好上好', 'exists': True}
2025-04-16 16:54:33,548 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001299 -> 输出 001299
2025-04-16 16:54:33,549 - src.data_sources.akshare - INFO - 股票 001299 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '美能能源', 'exists': True}
2025-04-16 16:54:33,549 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001300 -> 输出 001300
2025-04-16 16:54:33,550 - src.data_sources.akshare - INFO - 股票 001300 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '三柏硕', 'exists': True}
2025-04-16 16:54:33,551 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001301 -> 输出 001301
2025-04-16 16:54:33,551 - src.data_sources.akshare - INFO - 股票 001301 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '尚太科技', 'exists': True}
2025-04-16 16:54:33,552 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001306 -> 输出 001306
2025-04-16 16:54:33,552 - src.data_sources.akshare - INFO - 股票 001306 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '夏厦精密', 'exists': True}
2025-04-16 16:54:33,553 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001308 -> 输出 001308
2025-04-16 16:54:33,554 - src.data_sources.akshare - INFO - 股票 001308 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '康冠科技', 'exists': True}
2025-04-16 16:54:33,554 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001309 -> 输出 001309
2025-04-16 16:54:33,555 - src.data_sources.akshare - INFO - 股票 001309 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '德明利', 'exists': True}
2025-04-16 16:54:33,555 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001311 -> 输出 001311
2025-04-16 16:54:33,556 - src.data_sources.akshare - INFO - 股票 001311 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '多利科技', 'exists': True}
2025-04-16 16:54:33,556 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001313 -> 输出 001313
2025-04-16 16:54:33,557 - src.data_sources.akshare - INFO - 股票 001313 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '粤海饲料', 'exists': True}
2025-04-16 16:54:33,557 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001314 -> 输出 001314
2025-04-16 16:54:33,558 - src.data_sources.akshare - INFO - 股票 001314 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '亿道信息', 'exists': True}
2025-04-16 16:54:33,558 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001316 -> 输出 001316
2025-04-16 16:54:33,559 - src.data_sources.akshare - INFO - 股票 001316 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '润贝航科', 'exists': True}
2025-04-16 16:54:33,559 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001317 -> 输出 001317
2025-04-16 16:54:33,560 - src.data_sources.akshare - INFO - 股票 001317 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '三羊马', 'exists': True}
2025-04-16 16:54:33,560 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001318 -> 输出 001318
2025-04-16 16:54:33,561 - src.data_sources.akshare - INFO - 股票 001318 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '阳光乳业', 'exists': True}
2025-04-16 16:54:33,561 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001319 -> 输出 001319
2025-04-16 16:54:33,562 - src.data_sources.akshare - INFO - 股票 001319 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '铭科精技', 'exists': True}
2025-04-16 16:54:33,562 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001322 -> 输出 001322
2025-04-16 16:54:33,562 - src.data_sources.akshare - INFO - 股票 001322 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '箭牌家居', 'exists': True}
2025-04-16 16:54:33,563 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001323 -> 输出 001323
2025-04-16 16:54:33,563 - src.data_sources.akshare - INFO - 股票 001323 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '慕思股份', 'exists': True}
2025-04-16 16:54:33,564 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001324 -> 输出 001324
2025-04-16 16:54:33,564 - src.data_sources.akshare - INFO - 股票 001324 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '长青科技', 'exists': True}
2025-04-16 16:54:33,565 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001326 -> 输出 001326
2025-04-16 16:54:33,566 - src.data_sources.akshare - INFO - 股票 001326 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '联域股份', 'exists': True}
2025-04-16 16:54:33,566 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001328 -> 输出 001328
2025-04-16 16:54:33,567 - src.data_sources.akshare - INFO - 股票 001328 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '登康口腔', 'exists': True}
2025-04-16 16:54:33,567 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001330 -> 输出 001330
2025-04-16 16:54:33,568 - src.data_sources.akshare - INFO - 股票 001330 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '博纳影业', 'exists': True}
2025-04-16 16:54:33,568 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001331 -> 输出 001331
2025-04-16 16:54:33,568 - src.data_sources.akshare - INFO - 股票 001331 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '胜通能源', 'exists': True}
2025-04-16 16:54:33,569 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001332 -> 输出 001332
2025-04-16 16:54:33,569 - src.data_sources.akshare - INFO - 股票 001332 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '锡装股份', 'exists': True}
2025-04-16 16:54:33,570 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001333 -> 输出 001333
2025-04-16 16:54:33,570 - src.data_sources.akshare - INFO - 股票 001333 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '光华股份', 'exists': True}
2025-04-16 16:54:33,571 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001335 -> 输出 001335
2025-04-16 16:54:33,571 - src.data_sources.akshare - INFO - 股票 001335 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': 'C信凯科技', 'exists': True}
2025-04-16 16:54:33,572 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001336 -> 输出 001336
2025-04-16 16:54:33,572 - src.data_sources.akshare - INFO - 股票 001336 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '楚环科技', 'exists': True}
2025-04-16 16:54:33,573 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001337 -> 输出 001337
2025-04-16 16:54:33,573 - src.data_sources.akshare - INFO - 股票 001337 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '四川黄金', 'exists': True}
2025-04-16 16:54:33,574 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001338 -> 输出 001338
2025-04-16 16:54:33,574 - src.data_sources.akshare - INFO - 股票 001338 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '永顺泰', 'exists': True}
2025-04-16 16:54:33,575 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001339 -> 输出 001339
2025-04-16 16:54:33,575 - src.data_sources.akshare - INFO - 股票 001339 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '智微智能', 'exists': True}
2025-04-16 16:54:33,576 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001356 -> 输出 001356
2025-04-16 16:54:33,576 - src.data_sources.akshare - INFO - 股票 001356 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '富岭股份', 'exists': True}
2025-04-16 16:54:33,577 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001358 -> 输出 001358
2025-04-16 16:54:33,577 - src.data_sources.akshare - INFO - 股票 001358 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '兴欣新材', 'exists': True}
2025-04-16 16:54:33,577 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001359 -> 输出 001359
2025-04-16 16:54:33,578 - src.data_sources.akshare - INFO - 股票 001359 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '平安电工', 'exists': True}
2025-04-16 16:54:33,578 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001360 -> 输出 001360
2025-04-16 16:54:33,579 - src.data_sources.akshare - INFO - 股票 001360 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '南矿集团', 'exists': True}
2025-04-16 16:54:33,579 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001366 -> 输出 001366
2025-04-16 16:54:33,580 - src.data_sources.akshare - INFO - 股票 001366 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '播恩集团', 'exists': True}
2025-04-16 16:54:33,580 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001367 -> 输出 001367
2025-04-16 16:54:33,581 - src.data_sources.akshare - INFO - 股票 001367 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '海森药业', 'exists': True}
2025-04-16 16:54:33,581 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001368 -> 输出 001368
2025-04-16 16:54:33,582 - src.data_sources.akshare - INFO - 股票 001368 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '通达创智', 'exists': True}
2025-04-16 16:54:33,582 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001373 -> 输出 001373
2025-04-16 16:54:33,583 - src.data_sources.akshare - INFO - 股票 001373 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '翔腾新材', 'exists': True}
2025-04-16 16:54:33,583 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001376 -> 输出 001376
2025-04-16 16:54:33,584 - src.data_sources.akshare - INFO - 股票 001376 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '百通能源', 'exists': True}
2025-04-16 16:54:33,584 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001378 -> 输出 001378
2025-04-16 16:54:33,585 - src.data_sources.akshare - INFO - 股票 001378 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '德冠新材', 'exists': True}
2025-04-16 16:54:33,585 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001379 -> 输出 001379
2025-04-16 16:54:33,586 - src.data_sources.akshare - INFO - 股票 001379 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '腾达科技', 'exists': True}
2025-04-16 16:54:33,586 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001380 -> 输出 001380
2025-04-16 16:54:33,587 - src.data_sources.akshare - INFO - 股票 001380 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '华纬科技', 'exists': True}
2025-04-16 16:54:33,587 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001382 -> 输出 001382
2025-04-16 16:54:33,588 - src.data_sources.akshare - INFO - 股票 001382 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '新亚电缆', 'exists': True}
2025-04-16 16:54:33,588 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001387 -> 输出 001387
2025-04-16 16:54:33,589 - src.data_sources.akshare - INFO - 股票 001387 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '雪祺电气', 'exists': True}
2025-04-16 16:54:33,589 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001389 -> 输出 001389
2025-04-16 16:54:33,590 - src.data_sources.akshare - INFO - 股票 001389 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '广合科技', 'exists': True}
2025-04-16 16:54:33,590 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001391 -> 输出 001391
2025-04-16 16:54:33,591 - src.data_sources.akshare - INFO - 股票 001391 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '国货航', 'exists': True}
2025-04-16 16:54:33,591 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001395 -> 输出 001395
2025-04-16 16:54:33,592 - src.data_sources.akshare - INFO - 股票 001395 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '亚联机械', 'exists': True}
2025-04-16 16:54:33,592 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001696 -> 输出 001696
2025-04-16 16:54:33,593 - src.data_sources.akshare - INFO - 股票 001696 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '宗申动力', 'exists': True}
2025-04-16 16:54:33,593 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001872 -> 输出 001872
2025-04-16 16:54:33,594 - src.data_sources.akshare - INFO - 股票 001872 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '招商港口', 'exists': True}
2025-04-16 16:54:33,594 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001896 -> 输出 001896
2025-04-16 16:54:33,595 - src.data_sources.akshare - INFO - 股票 001896 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '豫能控股', 'exists': True}
2025-04-16 16:54:33,595 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001914 -> 输出 001914
2025-04-16 16:54:33,596 - src.data_sources.akshare - INFO - 股票 001914 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '招商积余', 'exists': True}
2025-04-16 16:54:33,596 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001965 -> 输出 001965
2025-04-16 16:54:33,597 - src.data_sources.akshare - INFO - 股票 001965 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '招商公路', 'exists': True}
2025-04-16 16:54:33,597 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001979 -> 输出 001979
2025-04-16 16:54:33,598 - src.data_sources.akshare - INFO - 股票 001979 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '招商蛇口', 'exists': True}
2025-04-16 16:54:33,598 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002001 -> 输出 002001
2025-04-16 16:54:33,598 - src.data_sources.akshare - INFO - 股票 002001 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '新 和 成', 'exists': True}
2025-04-16 16:54:33,599 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002010 -> 输出 002010
2025-04-16 16:54:33,600 - src.data_sources.akshare - INFO - 股票 002010 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '传化智联', 'exists': True}
2025-04-16 16:54:33,600 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002011 -> 输出 002011
2025-04-16 16:54:33,601 - src.data_sources.akshare - INFO - 股票 002011 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '盾安环境', 'exists': True}
2025-04-16 16:54:33,601 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002012 -> 输出 002012
2025-04-16 16:54:33,602 - src.data_sources.akshare - INFO - 股票 002012 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '凯恩股份', 'exists': True}
2025-04-16 16:54:33,602 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002014 -> 输出 002014
2025-04-16 16:54:33,603 - src.data_sources.akshare - INFO - 股票 002014 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '永新股份', 'exists': True}
2025-04-16 16:54:33,603 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002015 -> 输出 002015
2025-04-16 16:54:33,604 - src.data_sources.akshare - INFO - 股票 002015 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '协鑫能科', 'exists': True}
2025-04-16 16:54:33,604 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002016 -> 输出 002016
2025-04-16 16:54:33,605 - src.data_sources.akshare - INFO - 股票 002016 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '世荣兆业', 'exists': True}
2025-04-16 16:54:33,605 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002017 -> 输出 002017
2025-04-16 16:54:33,606 - src.data_sources.akshare - INFO - 股票 002017 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '东信和平', 'exists': True}
2025-04-16 16:54:33,606 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002019 -> 输出 002019
2025-04-16 16:54:33,607 - src.data_sources.akshare - INFO - 股票 002019 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '亿帆医药', 'exists': True}
2025-04-16 16:54:33,607 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002021 -> 输出 002021
2025-04-16 16:54:33,607 - src.data_sources.akshare - INFO - 股票 002021 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '中捷资源', 'exists': True}
2025-04-16 16:54:33,608 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002031 -> 输出 002031
2025-04-16 16:54:33,608 - src.data_sources.akshare - INFO - 股票 002031 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '巨轮智能', 'exists': True}
2025-04-16 16:54:33,609 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002041 -> 输出 002041
2025-04-16 16:54:33,609 - src.data_sources.akshare - INFO - 股票 002041 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '登海种业', 'exists': True}
2025-04-16 16:54:33,610 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002051 -> 输出 002051
2025-04-16 16:54:33,611 - src.data_sources.akshare - INFO - 股票 002051 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '中工国际', 'exists': True}
2025-04-16 16:54:33,611 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002061 -> 输出 002061
2025-04-16 16:54:33,612 - src.data_sources.akshare - INFO - 股票 002061 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '浙江交科', 'exists': True}
2025-04-16 16:54:33,612 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002081 -> 输出 002081
2025-04-16 16:54:33,613 - src.data_sources.akshare - INFO - 股票 002081 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '金 螳 螂', 'exists': True}
2025-04-16 16:54:33,613 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002091 -> 输出 002091
2025-04-16 16:54:33,614 - src.data_sources.akshare - INFO - 股票 002091 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '江苏国泰', 'exists': True}
2025-04-16 16:54:33,614 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002100 -> 输出 002100
2025-04-16 16:54:33,614 - src.data_sources.akshare - INFO - 股票 002100 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '天康生物', 'exists': True}
2025-04-16 16:54:33,615 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002101 -> 输出 002101
2025-04-16 16:54:33,615 - src.data_sources.akshare - INFO - 股票 002101 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '广东鸿图', 'exists': True}
2025-04-16 16:54:33,616 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002102 -> 输出 002102
2025-04-16 16:54:33,616 - src.data_sources.akshare - INFO - 股票 002102 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '能特科技', 'exists': True}
2025-04-16 16:54:33,617 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002103 -> 输出 002103
2025-04-16 16:54:33,617 - src.data_sources.akshare - INFO - 股票 002103 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '广博股份', 'exists': True}
2025-04-16 16:54:33,617 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002104 -> 输出 002104
2025-04-16 16:54:33,618 - src.data_sources.akshare - INFO - 股票 002104 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '恒宝股份', 'exists': True}
2025-04-16 16:54:33,618 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002105 -> 输出 002105
2025-04-16 16:54:33,619 - src.data_sources.akshare - INFO - 股票 002105 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '信隆健康', 'exists': True}
2025-04-16 16:54:33,620 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002106 -> 输出 002106
2025-04-16 16:54:33,620 - src.data_sources.akshare - INFO - 股票 002106 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '莱宝高科', 'exists': True}
2025-04-16 16:54:33,621 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002107 -> 输出 002107
2025-04-16 16:54:33,622 - src.data_sources.akshare - INFO - 股票 002107 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '沃华医药', 'exists': True}
2025-04-16 16:54:33,622 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002108 -> 输出 002108
2025-04-16 16:54:33,623 - src.data_sources.akshare - INFO - 股票 002108 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '沧州明珠', 'exists': True}
2025-04-16 16:54:33,623 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002109 -> 输出 002109
2025-04-16 16:54:33,624 - src.data_sources.akshare - INFO - 股票 002109 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '兴化股份', 'exists': True}
2025-04-16 16:54:33,624 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002110 -> 输出 002110
2025-04-16 16:54:33,625 - src.data_sources.akshare - INFO - 股票 002110 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '三钢闽光', 'exists': True}
2025-04-16 16:54:33,625 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002111 -> 输出 002111
2025-04-16 16:54:33,626 - src.data_sources.akshare - INFO - 股票 002111 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '威海广泰', 'exists': True}
2025-04-16 16:54:33,626 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002112 -> 输出 002112
2025-04-16 16:54:33,627 - src.data_sources.akshare - INFO - 股票 002112 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '三变科技', 'exists': True}
2025-04-16 16:54:33,627 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002114 -> 输出 002114
2025-04-16 16:54:33,628 - src.data_sources.akshare - INFO - 股票 002114 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '罗平锌电', 'exists': True}
2025-04-16 16:54:33,628 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002115 -> 输出 002115
2025-04-16 16:54:33,629 - src.data_sources.akshare - INFO - 股票 002115 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '三维通信', 'exists': True}
2025-04-16 16:54:33,629 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002116 -> 输出 002116
2025-04-16 16:54:33,630 - src.data_sources.akshare - INFO - 股票 002116 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '中国海诚', 'exists': True}
2025-04-16 16:54:33,631 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002117 -> 输出 002117
2025-04-16 16:54:33,631 - src.data_sources.akshare - INFO - 股票 002117 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '东港股份', 'exists': True}
2025-04-16 16:54:33,632 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002119 -> 输出 002119
2025-04-16 16:54:33,632 - src.data_sources.akshare - INFO - 股票 002119 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '康强电子', 'exists': True}
2025-04-16 16:54:33,633 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002120 -> 输出 002120
2025-04-16 16:54:33,633 - src.data_sources.akshare - INFO - 股票 002120 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '韵达股份', 'exists': True}
2025-04-16 16:54:33,634 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002121 -> 输出 002121
2025-04-16 16:54:33,634 - src.data_sources.akshare - INFO - 股票 002121 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '科陆电子', 'exists': True}
2025-04-16 16:54:33,635 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002122 -> 输出 002122
2025-04-16 16:54:33,635 - src.data_sources.akshare - INFO - 股票 002122 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '汇洲智能', 'exists': True}
2025-04-16 16:54:33,636 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002123 -> 输出 002123
2025-04-16 16:54:33,636 - src.data_sources.akshare - INFO - 股票 002123 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '梦网科技', 'exists': True}
2025-04-16 16:54:33,637 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002124 -> 输出 002124
2025-04-16 16:54:33,638 - src.data_sources.akshare - INFO - 股票 002124 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': 'ST天邦', 'exists': True}
2025-04-16 16:54:33,638 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002125 -> 输出 002125
2025-04-16 16:54:33,639 - src.data_sources.akshare - INFO - 股票 002125 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '湘潭电化', 'exists': True}
2025-04-16 16:54:33,639 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002126 -> 输出 002126
2025-04-16 16:54:33,640 - src.data_sources.akshare - INFO - 股票 002126 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '银轮股份', 'exists': True}
2025-04-16 16:54:33,641 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002127 -> 输出 002127
2025-04-16 16:54:33,641 - src.data_sources.akshare - INFO - 股票 002127 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '南极电商', 'exists': True}
2025-04-16 16:54:33,642 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002128 -> 输出 002128
2025-04-16 16:54:33,643 - src.data_sources.akshare - INFO - 股票 002128 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '电投能源', 'exists': True}
2025-04-16 16:54:33,643 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002129 -> 输出 002129
2025-04-16 16:54:33,644 - src.data_sources.akshare - INFO - 股票 002129 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': 'TCL中环', 'exists': True}
2025-04-16 16:54:33,644 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002130 -> 输出 002130
2025-04-16 16:54:33,645 - src.data_sources.akshare - INFO - 股票 002130 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '沃尔核材', 'exists': True}
2025-04-16 16:54:33,645 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002131 -> 输出 002131
2025-04-16 16:54:33,646 - src.data_sources.akshare - INFO - 股票 002131 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '利欧股份', 'exists': True}
2025-04-16 16:54:33,646 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002132 -> 输出 002132
2025-04-16 16:54:33,647 - src.data_sources.akshare - INFO - 股票 002132 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '恒星科技', 'exists': True}
2025-04-16 16:54:33,647 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002133 -> 输出 002133
2025-04-16 16:54:33,648 - src.data_sources.akshare - INFO - 股票 002133 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '广宇集团', 'exists': True}
2025-04-16 16:54:33,648 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002134 -> 输出 002134
2025-04-16 16:54:33,649 - src.data_sources.akshare - INFO - 股票 002134 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '天津普林', 'exists': True}
2025-04-16 16:54:33,649 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002135 -> 输出 002135
2025-04-16 16:54:33,650 - src.data_sources.akshare - INFO - 股票 002135 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '东南网架', 'exists': True}
2025-04-16 16:54:33,650 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002136 -> 输出 002136
2025-04-16 16:54:33,651 - src.data_sources.akshare - INFO - 股票 002136 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '安 纳 达', 'exists': True}
2025-04-16 16:54:33,651 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002137 -> 输出 002137
2025-04-16 16:54:33,652 - src.data_sources.akshare - INFO - 股票 002137 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '实益达', 'exists': True}
2025-04-16 16:54:33,652 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002138 -> 输出 002138
2025-04-16 16:54:33,653 - src.data_sources.akshare - INFO - 股票 002138 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '顺络电子', 'exists': True}
2025-04-16 16:54:33,653 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002139 -> 输出 002139
2025-04-16 16:54:33,654 - src.data_sources.akshare - INFO - 股票 002139 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '拓邦股份', 'exists': True}
2025-04-16 16:54:33,654 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002140 -> 输出 002140
2025-04-16 16:54:33,655 - src.data_sources.akshare - INFO - 股票 002140 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '东华科技', 'exists': True}
2025-04-16 16:54:33,655 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002141 -> 输出 002141
2025-04-16 16:54:33,656 - src.data_sources.akshare - INFO - 股票 002141 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '*ST贤丰', 'exists': True}
2025-04-16 16:54:33,657 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002142 -> 输出 002142
2025-04-16 16:54:33,658 - src.data_sources.akshare - INFO - 股票 002142 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '宁波银行', 'exists': True}
2025-04-16 16:54:33,658 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002144 -> 输出 002144
2025-04-16 16:54:33,659 - src.data_sources.akshare - INFO - 股票 002144 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '宏达高科', 'exists': True}
2025-04-16 16:54:33,659 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002145 -> 输出 002145
2025-04-16 16:54:33,660 - src.data_sources.akshare - INFO - 股票 002145 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '中核钛白', 'exists': True}
2025-04-16 16:54:33,660 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002146 -> 输出 002146
2025-04-16 16:54:33,660 - src.data_sources.akshare - INFO - 股票 002146 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '荣盛发展', 'exists': True}
2025-04-16 16:54:33,661 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002148 -> 输出 002148
2025-04-16 16:54:33,661 - src.data_sources.akshare - INFO - 股票 002148 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '北纬科技', 'exists': True}
2025-04-16 16:54:33,662 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002149 -> 输出 002149
2025-04-16 16:54:33,662 - src.data_sources.akshare - INFO - 股票 002149 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '西部材料', 'exists': True}
2025-04-16 16:54:33,663 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002150 -> 输出 002150
2025-04-16 16:54:33,664 - src.data_sources.akshare - INFO - 股票 002150 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '通润装备', 'exists': True}
2025-04-16 16:54:33,664 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002151 -> 输出 002151
2025-04-16 16:54:33,665 - src.data_sources.akshare - INFO - 股票 002151 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '北斗星通', 'exists': True}
2025-04-16 16:54:33,665 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002152 -> 输出 002152
2025-04-16 16:54:33,666 - src.data_sources.akshare - INFO - 股票 002152 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '广电运通', 'exists': True}
2025-04-16 16:54:33,666 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002153 -> 输出 002153
2025-04-16 16:54:33,667 - src.data_sources.akshare - INFO - 股票 002153 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '石基信息', 'exists': True}
2025-04-16 16:54:33,667 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002154 -> 输出 002154
2025-04-16 16:54:33,668 - src.data_sources.akshare - INFO - 股票 002154 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '报 喜 鸟', 'exists': True}
2025-04-16 16:54:33,668 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002155 -> 输出 002155
2025-04-16 16:54:33,669 - src.data_sources.akshare - INFO - 股票 002155 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '湖南黄金', 'exists': True}
2025-04-16 16:54:33,669 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002156 -> 输出 002156
2025-04-16 16:54:33,670 - src.data_sources.akshare - INFO - 股票 002156 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '通富微电', 'exists': True}
2025-04-16 16:54:33,670 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002157 -> 输出 002157
2025-04-16 16:54:33,671 - src.data_sources.akshare - INFO - 股票 002157 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '正邦科技', 'exists': True}
2025-04-16 16:54:33,671 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002158 -> 输出 002158
2025-04-16 16:54:33,672 - src.data_sources.akshare - INFO - 股票 002158 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '汉钟精机', 'exists': True}
2025-04-16 16:54:33,672 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002159 -> 输出 002159
2025-04-16 16:54:33,673 - src.data_sources.akshare - INFO - 股票 002159 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '三特索道', 'exists': True}
2025-04-16 16:54:33,673 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002160 -> 输出 002160
2025-04-16 16:54:33,674 - src.data_sources.akshare - INFO - 股票 002160 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '常铝股份', 'exists': True}
2025-04-16 16:54:33,675 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002161 -> 输出 002161
2025-04-16 16:54:33,675 - src.data_sources.akshare - INFO - 股票 002161 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '远 望 谷', 'exists': True}
2025-04-16 16:54:33,676 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002162 -> 输出 002162
2025-04-16 16:54:33,676 - src.data_sources.akshare - INFO - 股票 002162 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '悦心健康', 'exists': True}
2025-04-16 16:54:33,676 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002163 -> 输出 002163
2025-04-16 16:54:33,677 - src.data_sources.akshare - INFO - 股票 002163 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '海南发展', 'exists': True}
2025-04-16 16:54:33,677 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002164 -> 输出 002164
2025-04-16 16:54:33,678 - src.data_sources.akshare - INFO - 股票 002164 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '宁波东力', 'exists': True}
2025-04-16 16:54:33,678 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002165 -> 输出 002165
2025-04-16 16:54:33,679 - src.data_sources.akshare - INFO - 股票 002165 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '红 宝 丽', 'exists': True}
2025-04-16 16:54:33,679 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002166 -> 输出 002166
2025-04-16 16:54:33,680 - src.data_sources.akshare - INFO - 股票 002166 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '莱茵生物', 'exists': True}
2025-04-16 16:54:33,681 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002167 -> 输出 002167
2025-04-16 16:54:33,682 - src.data_sources.akshare - INFO - 股票 002167 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '东方锆业', 'exists': True}
2025-04-16 16:54:33,682 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002168 -> 输出 002168
2025-04-16 16:54:33,683 - src.data_sources.akshare - INFO - 股票 002168 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': 'ST惠程', 'exists': True}
2025-04-16 16:54:33,683 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002169 -> 输出 002169
2025-04-16 16:54:33,684 - src.data_sources.akshare - INFO - 股票 002169 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '智光电气', 'exists': True}
2025-04-16 16:54:33,684 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002170 -> 输出 002170
2025-04-16 16:54:33,684 - src.data_sources.akshare - INFO - 股票 002170 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '芭田股份', 'exists': True}
2025-04-16 16:54:33,685 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002171 -> 输出 002171
2025-04-16 16:54:33,685 - src.data_sources.akshare - INFO - 股票 002171 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '楚江新材', 'exists': True}
2025-04-16 16:54:33,686 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002172 -> 输出 002172
2025-04-16 16:54:33,686 - src.data_sources.akshare - INFO - 股票 002172 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '澳洋健康', 'exists': True}
2025-04-16 16:54:33,687 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002173 -> 输出 002173
2025-04-16 16:54:33,687 - src.data_sources.akshare - INFO - 股票 002173 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '创新医疗', 'exists': True}
2025-04-16 16:54:33,688 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002174 -> 输出 002174
2025-04-16 16:54:33,688 - src.data_sources.akshare - INFO - 股票 002174 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '游族网络', 'exists': True}
2025-04-16 16:54:33,689 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002175 -> 输出 002175
2025-04-16 16:54:33,689 - src.data_sources.akshare - INFO - 股票 002175 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '东方智造', 'exists': True}
2025-04-16 16:54:33,690 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002176 -> 输出 002176
2025-04-16 16:54:33,691 - src.data_sources.akshare - INFO - 股票 002176 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '江特电机', 'exists': True}
2025-04-16 16:54:33,691 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002177 -> 输出 002177
2025-04-16 16:54:33,692 - src.data_sources.akshare - INFO - 股票 002177 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '御银股份', 'exists': True}
2025-04-16 16:54:33,692 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002178 -> 输出 002178
2025-04-16 16:54:33,693 - src.data_sources.akshare - INFO - 股票 002178 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '延华智能', 'exists': True}
2025-04-16 16:54:33,694 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002179 -> 输出 002179
2025-04-16 16:54:33,694 - src.data_sources.akshare - INFO - 股票 002179 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '中航光电', 'exists': True}
2025-04-16 16:54:33,695 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002180 -> 输出 002180
2025-04-16 16:54:33,695 - src.data_sources.akshare - INFO - 股票 002180 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '纳思达', 'exists': True}
2025-04-16 16:54:33,696 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002181 -> 输出 002181
2025-04-16 16:54:33,697 - src.data_sources.akshare - INFO - 股票 002181 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '粤 传 媒', 'exists': True}
2025-04-16 16:54:33,697 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002182 -> 输出 002182
2025-04-16 16:54:33,698 - src.data_sources.akshare - INFO - 股票 002182 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '宝武镁业', 'exists': True}
2025-04-16 16:54:33,698 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002183 -> 输出 002183
2025-04-16 16:54:33,699 - src.data_sources.akshare - INFO - 股票 002183 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '怡 亚 通', 'exists': True}
2025-04-16 16:54:33,699 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002184 -> 输出 002184
2025-04-16 16:54:33,700 - src.data_sources.akshare - INFO - 股票 002184 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '海得控制', 'exists': True}
2025-04-16 16:54:33,700 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002185 -> 输出 002185
2025-04-16 16:54:33,701 - src.data_sources.akshare - INFO - 股票 002185 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '华天科技', 'exists': True}
2025-04-16 16:54:33,701 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002186 -> 输出 002186
2025-04-16 16:54:33,701 - src.data_sources.akshare - INFO - 股票 002186 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '全 聚 德', 'exists': True}
2025-04-16 16:54:33,702 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002187 -> 输出 002187
2025-04-16 16:54:33,702 - src.data_sources.akshare - INFO - 股票 002187 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '广百股份', 'exists': True}
2025-04-16 16:54:33,703 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002188 -> 输出 002188
2025-04-16 16:54:33,703 - src.data_sources.akshare - INFO - 股票 002188 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '中天服务', 'exists': True}
2025-04-16 16:54:33,704 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002189 -> 输出 002189
2025-04-16 16:54:33,704 - src.data_sources.akshare - INFO - 股票 002189 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '中光学', 'exists': True}
2025-04-16 16:54:33,705 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002190 -> 输出 002190
2025-04-16 16:54:33,705 - src.data_sources.akshare - INFO - 股票 002190 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '成飞集成', 'exists': True}
2025-04-16 16:54:33,706 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002191 -> 输出 002191
2025-04-16 16:54:33,707 - src.data_sources.akshare - INFO - 股票 002191 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '劲嘉股份', 'exists': True}
2025-04-16 16:54:33,707 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002192 -> 输出 002192
2025-04-16 16:54:33,708 - src.data_sources.akshare - INFO - 股票 002192 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '融捷股份', 'exists': True}
2025-04-16 16:54:33,708 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002193 -> 输出 002193
2025-04-16 16:54:33,709 - src.data_sources.akshare - INFO - 股票 002193 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '如意集团', 'exists': True}
2025-04-16 16:54:33,709 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002194 -> 输出 002194
2025-04-16 16:54:33,710 - src.data_sources.akshare - INFO - 股票 002194 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '武汉凡谷', 'exists': True}
2025-04-16 16:54:33,710 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002195 -> 输出 002195
2025-04-16 16:54:33,710 - src.data_sources.akshare - INFO - 股票 002195 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '岩山科技', 'exists': True}
2025-04-16 16:54:33,711 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002196 -> 输出 002196
2025-04-16 16:54:33,711 - src.data_sources.akshare - INFO - 股票 002196 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '方正电机', 'exists': True}
2025-04-16 16:54:33,712 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002197 -> 输出 002197
2025-04-16 16:54:33,712 - src.data_sources.akshare - INFO - 股票 002197 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': 'ST证通', 'exists': True}
2025-04-16 16:54:33,713 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002198 -> 输出 002198
2025-04-16 16:54:33,713 - src.data_sources.akshare - INFO - 股票 002198 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '嘉应制药', 'exists': True}
2025-04-16 16:54:33,714 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002199 -> 输出 002199
2025-04-16 16:54:33,714 - src.data_sources.akshare - INFO - 股票 002199 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '*ST东晶', 'exists': True}
2025-04-16 16:54:33,715 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002201 -> 输出 002201
2025-04-16 16:54:33,715 - src.data_sources.akshare - INFO - 股票 002201 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '九鼎新材', 'exists': True}
2025-04-16 16:54:33,716 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002210 -> 输出 002210
2025-04-16 16:54:33,716 - src.data_sources.akshare - INFO - 股票 002210 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '飞马国际', 'exists': True}
2025-04-16 16:54:33,716 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002211 -> 输出 002211
2025-04-16 16:54:33,717 - src.data_sources.akshare - INFO - 股票 002211 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '宏达新材', 'exists': True}
2025-04-16 16:54:33,717 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002212 -> 输出 002212
2025-04-16 16:54:33,718 - src.data_sources.akshare - INFO - 股票 002212 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '天融信', 'exists': True}
2025-04-16 16:54:33,718 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002213 -> 输出 002213
2025-04-16 16:54:33,719 - src.data_sources.akshare - INFO - 股票 002213 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '大为股份', 'exists': True}
2025-04-16 16:54:33,719 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002214 -> 输出 002214
2025-04-16 16:54:33,720 - src.data_sources.akshare - INFO - 股票 002214 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '大立科技', 'exists': True}
2025-04-16 16:54:33,720 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002215 -> 输出 002215
2025-04-16 16:54:33,721 - src.data_sources.akshare - INFO - 股票 002215 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '诺 普 信', 'exists': True}
2025-04-16 16:54:33,721 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002216 -> 输出 002216
2025-04-16 16:54:33,721 - src.data_sources.akshare - INFO - 股票 002216 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '三全食品', 'exists': True}
2025-04-16 16:54:33,722 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002217 -> 输出 002217
2025-04-16 16:54:33,723 - src.data_sources.akshare - INFO - 股票 002217 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '*ST合泰', 'exists': True}
2025-04-16 16:54:33,723 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002218 -> 输出 002218
2025-04-16 16:54:33,724 - src.data_sources.akshare - INFO - 股票 002218 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '拓日新能', 'exists': True}
2025-04-16 16:54:33,724 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002219 -> 输出 002219
2025-04-16 16:54:33,725 - src.data_sources.akshare - INFO - 股票 002219 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '新里程', 'exists': True}
2025-04-16 16:54:33,725 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002221 -> 输出 002221
2025-04-16 16:54:33,726 - src.data_sources.akshare - INFO - 股票 002221 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '东华能源', 'exists': True}
2025-04-16 16:54:33,726 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002231 -> 输出 002231
2025-04-16 16:54:33,727 - src.data_sources.akshare - INFO - 股票 002231 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '奥维通信', 'exists': True}
2025-04-16 16:54:33,727 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002241 -> 输出 002241
2025-04-16 16:54:33,727 - src.data_sources.akshare - INFO - 股票 002241 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '歌尔股份', 'exists': True}
2025-04-16 16:54:33,728 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002251 -> 输出 002251
2025-04-16 16:54:33,728 - src.data_sources.akshare - INFO - 股票 002251 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': 'ST步步高', 'exists': True}
2025-04-16 16:54:33,729 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002261 -> 输出 002261
2025-04-16 16:54:33,729 - src.data_sources.akshare - INFO - 股票 002261 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '拓维信息', 'exists': True}
2025-04-16 16:54:33,730 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002271 -> 输出 002271
2025-04-16 16:54:33,731 - src.data_sources.akshare - INFO - 股票 002271 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '东方雨虹', 'exists': True}
2025-04-16 16:54:33,731 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002281 -> 输出 002281
2025-04-16 16:54:33,731 - src.data_sources.akshare - INFO - 股票 002281 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '光迅科技', 'exists': True}
2025-04-16 16:54:33,732 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002291 -> 输出 002291
2025-04-16 16:54:33,732 - src.data_sources.akshare - INFO - 股票 002291 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '遥望科技', 'exists': True}
2025-04-16 16:54:33,733 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002301 -> 输出 002301
2025-04-16 16:54:33,733 - src.data_sources.akshare - INFO - 股票 002301 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '齐心集团', 'exists': True}
2025-04-16 16:54:33,734 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002310 -> 输出 002310
2025-04-16 16:54:33,734 - src.data_sources.akshare - INFO - 股票 002310 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '*ST东园', 'exists': True}
2025-04-16 16:54:33,734 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002311 -> 输出 002311
2025-04-16 16:54:33,735 - src.data_sources.akshare - INFO - 股票 002311 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '海大集团', 'exists': True}
2025-04-16 16:54:33,735 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002312 -> 输出 002312
2025-04-16 16:54:33,736 - src.data_sources.akshare - INFO - 股票 002312 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '川发龙蟒', 'exists': True}
2025-04-16 16:54:33,736 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002313 -> 输出 002313
2025-04-16 16:54:33,737 - src.data_sources.akshare - INFO - 股票 002313 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '日海智能', 'exists': True}
2025-04-16 16:54:33,737 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002314 -> 输出 002314
2025-04-16 16:54:33,738 - src.data_sources.akshare - INFO - 股票 002314 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '南山控股', 'exists': True}
2025-04-16 16:54:33,739 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002315 -> 输出 002315
2025-04-16 16:54:33,739 - src.data_sources.akshare - INFO - 股票 002315 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '焦点科技', 'exists': True}
2025-04-16 16:54:33,740 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002316 -> 输出 002316
2025-04-16 16:54:33,741 - src.data_sources.akshare - INFO - 股票 002316 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': 'ST亚联', 'exists': True}
2025-04-16 16:54:33,741 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002317 -> 输出 002317
2025-04-16 16:54:33,742 - src.data_sources.akshare - INFO - 股票 002317 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '众生药业', 'exists': True}
2025-04-16 16:54:33,742 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002318 -> 输出 002318
2025-04-16 16:54:33,743 - src.data_sources.akshare - INFO - 股票 002318 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '久立特材', 'exists': True}
2025-04-16 16:54:33,743 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002319 -> 输出 002319
2025-04-16 16:54:33,744 - src.data_sources.akshare - INFO - 股票 002319 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '乐通股份', 'exists': True}
2025-04-16 16:54:33,744 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002321 -> 输出 002321
2025-04-16 16:54:33,744 - src.data_sources.akshare - INFO - 股票 002321 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '华英农业', 'exists': True}
2025-04-16 16:54:33,745 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002331 -> 输出 002331
2025-04-16 16:54:33,745 - src.data_sources.akshare - INFO - 股票 002331 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '皖通科技', 'exists': True}
2025-04-16 16:54:33,746 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002351 -> 输出 002351
2025-04-16 16:54:33,747 - src.data_sources.akshare - INFO - 股票 002351 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '漫步者', 'exists': True}
2025-04-16 16:54:33,747 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002361 -> 输出 002361
2025-04-16 16:54:33,748 - src.data_sources.akshare - INFO - 股票 002361 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '神剑股份', 'exists': True}
2025-04-16 16:54:33,748 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002371 -> 输出 002371
2025-04-16 16:54:33,749 - src.data_sources.akshare - INFO - 股票 002371 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '北方华创', 'exists': True}
2025-04-16 16:54:33,749 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002381 -> 输出 002381
2025-04-16 16:54:33,750 - src.data_sources.akshare - INFO - 股票 002381 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '双箭股份', 'exists': True}
2025-04-16 16:54:33,750 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002391 -> 输出 002391
2025-04-16 16:54:33,751 - src.data_sources.akshare - INFO - 股票 002391 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '长青股份', 'exists': True}
2025-04-16 16:54:33,751 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002401 -> 输出 002401
2025-04-16 16:54:33,752 - src.data_sources.akshare - INFO - 股票 002401 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '中远海科', 'exists': True}
2025-04-16 16:54:33,752 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002410 -> 输出 002410
2025-04-16 16:54:33,752 - src.data_sources.akshare - INFO - 股票 002410 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '广联达', 'exists': True}
2025-04-16 16:54:33,753 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002412 -> 输出 002412
2025-04-16 16:54:33,753 - src.data_sources.akshare - INFO - 股票 002412 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '汉森制药', 'exists': True}
2025-04-16 16:54:33,754 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002413 -> 输出 002413
2025-04-16 16:54:33,754 - src.data_sources.akshare - INFO - 股票 002413 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '雷科防务', 'exists': True}
2025-04-16 16:54:33,755 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002414 -> 输出 002414
2025-04-16 16:54:33,756 - src.data_sources.akshare - INFO - 股票 002414 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '高德红外', 'exists': True}
2025-04-16 16:54:33,756 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002415 -> 输出 002415
2025-04-16 16:54:33,757 - src.data_sources.akshare - INFO - 股票 002415 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '海康威视', 'exists': True}
2025-04-16 16:54:33,757 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002416 -> 输出 002416
2025-04-16 16:54:33,758 - src.data_sources.akshare - INFO - 股票 002416 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '爱施德', 'exists': True}
2025-04-16 16:54:33,758 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002418 -> 输出 002418
2025-04-16 16:54:33,759 - src.data_sources.akshare - INFO - 股票 002418 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '康盛股份', 'exists': True}
2025-04-16 16:54:33,760 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002419 -> 输出 002419
2025-04-16 16:54:33,760 - src.data_sources.akshare - INFO - 股票 002419 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '天虹股份', 'exists': True}
2025-04-16 16:54:33,761 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002421 -> 输出 002421
2025-04-16 16:54:33,761 - src.data_sources.akshare - INFO - 股票 002421 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '达实智能', 'exists': True}
2025-04-16 16:54:33,762 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002431 -> 输出 002431
2025-04-16 16:54:33,762 - src.data_sources.akshare - INFO - 股票 002431 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '棕榈股份', 'exists': True}
2025-04-16 16:54:33,763 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002441 -> 输出 002441
2025-04-16 16:54:33,764 - src.data_sources.akshare - INFO - 股票 002441 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '众业达', 'exists': True}
2025-04-16 16:54:33,764 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002451 -> 输出 002451
2025-04-16 16:54:33,765 - src.data_sources.akshare - INFO - 股票 002451 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '摩恩电气', 'exists': True}
2025-04-16 16:54:33,765 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002461 -> 输出 002461
2025-04-16 16:54:33,765 - src.data_sources.akshare - INFO - 股票 002461 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '珠江啤酒', 'exists': True}
2025-04-16 16:54:33,766 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002471 -> 输出 002471
2025-04-16 16:54:33,766 - src.data_sources.akshare - INFO - 股票 002471 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '中超控股', 'exists': True}
2025-04-16 16:54:33,767 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002481 -> 输出 002481
2025-04-16 16:54:33,767 - src.data_sources.akshare - INFO - 股票 002481 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '双塔食品', 'exists': True}
2025-04-16 16:54:33,768 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002491 -> 输出 002491
2025-04-16 16:54:33,768 - src.data_sources.akshare - INFO - 股票 002491 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '通鼎互联', 'exists': True}
2025-04-16 16:54:33,768 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002501 -> 输出 002501
2025-04-16 16:54:33,769 - src.data_sources.akshare - INFO - 股票 002501 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '利源股份', 'exists': True}
2025-04-16 16:54:33,769 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002510 -> 输出 002510
2025-04-16 16:54:33,770 - src.data_sources.akshare - INFO - 股票 002510 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '天汽模', 'exists': True}
2025-04-16 16:54:33,770 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002511 -> 输出 002511
2025-04-16 16:54:33,771 - src.data_sources.akshare - INFO - 股票 002511 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '中顺洁柔', 'exists': True}
2025-04-16 16:54:33,771 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002512 -> 输出 002512
2025-04-16 16:54:33,772 - src.data_sources.akshare - INFO - 股票 002512 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '达华智能', 'exists': True}
2025-04-16 16:54:33,773 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002513 -> 输出 002513
2025-04-16 16:54:33,773 - src.data_sources.akshare - INFO - 股票 002513 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '蓝丰生化', 'exists': True}
2025-04-16 16:54:33,774 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002514 -> 输出 002514
2025-04-16 16:54:33,774 - src.data_sources.akshare - INFO - 股票 002514 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '宝馨科技', 'exists': True}
2025-04-16 16:54:33,775 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002515 -> 输出 002515
2025-04-16 16:54:33,775 - src.data_sources.akshare - INFO - 股票 002515 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '金字火腿', 'exists': True}
2025-04-16 16:54:33,776 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002516 -> 输出 002516
2025-04-16 16:54:33,776 - src.data_sources.akshare - INFO - 股票 002516 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '旷达科技', 'exists': True}
2025-04-16 16:54:33,776 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002517 -> 输出 002517
2025-04-16 16:54:33,777 - src.data_sources.akshare - INFO - 股票 002517 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '恺英网络', 'exists': True}
2025-04-16 16:54:33,777 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002518 -> 输出 002518
2025-04-16 16:54:33,778 - src.data_sources.akshare - INFO - 股票 002518 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '科士达', 'exists': True}
2025-04-16 16:54:33,778 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002519 -> 输出 002519
2025-04-16 16:54:33,779 - src.data_sources.akshare - INFO - 股票 002519 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '银河电子', 'exists': True}
2025-04-16 16:54:33,779 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002521 -> 输出 002521
2025-04-16 16:54:33,780 - src.data_sources.akshare - INFO - 股票 002521 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '齐峰新材', 'exists': True}
2025-04-16 16:54:33,780 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002531 -> 输出 002531
2025-04-16 16:54:33,781 - src.data_sources.akshare - INFO - 股票 002531 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '天顺风能', 'exists': True}
2025-04-16 16:54:33,781 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002541 -> 输出 002541
2025-04-16 16:54:33,782 - src.data_sources.akshare - INFO - 股票 002541 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '鸿路钢构', 'exists': True}
2025-04-16 16:54:33,782 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002551 -> 输出 002551
2025-04-16 16:54:33,783 - src.data_sources.akshare - INFO - 股票 002551 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '尚荣医疗', 'exists': True}
2025-04-16 16:54:33,783 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002561 -> 输出 002561
2025-04-16 16:54:33,784 - src.data_sources.akshare - INFO - 股票 002561 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '徐家汇', 'exists': True}
2025-04-16 16:54:33,784 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002571 -> 输出 002571
2025-04-16 16:54:33,785 - src.data_sources.akshare - INFO - 股票 002571 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '德力股份', 'exists': True}
2025-04-16 16:54:33,785 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002581 -> 输出 002581
2025-04-16 16:54:33,786 - src.data_sources.akshare - INFO - 股票 002581 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '未名医药', 'exists': True}
2025-04-16 16:54:33,786 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002591 -> 输出 002591
2025-04-16 16:54:33,787 - src.data_sources.akshare - INFO - 股票 002591 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '恒大高新', 'exists': True}
2025-04-16 16:54:33,787 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002601 -> 输出 002601
2025-04-16 16:54:33,788 - src.data_sources.akshare - INFO - 股票 002601 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '龙佰集团', 'exists': True}
2025-04-16 16:54:33,788 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002611 -> 输出 002611
2025-04-16 16:54:33,789 - src.data_sources.akshare - INFO - 股票 002611 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '东方精工', 'exists': True}
2025-04-16 16:54:33,789 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002612 -> 输出 002612
2025-04-16 16:54:33,790 - src.data_sources.akshare - INFO - 股票 002612 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '朗姿股份', 'exists': True}
2025-04-16 16:54:33,790 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002613 -> 输出 002613
2025-04-16 16:54:33,791 - src.data_sources.akshare - INFO - 股票 002613 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '北玻股份', 'exists': True}
2025-04-16 16:54:33,791 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002614 -> 输出 002614
2025-04-16 16:54:33,792 - src.data_sources.akshare - INFO - 股票 002614 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '奥佳华', 'exists': True}
2025-04-16 16:54:33,792 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002615 -> 输出 002615
2025-04-16 16:54:33,793 - src.data_sources.akshare - INFO - 股票 002615 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '哈尔斯', 'exists': True}
2025-04-16 16:54:33,793 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002616 -> 输出 002616
2025-04-16 16:54:33,794 - src.data_sources.akshare - INFO - 股票 002616 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '长青集团', 'exists': True}
2025-04-16 16:54:33,794 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002617 -> 输出 002617
2025-04-16 16:54:33,795 - src.data_sources.akshare - INFO - 股票 002617 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '露笑科技', 'exists': True}
2025-04-16 16:54:33,795 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002631 -> 输出 002631
2025-04-16 16:54:33,796 - src.data_sources.akshare - INFO - 股票 002631 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '德尔未来', 'exists': True}
2025-04-16 16:54:33,796 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002641 -> 输出 002641
2025-04-16 16:54:33,797 - src.data_sources.akshare - INFO - 股票 002641 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '公元股份', 'exists': True}
2025-04-16 16:54:33,797 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002651 -> 输出 002651
2025-04-16 16:54:33,798 - src.data_sources.akshare - INFO - 股票 002651 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '利君股份', 'exists': True}
2025-04-16 16:54:33,798 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002661 -> 输出 002661
2025-04-16 16:54:33,799 - src.data_sources.akshare - INFO - 股票 002661 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '克明食品', 'exists': True}
2025-04-16 16:54:33,800 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002671 -> 输出 002671
2025-04-16 16:54:33,800 - src.data_sources.akshare - INFO - 股票 002671 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '龙泉股份', 'exists': True}
2025-04-16 16:54:33,800 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002681 -> 输出 002681
2025-04-16 16:54:33,801 - src.data_sources.akshare - INFO - 股票 002681 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '奋达科技', 'exists': True}
2025-04-16 16:54:33,801 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002691 -> 输出 002691
2025-04-16 16:54:33,802 - src.data_sources.akshare - INFO - 股票 002691 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '冀凯股份', 'exists': True}
2025-04-16 16:54:33,802 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002701 -> 输出 002701
2025-04-16 16:54:33,803 - src.data_sources.akshare - INFO - 股票 002701 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '奥瑞金', 'exists': True}
2025-04-16 16:54:33,803 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002712 -> 输出 002712
2025-04-16 16:54:33,804 - src.data_sources.akshare - INFO - 股票 002712 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '思美传媒', 'exists': True}
2025-04-16 16:54:33,804 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002713 -> 输出 002713
2025-04-16 16:54:33,805 - src.data_sources.akshare - INFO - 股票 002713 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '东易日盛', 'exists': True}
2025-04-16 16:54:33,805 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002714 -> 输出 002714
2025-04-16 16:54:33,806 - src.data_sources.akshare - INFO - 股票 002714 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '牧原股份', 'exists': True}
2025-04-16 16:54:33,807 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002715 -> 输出 002715
2025-04-16 16:54:33,807 - src.data_sources.akshare - INFO - 股票 002715 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '登云股份', 'exists': True}
2025-04-16 16:54:33,808 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002716 -> 输出 002716
2025-04-16 16:54:33,808 - src.data_sources.akshare - INFO - 股票 002716 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '湖南白银', 'exists': True}
2025-04-16 16:54:33,809 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002717 -> 输出 002717
2025-04-16 16:54:33,809 - src.data_sources.akshare - INFO - 股票 002717 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '岭南股份', 'exists': True}
2025-04-16 16:54:33,810 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002718 -> 输出 002718
2025-04-16 16:54:33,810 - src.data_sources.akshare - INFO - 股票 002718 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '友邦吊顶', 'exists': True}
2025-04-16 16:54:33,811 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002719 -> 输出 002719
2025-04-16 16:54:33,811 - src.data_sources.akshare - INFO - 股票 002719 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '麦趣尔', 'exists': True}
2025-04-16 16:54:33,811 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002721 -> 输出 002721
2025-04-16 16:54:33,812 - src.data_sources.akshare - INFO - 股票 002721 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': 'ST金一', 'exists': True}
2025-04-16 16:54:33,812 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002731 -> 输出 002731
2025-04-16 16:54:33,813 - src.data_sources.akshare - INFO - 股票 002731 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '萃华珠宝', 'exists': True}
2025-04-16 16:54:33,814 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002741 -> 输出 002741
2025-04-16 16:54:33,815 - src.data_sources.akshare - INFO - 股票 002741 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '光华科技', 'exists': True}
2025-04-16 16:54:33,815 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002761 -> 输出 002761
2025-04-16 16:54:33,816 - src.data_sources.akshare - INFO - 股票 002761 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '浙江建投', 'exists': True}
2025-04-16 16:54:33,816 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002771 -> 输出 002771
2025-04-16 16:54:33,817 - src.data_sources.akshare - INFO - 股票 002771 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '真视通', 'exists': True}
2025-04-16 16:54:33,817 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002791 -> 输出 002791
2025-04-16 16:54:33,818 - src.data_sources.akshare - INFO - 股票 002791 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '坚朗五金', 'exists': True}
2025-04-16 16:54:33,818 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002801 -> 输出 002801
2025-04-16 16:54:33,819 - src.data_sources.akshare - INFO - 股票 002801 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '微光股份', 'exists': True}
2025-04-16 16:54:33,819 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002810 -> 输出 002810
2025-04-16 16:54:33,820 - src.data_sources.akshare - INFO - 股票 002810 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '山东赫达', 'exists': True}
2025-04-16 16:54:33,821 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002811 -> 输出 002811
2025-04-16 16:54:33,821 - src.data_sources.akshare - INFO - 股票 002811 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '郑中设计', 'exists': True}
2025-04-16 16:54:33,822 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002812 -> 输出 002812
2025-04-16 16:54:33,823 - src.data_sources.akshare - INFO - 股票 002812 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '恩捷股份', 'exists': True}
2025-04-16 16:54:33,823 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002813 -> 输出 002813
2025-04-16 16:54:33,824 - src.data_sources.akshare - INFO - 股票 002813 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '路畅科技', 'exists': True}
2025-04-16 16:54:33,824 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002815 -> 输出 002815
2025-04-16 16:54:33,825 - src.data_sources.akshare - INFO - 股票 002815 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '崇达技术', 'exists': True}
2025-04-16 16:54:33,825 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002816 -> 输出 002816
2025-04-16 16:54:33,826 - src.data_sources.akshare - INFO - 股票 002816 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '和科达', 'exists': True}
2025-04-16 16:54:33,826 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002817 -> 输出 002817
2025-04-16 16:54:33,827 - src.data_sources.akshare - INFO - 股票 002817 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '黄山胶囊', 'exists': True}
2025-04-16 16:54:33,827 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002818 -> 输出 002818
2025-04-16 16:54:33,828 - src.data_sources.akshare - INFO - 股票 002818 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '富森美', 'exists': True}
2025-04-16 16:54:33,828 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002819 -> 输出 002819
2025-04-16 16:54:33,829 - src.data_sources.akshare - INFO - 股票 002819 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '东方中科', 'exists': True}
2025-04-16 16:54:33,829 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002821 -> 输出 002821
2025-04-16 16:54:33,830 - src.data_sources.akshare - INFO - 股票 002821 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '凯莱英', 'exists': True}
2025-04-16 16:54:33,830 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002831 -> 输出 002831
2025-04-16 16:54:33,831 - src.data_sources.akshare - INFO - 股票 002831 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '裕同科技', 'exists': True}
2025-04-16 16:54:33,831 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002841 -> 输出 002841
2025-04-16 16:54:33,832 - src.data_sources.akshare - INFO - 股票 002841 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '视源股份', 'exists': True}
2025-04-16 16:54:33,832 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002851 -> 输出 002851
2025-04-16 16:54:33,833 - src.data_sources.akshare - INFO - 股票 002851 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '麦格米特', 'exists': True}
2025-04-16 16:54:33,833 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002861 -> 输出 002861
2025-04-16 16:54:33,834 - src.data_sources.akshare - INFO - 股票 002861 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '瀛通通讯', 'exists': True}
2025-04-16 16:54:33,834 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002871 -> 输出 002871
2025-04-16 16:54:33,835 - src.data_sources.akshare - INFO - 股票 002871 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '伟隆股份', 'exists': True}
2025-04-16 16:54:33,835 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002881 -> 输出 002881
2025-04-16 16:54:33,836 - src.data_sources.akshare - INFO - 股票 002881 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '美格智能', 'exists': True}
2025-04-16 16:54:33,836 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002891 -> 输出 002891
2025-04-16 16:54:33,837 - src.data_sources.akshare - INFO - 股票 002891 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '中宠股份', 'exists': True}
2025-04-16 16:54:33,837 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002901 -> 输出 002901
2025-04-16 16:54:33,838 - src.data_sources.akshare - INFO - 股票 002901 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '大博医疗', 'exists': True}
2025-04-16 16:54:33,838 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002910 -> 输出 002910
2025-04-16 16:54:33,839 - src.data_sources.akshare - INFO - 股票 002910 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '庄园牧场', 'exists': True}
2025-04-16 16:54:33,840 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002911 -> 输出 002911
2025-04-16 16:54:33,840 - src.data_sources.akshare - INFO - 股票 002911 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '佛燃能源', 'exists': True}
2025-04-16 16:54:33,841 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002912 -> 输出 002912
2025-04-16 16:54:33,841 - src.data_sources.akshare - INFO - 股票 002912 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '中新赛克', 'exists': True}
2025-04-16 16:54:33,842 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002913 -> 输出 002913
2025-04-16 16:54:33,842 - src.data_sources.akshare - INFO - 股票 002913 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '奥士康', 'exists': True}
2025-04-16 16:54:33,843 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002915 -> 输出 002915
2025-04-16 16:54:33,843 - src.data_sources.akshare - INFO - 股票 002915 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '中欣氟材', 'exists': True}
2025-04-16 16:54:33,843 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002916 -> 输出 002916
2025-04-16 16:54:33,844 - src.data_sources.akshare - INFO - 股票 002916 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '深南电路', 'exists': True}
2025-04-16 16:54:33,844 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002917 -> 输出 002917
2025-04-16 16:54:33,845 - src.data_sources.akshare - INFO - 股票 002917 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '金奥博', 'exists': True}
2025-04-16 16:54:33,845 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002918 -> 输出 002918
2025-04-16 16:54:33,846 - src.data_sources.akshare - INFO - 股票 002918 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '蒙娜丽莎', 'exists': True}
2025-04-16 16:54:33,847 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002919 -> 输出 002919
2025-04-16 16:54:33,847 - src.data_sources.akshare - INFO - 股票 002919 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '名臣健康', 'exists': True}
2025-04-16 16:54:33,848 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002921 -> 输出 002921
2025-04-16 16:54:33,849 - src.data_sources.akshare - INFO - 股票 002921 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '联诚精密', 'exists': True}
2025-04-16 16:54:33,849 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002931 -> 输出 002931
2025-04-16 16:54:33,850 - src.data_sources.akshare - INFO - 股票 002931 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '锋龙股份', 'exists': True}
2025-04-16 16:54:33,850 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002941 -> 输出 002941
2025-04-16 16:54:33,851 - src.data_sources.akshare - INFO - 股票 002941 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '新疆交建', 'exists': True}
2025-04-16 16:54:33,851 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002951 -> 输出 002951
2025-04-16 16:54:33,851 - src.data_sources.akshare - INFO - 股票 002951 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '*ST金时', 'exists': True}
2025-04-16 16:54:33,852 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002961 -> 输出 002961
2025-04-16 16:54:33,852 - src.data_sources.akshare - INFO - 股票 002961 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '瑞达期货', 'exists': True}
2025-04-16 16:54:33,853 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002971 -> 输出 002971
2025-04-16 16:54:33,853 - src.data_sources.akshare - INFO - 股票 002971 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '和远气体', 'exists': True}
2025-04-16 16:54:33,854 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002981 -> 输出 002981
2025-04-16 16:54:33,854 - src.data_sources.akshare - INFO - 股票 002981 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '朝阳科技', 'exists': True}
2025-04-16 16:54:33,855 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 002991 -> 输出 002991
2025-04-16 16:54:33,856 - src.data_sources.akshare - INFO - 股票 002991 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板(原中小板)', 'prefix': 'sz', 'name': '甘源食品', 'exists': True}
2025-04-16 16:54:33,856 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 003001 -> 输出 003001
2025-04-16 16:54:33,857 - src.data_sources.akshare - INFO - 股票 003001 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中岩大地', 'exists': True}
2025-04-16 16:54:33,857 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 003010 -> 输出 003010
2025-04-16 16:54:33,858 - src.data_sources.akshare - INFO - 股票 003010 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '若羽臣', 'exists': True}
2025-04-16 16:54:33,858 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 003011 -> 输出 003011
2025-04-16 16:54:33,859 - src.data_sources.akshare - INFO - 股票 003011 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '海象新材', 'exists': True}
2025-04-16 16:54:33,859 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 003012 -> 输出 003012
2025-04-16 16:54:33,859 - src.data_sources.akshare - INFO - 股票 003012 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '东鹏控股', 'exists': True}
2025-04-16 16:54:33,860 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 003013 -> 输出 003013
2025-04-16 16:54:33,861 - src.data_sources.akshare - INFO - 股票 003013 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '地铁设计', 'exists': True}
2025-04-16 16:54:33,861 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 003015 -> 输出 003015
2025-04-16 16:54:33,862 - src.data_sources.akshare - INFO - 股票 003015 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '日久光电', 'exists': True}
2025-04-16 16:54:33,862 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 003016 -> 输出 003016
2025-04-16 16:54:33,863 - src.data_sources.akshare - INFO - 股票 003016 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '欣贺股份', 'exists': True}
2025-04-16 16:54:33,863 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 003017 -> 输出 003017
2025-04-16 16:54:33,864 - src.data_sources.akshare - INFO - 股票 003017 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '大洋生物', 'exists': True}
2025-04-16 16:54:33,864 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 003018 -> 输出 003018
2025-04-16 16:54:33,865 - src.data_sources.akshare - INFO - 股票 003018 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '金富科技', 'exists': True}
2025-04-16 16:54:33,865 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 003019 -> 输出 003019
2025-04-16 16:54:33,866 - src.data_sources.akshare - INFO - 股票 003019 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '宸展光电', 'exists': True}
2025-04-16 16:54:33,866 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 003021 -> 输出 003021
2025-04-16 16:54:33,867 - src.data_sources.akshare - INFO - 股票 003021 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '兆威机电', 'exists': True}
2025-04-16 16:54:33,867 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 003031 -> 输出 003031
2025-04-16 16:54:33,868 - src.data_sources.akshare - INFO - 股票 003031 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中瓷电子', 'exists': True}
2025-04-16 16:54:33,868 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 003041 -> 输出 003041
2025-04-16 16:54:33,869 - src.data_sources.akshare - INFO - 股票 003041 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '真爱美家', 'exists': True}
2025-04-16 16:54:33,869 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 003816 -> 输出 003816
2025-04-16 16:54:33,870 - src.data_sources.akshare - INFO - 股票 003816 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '中国广核', 'exists': True}
2025-04-16 16:54:33,870 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300001 -> 输出 300001
2025-04-16 16:54:33,871 - src.data_sources.akshare - INFO - 股票 300001 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '特锐德', 'exists': True}
2025-04-16 16:54:33,871 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300010 -> 输出 300010
2025-04-16 16:54:33,872 - src.data_sources.akshare - INFO - 股票 300010 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '豆神教育', 'exists': True}
2025-04-16 16:54:33,872 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300011 -> 输出 300011
2025-04-16 16:54:33,873 - src.data_sources.akshare - INFO - 股票 300011 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '鼎汉技术', 'exists': True}
2025-04-16 16:54:33,873 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300012 -> 输出 300012
2025-04-16 16:54:33,874 - src.data_sources.akshare - INFO - 股票 300012 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '华测检测', 'exists': True}
2025-04-16 16:54:33,875 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300013 -> 输出 300013
2025-04-16 16:54:33,875 - src.data_sources.akshare - INFO - 股票 300013 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '*ST新宁', 'exists': True}
2025-04-16 16:54:33,876 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300014 -> 输出 300014
2025-04-16 16:54:33,876 - src.data_sources.akshare - INFO - 股票 300014 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '亿纬锂能', 'exists': True}
2025-04-16 16:54:33,877 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300015 -> 输出 300015
2025-04-16 16:54:33,877 - src.data_sources.akshare - INFO - 股票 300015 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '爱尔眼科', 'exists': True}
2025-04-16 16:54:33,877 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300016 -> 输出 300016
2025-04-16 16:54:33,878 - src.data_sources.akshare - INFO - 股票 300016 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '北陆药业', 'exists': True}
2025-04-16 16:54:33,878 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300017 -> 输出 300017
2025-04-16 16:54:33,879 - src.data_sources.akshare - INFO - 股票 300017 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '网宿科技', 'exists': True}
2025-04-16 16:54:33,880 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300018 -> 输出 300018
2025-04-16 16:54:33,881 - src.data_sources.akshare - INFO - 股票 300018 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '中元股份', 'exists': True}
2025-04-16 16:54:33,881 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300019 -> 输出 300019
2025-04-16 16:54:33,882 - src.data_sources.akshare - INFO - 股票 300019 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '硅宝科技', 'exists': True}
2025-04-16 16:54:33,882 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300021 -> 输出 300021
2025-04-16 16:54:33,883 - src.data_sources.akshare - INFO - 股票 300021 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '大禹节水', 'exists': True}
2025-04-16 16:54:33,883 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300031 -> 输出 300031
2025-04-16 16:54:33,884 - src.data_sources.akshare - INFO - 股票 300031 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '宝通科技', 'exists': True}
2025-04-16 16:54:33,884 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300041 -> 输出 300041
2025-04-16 16:54:33,885 - src.data_sources.akshare - INFO - 股票 300041 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '回天新材', 'exists': True}
2025-04-16 16:54:33,885 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300051 -> 输出 300051
2025-04-16 16:54:33,885 - src.data_sources.akshare - INFO - 股票 300051 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '琏升科技', 'exists': True}
2025-04-16 16:54:33,886 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300061 -> 输出 300061
2025-04-16 16:54:33,886 - src.data_sources.akshare - INFO - 股票 300061 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '旗天科技', 'exists': True}
2025-04-16 16:54:33,887 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300071 -> 输出 300071
2025-04-16 16:54:33,887 - src.data_sources.akshare - INFO - 股票 300071 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '福石控股', 'exists': True}
2025-04-16 16:54:33,888 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300081 -> 输出 300081
2025-04-16 16:54:33,888 - src.data_sources.akshare - INFO - 股票 300081 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '恒信东方', 'exists': True}
2025-04-16 16:54:33,889 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300091 -> 输出 300091
2025-04-16 16:54:33,889 - src.data_sources.akshare - INFO - 股票 300091 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '金通灵', 'exists': True}
2025-04-16 16:54:33,890 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300100 -> 输出 300100
2025-04-16 16:54:33,890 - src.data_sources.akshare - INFO - 股票 300100 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '双林股份', 'exists': True}
2025-04-16 16:54:33,890 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300101 -> 输出 300101
2025-04-16 16:54:33,891 - src.data_sources.akshare - INFO - 股票 300101 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '振芯科技', 'exists': True}
2025-04-16 16:54:33,891 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300102 -> 输出 300102
2025-04-16 16:54:33,892 - src.data_sources.akshare - INFO - 股票 300102 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '乾照光电', 'exists': True}
2025-04-16 16:54:33,892 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300103 -> 输出 300103
2025-04-16 16:54:33,893 - src.data_sources.akshare - INFO - 股票 300103 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '达刚控股', 'exists': True}
2025-04-16 16:54:33,893 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300105 -> 输出 300105
2025-04-16 16:54:33,894 - src.data_sources.akshare - INFO - 股票 300105 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '龙源技术', 'exists': True}
2025-04-16 16:54:33,894 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300106 -> 输出 300106
2025-04-16 16:54:33,895 - src.data_sources.akshare - INFO - 股票 300106 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '西部牧业', 'exists': True}
2025-04-16 16:54:33,895 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300107 -> 输出 300107
2025-04-16 16:54:33,896 - src.data_sources.akshare - INFO - 股票 300107 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '建新股份', 'exists': True}
2025-04-16 16:54:33,896 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300108 -> 输出 300108
2025-04-16 16:54:33,897 - src.data_sources.akshare - INFO - 股票 300108 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '*ST吉药', 'exists': True}
2025-04-16 16:54:33,897 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300109 -> 输出 300109
2025-04-16 16:54:33,898 - src.data_sources.akshare - INFO - 股票 300109 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '新开源', 'exists': True}
2025-04-16 16:54:33,898 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300110 -> 输出 300110
2025-04-16 16:54:33,899 - src.data_sources.akshare - INFO - 股票 300110 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '华仁药业', 'exists': True}
2025-04-16 16:54:33,899 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300111 -> 输出 300111
2025-04-16 16:54:33,900 - src.data_sources.akshare - INFO - 股票 300111 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '向日葵', 'exists': True}
2025-04-16 16:54:33,900 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300112 -> 输出 300112
2025-04-16 16:54:33,901 - src.data_sources.akshare - INFO - 股票 300112 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '万讯自控', 'exists': True}
2025-04-16 16:54:33,901 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300113 -> 输出 300113
2025-04-16 16:54:33,901 - src.data_sources.akshare - INFO - 股票 300113 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '顺网科技', 'exists': True}
2025-04-16 16:54:33,902 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300115 -> 输出 300115
2025-04-16 16:54:33,902 - src.data_sources.akshare - INFO - 股票 300115 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '长盈精密', 'exists': True}
2025-04-16 16:54:33,903 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300117 -> 输出 300117
2025-04-16 16:54:33,903 - src.data_sources.akshare - INFO - 股票 300117 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '*ST嘉寓', 'exists': True}
2025-04-16 16:54:33,904 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300118 -> 输出 300118
2025-04-16 16:54:33,904 - src.data_sources.akshare - INFO - 股票 300118 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东方日升', 'exists': True}
2025-04-16 16:54:33,905 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300119 -> 输出 300119
2025-04-16 16:54:33,905 - src.data_sources.akshare - INFO - 股票 300119 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '瑞普生物', 'exists': True}
2025-04-16 16:54:33,906 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300120 -> 输出 300120
2025-04-16 16:54:33,907 - src.data_sources.akshare - INFO - 股票 300120 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '经纬辉开', 'exists': True}
2025-04-16 16:54:33,907 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300121 -> 输出 300121
2025-04-16 16:54:33,908 - src.data_sources.akshare - INFO - 股票 300121 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '阳谷华泰', 'exists': True}
2025-04-16 16:54:33,908 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300122 -> 输出 300122
2025-04-16 16:54:33,909 - src.data_sources.akshare - INFO - 股票 300122 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '智飞生物', 'exists': True}
2025-04-16 16:54:33,909 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300123 -> 输出 300123
2025-04-16 16:54:33,909 - src.data_sources.akshare - INFO - 股票 300123 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '亚光科技', 'exists': True}
2025-04-16 16:54:33,910 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300124 -> 输出 300124
2025-04-16 16:54:33,910 - src.data_sources.akshare - INFO - 股票 300124 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '汇川技术', 'exists': True}
2025-04-16 16:54:33,911 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300125 -> 输出 300125
2025-04-16 16:54:33,911 - src.data_sources.akshare - INFO - 股票 300125 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': 'ST聆达', 'exists': True}
2025-04-16 16:54:33,912 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300126 -> 输出 300126
2025-04-16 16:54:33,912 - src.data_sources.akshare - INFO - 股票 300126 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '锐奇股份', 'exists': True}
2025-04-16 16:54:33,913 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300127 -> 输出 300127
2025-04-16 16:54:33,913 - src.data_sources.akshare - INFO - 股票 300127 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '银河磁体', 'exists': True}
2025-04-16 16:54:33,914 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300128 -> 输出 300128
2025-04-16 16:54:33,915 - src.data_sources.akshare - INFO - 股票 300128 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '锦富技术', 'exists': True}
2025-04-16 16:54:33,915 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300129 -> 输出 300129
2025-04-16 16:54:33,916 - src.data_sources.akshare - INFO - 股票 300129 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '泰胜风能', 'exists': True}
2025-04-16 16:54:33,916 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300130 -> 输出 300130
2025-04-16 16:54:33,916 - src.data_sources.akshare - INFO - 股票 300130 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '新国都', 'exists': True}
2025-04-16 16:54:33,917 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300131 -> 输出 300131
2025-04-16 16:54:33,917 - src.data_sources.akshare - INFO - 股票 300131 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '英唐智控', 'exists': True}
2025-04-16 16:54:33,918 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300132 -> 输出 300132
2025-04-16 16:54:33,918 - src.data_sources.akshare - INFO - 股票 300132 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '青松股份', 'exists': True}
2025-04-16 16:54:33,918 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300133 -> 输出 300133
2025-04-16 16:54:33,919 - src.data_sources.akshare - INFO - 股票 300133 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '华策影视', 'exists': True}
2025-04-16 16:54:33,919 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300134 -> 输出 300134
2025-04-16 16:54:33,920 - src.data_sources.akshare - INFO - 股票 300134 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '大富科技', 'exists': True}
2025-04-16 16:54:33,920 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300135 -> 输出 300135
2025-04-16 16:54:33,921 - src.data_sources.akshare - INFO - 股票 300135 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '宝利国际', 'exists': True}
2025-04-16 16:54:33,921 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300136 -> 输出 300136
2025-04-16 16:54:33,922 - src.data_sources.akshare - INFO - 股票 300136 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '信维通信', 'exists': True}
2025-04-16 16:54:33,922 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300137 -> 输出 300137
2025-04-16 16:54:33,923 - src.data_sources.akshare - INFO - 股票 300137 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': 'ST先河', 'exists': True}
2025-04-16 16:54:33,923 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300138 -> 输出 300138
2025-04-16 16:54:33,924 - src.data_sources.akshare - INFO - 股票 300138 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '晨光生物', 'exists': True}
2025-04-16 16:54:33,924 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300139 -> 输出 300139
2025-04-16 16:54:33,925 - src.data_sources.akshare - INFO - 股票 300139 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '晓程科技', 'exists': True}
2025-04-16 16:54:33,925 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300140 -> 输出 300140
2025-04-16 16:54:33,926 - src.data_sources.akshare - INFO - 股票 300140 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '节能环境', 'exists': True}
2025-04-16 16:54:33,926 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300141 -> 输出 300141
2025-04-16 16:54:33,926 - src.data_sources.akshare - INFO - 股票 300141 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '和顺电气', 'exists': True}
2025-04-16 16:54:33,927 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300142 -> 输出 300142
2025-04-16 16:54:33,927 - src.data_sources.akshare - INFO - 股票 300142 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '沃森生物', 'exists': True}
2025-04-16 16:54:33,928 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300143 -> 输出 300143
2025-04-16 16:54:33,928 - src.data_sources.akshare - INFO - 股票 300143 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '盈康生命', 'exists': True}
2025-04-16 16:54:33,928 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300144 -> 输出 300144
2025-04-16 16:54:33,929 - src.data_sources.akshare - INFO - 股票 300144 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '宋城演艺', 'exists': True}
2025-04-16 16:54:33,929 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300145 -> 输出 300145
2025-04-16 16:54:33,930 - src.data_sources.akshare - INFO - 股票 300145 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '中金环境', 'exists': True}
2025-04-16 16:54:33,931 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300146 -> 输出 300146
2025-04-16 16:54:33,931 - src.data_sources.akshare - INFO - 股票 300146 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '汤臣倍健', 'exists': True}
2025-04-16 16:54:33,932 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300147 -> 输出 300147
2025-04-16 16:54:33,932 - src.data_sources.akshare - INFO - 股票 300147 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': 'ST香雪', 'exists': True}
2025-04-16 16:54:33,933 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300148 -> 输出 300148
2025-04-16 16:54:33,933 - src.data_sources.akshare - INFO - 股票 300148 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '天舟文化', 'exists': True}
2025-04-16 16:54:33,933 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300149 -> 输出 300149
2025-04-16 16:54:33,934 - src.data_sources.akshare - INFO - 股票 300149 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '睿智医药', 'exists': True}
2025-04-16 16:54:33,934 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300150 -> 输出 300150
2025-04-16 16:54:33,935 - src.data_sources.akshare - INFO - 股票 300150 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '世纪瑞尔', 'exists': True}
2025-04-16 16:54:33,935 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300151 -> 输出 300151
2025-04-16 16:54:33,936 - src.data_sources.akshare - INFO - 股票 300151 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '昌红科技', 'exists': True}
2025-04-16 16:54:33,936 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300152 -> 输出 300152
2025-04-16 16:54:33,937 - src.data_sources.akshare - INFO - 股票 300152 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '新动力', 'exists': True}
2025-04-16 16:54:33,937 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300153 -> 输出 300153
2025-04-16 16:54:33,938 - src.data_sources.akshare - INFO - 股票 300153 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '科泰电源', 'exists': True}
2025-04-16 16:54:33,938 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300154 -> 输出 300154
2025-04-16 16:54:33,939 - src.data_sources.akshare - INFO - 股票 300154 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '瑞凌股份', 'exists': True}
2025-04-16 16:54:33,939 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300155 -> 输出 300155
2025-04-16 16:54:33,940 - src.data_sources.akshare - INFO - 股票 300155 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '安居宝', 'exists': True}
2025-04-16 16:54:33,940 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300157 -> 输出 300157
2025-04-16 16:54:33,941 - src.data_sources.akshare - INFO - 股票 300157 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '新锦动力', 'exists': True}
2025-04-16 16:54:33,941 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300158 -> 输出 300158
2025-04-16 16:54:33,942 - src.data_sources.akshare - INFO - 股票 300158 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '振东制药', 'exists': True}
2025-04-16 16:54:33,942 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300159 -> 输出 300159
2025-04-16 16:54:33,942 - src.data_sources.akshare - INFO - 股票 300159 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '*ST新研', 'exists': True}
2025-04-16 16:54:33,943 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300160 -> 输出 300160
2025-04-16 16:54:33,943 - src.data_sources.akshare - INFO - 股票 300160 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '秀强股份', 'exists': True}
2025-04-16 16:54:33,944 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300161 -> 输出 300161
2025-04-16 16:54:33,944 - src.data_sources.akshare - INFO - 股票 300161 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '华中数控', 'exists': True}
2025-04-16 16:54:33,944 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300162 -> 输出 300162
2025-04-16 16:54:33,945 - src.data_sources.akshare - INFO - 股票 300162 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '雷曼光电', 'exists': True}
2025-04-16 16:54:33,945 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300163 -> 输出 300163
2025-04-16 16:54:33,946 - src.data_sources.akshare - INFO - 股票 300163 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': 'ST先锋', 'exists': True}
2025-04-16 16:54:33,946 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300164 -> 输出 300164
2025-04-16 16:54:33,947 - src.data_sources.akshare - INFO - 股票 300164 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '通源石油', 'exists': True}
2025-04-16 16:54:33,947 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300165 -> 输出 300165
2025-04-16 16:54:33,948 - src.data_sources.akshare - INFO - 股票 300165 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': 'ST天瑞', 'exists': True}
2025-04-16 16:54:33,948 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300166 -> 输出 300166
2025-04-16 16:54:33,949 - src.data_sources.akshare - INFO - 股票 300166 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东方国信', 'exists': True}
2025-04-16 16:54:33,949 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300167 -> 输出 300167
2025-04-16 16:54:33,950 - src.data_sources.akshare - INFO - 股票 300167 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '*ST迪威', 'exists': True}
2025-04-16 16:54:33,950 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300168 -> 输出 300168
2025-04-16 16:54:33,951 - src.data_sources.akshare - INFO - 股票 300168 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '万达信息', 'exists': True}
2025-04-16 16:54:33,951 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300169 -> 输出 300169
2025-04-16 16:54:33,952 - src.data_sources.akshare - INFO - 股票 300169 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '天晟新材', 'exists': True}
2025-04-16 16:54:33,952 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300170 -> 输出 300170
2025-04-16 16:54:33,953 - src.data_sources.akshare - INFO - 股票 300170 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '汉得信息', 'exists': True}
2025-04-16 16:54:33,953 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300171 -> 输出 300171
2025-04-16 16:54:33,953 - src.data_sources.akshare - INFO - 股票 300171 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东富龙', 'exists': True}
2025-04-16 16:54:33,954 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300172 -> 输出 300172
2025-04-16 16:54:33,954 - src.data_sources.akshare - INFO - 股票 300172 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '中电环保', 'exists': True}
2025-04-16 16:54:33,955 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300173 -> 输出 300173
2025-04-16 16:54:33,956 - src.data_sources.akshare - INFO - 股票 300173 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '福能东方', 'exists': True}
2025-04-16 16:54:33,956 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300174 -> 输出 300174
2025-04-16 16:54:33,957 - src.data_sources.akshare - INFO - 股票 300174 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '元力股份', 'exists': True}
2025-04-16 16:54:33,957 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300175 -> 输出 300175
2025-04-16 16:54:33,958 - src.data_sources.akshare - INFO - 股票 300175 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': 'ST朗源', 'exists': True}
2025-04-16 16:54:33,958 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300176 -> 输出 300176
2025-04-16 16:54:33,959 - src.data_sources.akshare - INFO - 股票 300176 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '鸿特科技', 'exists': True}
2025-04-16 16:54:33,959 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300177 -> 输出 300177
2025-04-16 16:54:33,960 - src.data_sources.akshare - INFO - 股票 300177 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '中海达', 'exists': True}
2025-04-16 16:54:33,960 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300179 -> 输出 300179
2025-04-16 16:54:33,960 - src.data_sources.akshare - INFO - 股票 300179 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '四方达', 'exists': True}
2025-04-16 16:54:33,961 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300180 -> 输出 300180
2025-04-16 16:54:33,961 - src.data_sources.akshare - INFO - 股票 300180 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '华峰超纤', 'exists': True}
2025-04-16 16:54:33,961 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300181 -> 输出 300181
2025-04-16 16:54:33,962 - src.data_sources.akshare - INFO - 股票 300181 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '佐力药业', 'exists': True}
2025-04-16 16:54:33,962 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300182 -> 输出 300182
2025-04-16 16:54:33,963 - src.data_sources.akshare - INFO - 股票 300182 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '捷成股份', 'exists': True}
2025-04-16 16:54:33,964 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300183 -> 输出 300183
2025-04-16 16:54:33,964 - src.data_sources.akshare - INFO - 股票 300183 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东软载波', 'exists': True}
2025-04-16 16:54:33,965 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300184 -> 输出 300184
2025-04-16 16:54:33,965 - src.data_sources.akshare - INFO - 股票 300184 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '力源信息', 'exists': True}
2025-04-16 16:54:33,965 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300185 -> 输出 300185
2025-04-16 16:54:33,966 - src.data_sources.akshare - INFO - 股票 300185 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '通裕重工', 'exists': True}
2025-04-16 16:54:33,966 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300187 -> 输出 300187
2025-04-16 16:54:33,967 - src.data_sources.akshare - INFO - 股票 300187 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '永清环保', 'exists': True}
2025-04-16 16:54:33,967 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300188 -> 输出 300188
2025-04-16 16:54:33,968 - src.data_sources.akshare - INFO - 股票 300188 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '国投智能', 'exists': True}
2025-04-16 16:54:33,968 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300189 -> 输出 300189
2025-04-16 16:54:33,969 - src.data_sources.akshare - INFO - 股票 300189 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '神农种业', 'exists': True}
2025-04-16 16:54:33,969 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300190 -> 输出 300190
2025-04-16 16:54:33,970 - src.data_sources.akshare - INFO - 股票 300190 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '维尔利', 'exists': True}
2025-04-16 16:54:33,970 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300191 -> 输出 300191
2025-04-16 16:54:33,970 - src.data_sources.akshare - INFO - 股票 300191 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '潜能恒信', 'exists': True}
2025-04-16 16:54:33,971 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300192 -> 输出 300192
2025-04-16 16:54:33,971 - src.data_sources.akshare - INFO - 股票 300192 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '科德教育', 'exists': True}
2025-04-16 16:54:33,972 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300193 -> 输出 300193
2025-04-16 16:54:33,973 - src.data_sources.akshare - INFO - 股票 300193 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '佳士科技', 'exists': True}
2025-04-16 16:54:33,973 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300194 -> 输出 300194
2025-04-16 16:54:33,973 - src.data_sources.akshare - INFO - 股票 300194 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '福安药业', 'exists': True}
2025-04-16 16:54:33,974 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300195 -> 输出 300195
2025-04-16 16:54:33,974 - src.data_sources.akshare - INFO - 股票 300195 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '长荣股份', 'exists': True}
2025-04-16 16:54:33,975 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300196 -> 输出 300196
2025-04-16 16:54:33,975 - src.data_sources.akshare - INFO - 股票 300196 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '长海股份', 'exists': True}
2025-04-16 16:54:33,975 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300197 -> 输出 300197
2025-04-16 16:54:33,976 - src.data_sources.akshare - INFO - 股票 300197 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '节能铁汉', 'exists': True}
2025-04-16 16:54:33,976 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300198 -> 输出 300198
2025-04-16 16:54:33,977 - src.data_sources.akshare - INFO - 股票 300198 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '纳川股份', 'exists': True}
2025-04-16 16:54:33,977 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300199 -> 输出 300199
2025-04-16 16:54:33,978 - src.data_sources.akshare - INFO - 股票 300199 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '翰宇药业', 'exists': True}
2025-04-16 16:54:33,978 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300201 -> 输出 300201
2025-04-16 16:54:33,979 - src.data_sources.akshare - INFO - 股票 300201 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '海伦哲', 'exists': True}
2025-04-16 16:54:33,979 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300210 -> 输出 300210
2025-04-16 16:54:33,980 - src.data_sources.akshare - INFO - 股票 300210 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '森远股份', 'exists': True}
2025-04-16 16:54:33,981 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300211 -> 输出 300211
2025-04-16 16:54:33,981 - src.data_sources.akshare - INFO - 股票 300211 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '亿通科技', 'exists': True}
2025-04-16 16:54:33,982 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300212 -> 输出 300212
2025-04-16 16:54:33,982 - src.data_sources.akshare - INFO - 股票 300212 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '易华录', 'exists': True}
2025-04-16 16:54:33,983 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300213 -> 输出 300213
2025-04-16 16:54:33,983 - src.data_sources.akshare - INFO - 股票 300213 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '佳讯飞鸿', 'exists': True}
2025-04-16 16:54:33,984 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300214 -> 输出 300214
2025-04-16 16:54:33,984 - src.data_sources.akshare - INFO - 股票 300214 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '日科化学', 'exists': True}
2025-04-16 16:54:33,984 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300215 -> 输出 300215
2025-04-16 16:54:33,985 - src.data_sources.akshare - INFO - 股票 300215 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '电科院', 'exists': True}
2025-04-16 16:54:33,985 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300217 -> 输出 300217
2025-04-16 16:54:33,986 - src.data_sources.akshare - INFO - 股票 300217 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东方电热', 'exists': True}
2025-04-16 16:54:33,986 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300218 -> 输出 300218
2025-04-16 16:54:33,987 - src.data_sources.akshare - INFO - 股票 300218 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '安利股份', 'exists': True}
2025-04-16 16:54:33,987 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300219 -> 输出 300219
2025-04-16 16:54:33,988 - src.data_sources.akshare - INFO - 股票 300219 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '鸿利智汇', 'exists': True}
2025-04-16 16:54:33,988 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300221 -> 输出 300221
2025-04-16 16:54:33,989 - src.data_sources.akshare - INFO - 股票 300221 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '银禧科技', 'exists': True}
2025-04-16 16:54:33,989 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300231 -> 输出 300231
2025-04-16 16:54:33,990 - src.data_sources.akshare - INFO - 股票 300231 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '银信科技', 'exists': True}
2025-04-16 16:54:33,990 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300241 -> 输出 300241
2025-04-16 16:54:33,991 - src.data_sources.akshare - INFO - 股票 300241 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '瑞丰光电', 'exists': True}
2025-04-16 16:54:33,991 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300251 -> 输出 300251
2025-04-16 16:54:33,992 - src.data_sources.akshare - INFO - 股票 300251 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '光线传媒', 'exists': True}
2025-04-16 16:54:33,992 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300261 -> 输出 300261
2025-04-16 16:54:33,993 - src.data_sources.akshare - INFO - 股票 300261 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '雅本化学', 'exists': True}
2025-04-16 16:54:33,993 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300271 -> 输出 300271
2025-04-16 16:54:33,993 - src.data_sources.akshare - INFO - 股票 300271 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '华宇软件', 'exists': True}
2025-04-16 16:54:33,994 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300281 -> 输出 300281
2025-04-16 16:54:33,994 - src.data_sources.akshare - INFO - 股票 300281 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '金明精机', 'exists': True}
2025-04-16 16:54:33,995 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300291 -> 输出 300291
2025-04-16 16:54:33,995 - src.data_sources.akshare - INFO - 股票 300291 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '百纳千成', 'exists': True}
2025-04-16 16:54:33,996 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300301 -> 输出 300301
2025-04-16 16:54:33,997 - src.data_sources.akshare - INFO - 股票 300301 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '*ST长方', 'exists': True}
2025-04-16 16:54:33,997 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300310 -> 输出 300310
2025-04-16 16:54:33,998 - src.data_sources.akshare - INFO - 股票 300310 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '宜通世纪', 'exists': True}
2025-04-16 16:54:33,998 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300311 -> 输出 300311
2025-04-16 16:54:33,999 - src.data_sources.akshare - INFO - 股票 300311 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '任子行', 'exists': True}
2025-04-16 16:54:33,999 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300313 -> 输出 300313
2025-04-16 16:54:34,000 - src.data_sources.akshare - INFO - 股票 300313 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': 'ST天山', 'exists': True}
2025-04-16 16:54:34,000 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300314 -> 输出 300314
2025-04-16 16:54:34,001 - src.data_sources.akshare - INFO - 股票 300314 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '戴维医疗', 'exists': True}
2025-04-16 16:54:34,001 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300315 -> 输出 300315
2025-04-16 16:54:34,002 - src.data_sources.akshare - INFO - 股票 300315 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '掌趣科技', 'exists': True}
2025-04-16 16:54:34,002 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300316 -> 输出 300316
2025-04-16 16:54:34,002 - src.data_sources.akshare - INFO - 股票 300316 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '晶盛机电', 'exists': True}
2025-04-16 16:54:34,003 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300317 -> 输出 300317
2025-04-16 16:54:34,003 - src.data_sources.akshare - INFO - 股票 300317 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '珈伟新能', 'exists': True}
2025-04-16 16:54:34,004 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300318 -> 输出 300318
2025-04-16 16:54:34,004 - src.data_sources.akshare - INFO - 股票 300318 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '博晖创新', 'exists': True}
2025-04-16 16:54:34,005 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300319 -> 输出 300319
2025-04-16 16:54:34,006 - src.data_sources.akshare - INFO - 股票 300319 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '麦捷科技', 'exists': True}
2025-04-16 16:54:34,006 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300321 -> 输出 300321
2025-04-16 16:54:34,007 - src.data_sources.akshare - INFO - 股票 300321 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '同大股份', 'exists': True}
2025-04-16 16:54:34,007 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300331 -> 输出 300331
2025-04-16 16:54:34,008 - src.data_sources.akshare - INFO - 股票 300331 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '苏大维格', 'exists': True}
2025-04-16 16:54:34,008 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300341 -> 输出 300341
2025-04-16 16:54:34,008 - src.data_sources.akshare - INFO - 股票 300341 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '麦克奥迪', 'exists': True}
2025-04-16 16:54:34,009 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300351 -> 输出 300351
2025-04-16 16:54:34,009 - src.data_sources.akshare - INFO - 股票 300351 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '永贵电器', 'exists': True}
2025-04-16 16:54:34,010 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300371 -> 输出 300371
2025-04-16 16:54:34,010 - src.data_sources.akshare - INFO - 股票 300371 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '汇中股份', 'exists': True}
2025-04-16 16:54:34,011 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300381 -> 输出 300381
2025-04-16 16:54:34,011 - src.data_sources.akshare - INFO - 股票 300381 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '溢多利', 'exists': True}
2025-04-16 16:54:34,012 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300391 -> 输出 300391
2025-04-16 16:54:34,013 - src.data_sources.akshare - INFO - 股票 300391 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '长药控股', 'exists': True}
2025-04-16 16:54:34,013 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300401 -> 输出 300401
2025-04-16 16:54:34,014 - src.data_sources.akshare - INFO - 股票 300401 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '花园生物', 'exists': True}
2025-04-16 16:54:34,014 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300410 -> 输出 300410
2025-04-16 16:54:34,015 - src.data_sources.akshare - INFO - 股票 300410 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '正业科技', 'exists': True}
2025-04-16 16:54:34,015 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300411 -> 输出 300411
2025-04-16 16:54:34,016 - src.data_sources.akshare - INFO - 股票 300411 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '金盾股份', 'exists': True}
2025-04-16 16:54:34,017 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300412 -> 输出 300412
2025-04-16 16:54:34,017 - src.data_sources.akshare - INFO - 股票 300412 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '迦南科技', 'exists': True}
2025-04-16 16:54:34,018 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300413 -> 输出 300413
2025-04-16 16:54:34,018 - src.data_sources.akshare - INFO - 股票 300413 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '芒果超媒', 'exists': True}
2025-04-16 16:54:34,019 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300414 -> 输出 300414
2025-04-16 16:54:34,020 - src.data_sources.akshare - INFO - 股票 300414 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '中光防雷', 'exists': True}
2025-04-16 16:54:34,020 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300415 -> 输出 300415
2025-04-16 16:54:34,021 - src.data_sources.akshare - INFO - 股票 300415 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '伊之密', 'exists': True}
2025-04-16 16:54:34,021 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300416 -> 输出 300416
2025-04-16 16:54:34,022 - src.data_sources.akshare - INFO - 股票 300416 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '苏试试验', 'exists': True}
2025-04-16 16:54:34,023 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300417 -> 输出 300417
2025-04-16 16:54:34,023 - src.data_sources.akshare - INFO - 股票 300417 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '南华仪器', 'exists': True}
2025-04-16 16:54:34,024 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300418 -> 输出 300418
2025-04-16 16:54:34,024 - src.data_sources.akshare - INFO - 股票 300418 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '昆仑万维', 'exists': True}
2025-04-16 16:54:34,024 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300419 -> 输出 300419
2025-04-16 16:54:34,025 - src.data_sources.akshare - INFO - 股票 300419 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': 'ST浩丰', 'exists': True}
2025-04-16 16:54:34,025 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300421 -> 输出 300421
2025-04-16 16:54:34,026 - src.data_sources.akshare - INFO - 股票 300421 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '力星股份', 'exists': True}
2025-04-16 16:54:34,026 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300441 -> 输出 300441
2025-04-16 16:54:34,027 - src.data_sources.akshare - INFO - 股票 300441 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '鲍斯股份', 'exists': True}
2025-04-16 16:54:34,027 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300451 -> 输出 300451
2025-04-16 16:54:34,028 - src.data_sources.akshare - INFO - 股票 300451 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '创业慧康', 'exists': True}
2025-04-16 16:54:34,028 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300461 -> 输出 300461
2025-04-16 16:54:34,029 - src.data_sources.akshare - INFO - 股票 300461 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '田中精机', 'exists': True}
2025-04-16 16:54:34,029 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300471 -> 输出 300471
2025-04-16 16:54:34,030 - src.data_sources.akshare - INFO - 股票 300471 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '厚普股份', 'exists': True}
2025-04-16 16:54:34,030 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300481 -> 输出 300481
2025-04-16 16:54:34,031 - src.data_sources.akshare - INFO - 股票 300481 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '濮阳惠成', 'exists': True}
2025-04-16 16:54:34,032 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300491 -> 输出 300491
2025-04-16 16:54:34,032 - src.data_sources.akshare - INFO - 股票 300491 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '通合科技', 'exists': True}
2025-04-16 16:54:34,033 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300501 -> 输出 300501
2025-04-16 16:54:34,033 - src.data_sources.akshare - INFO - 股票 300501 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '海顺新材', 'exists': True}
2025-04-16 16:54:34,034 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300510 -> 输出 300510
2025-04-16 16:54:34,034 - src.data_sources.akshare - INFO - 股票 300510 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '金冠股份', 'exists': True}
2025-04-16 16:54:34,035 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300511 -> 输出 300511
2025-04-16 16:54:34,035 - src.data_sources.akshare - INFO - 股票 300511 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '雪榕生物', 'exists': True}
2025-04-16 16:54:34,036 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300512 -> 输出 300512
2025-04-16 16:54:34,036 - src.data_sources.akshare - INFO - 股票 300512 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '中亚股份', 'exists': True}
2025-04-16 16:54:34,037 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300513 -> 输出 300513
2025-04-16 16:54:34,038 - src.data_sources.akshare - INFO - 股票 300513 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '恒实科技', 'exists': True}
2025-04-16 16:54:34,038 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300514 -> 输出 300514
2025-04-16 16:54:34,039 - src.data_sources.akshare - INFO - 股票 300514 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '友讯达', 'exists': True}
2025-04-16 16:54:34,040 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300515 -> 输出 300515
2025-04-16 16:54:34,040 - src.data_sources.akshare - INFO - 股票 300515 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '三德科技', 'exists': True}
2025-04-16 16:54:34,040 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300516 -> 输出 300516
2025-04-16 16:54:34,041 - src.data_sources.akshare - INFO - 股票 300516 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '久之洋', 'exists': True}
2025-04-16 16:54:34,041 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300517 -> 输出 300517
2025-04-16 16:54:34,042 - src.data_sources.akshare - INFO - 股票 300517 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '海波重科', 'exists': True}
2025-04-16 16:54:34,042 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300518 -> 输出 300518
2025-04-16 16:54:34,043 - src.data_sources.akshare - INFO - 股票 300518 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '新迅达', 'exists': True}
2025-04-16 16:54:34,043 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300519 -> 输出 300519
2025-04-16 16:54:34,044 - src.data_sources.akshare - INFO - 股票 300519 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '新光药业', 'exists': True}
2025-04-16 16:54:34,044 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300521 -> 输出 300521
2025-04-16 16:54:34,045 - src.data_sources.akshare - INFO - 股票 300521 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '爱司凯', 'exists': True}
2025-04-16 16:54:34,045 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300531 -> 输出 300531
2025-04-16 16:54:34,046 - src.data_sources.akshare - INFO - 股票 300531 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '优博讯', 'exists': True}
2025-04-16 16:54:34,046 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300541 -> 输出 300541
2025-04-16 16:54:34,048 - src.data_sources.akshare - INFO - 股票 300541 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '先进数通', 'exists': True}
2025-04-16 16:54:34,048 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300551 -> 输出 300551
2025-04-16 16:54:34,049 - src.data_sources.akshare - INFO - 股票 300551 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '古鳌科技', 'exists': True}
2025-04-16 16:54:34,049 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300561 -> 输出 300561
2025-04-16 16:54:34,050 - src.data_sources.akshare - INFO - 股票 300561 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '汇金科技', 'exists': True}
2025-04-16 16:54:34,050 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300571 -> 输出 300571
2025-04-16 16:54:34,051 - src.data_sources.akshare - INFO - 股票 300571 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '平治信息', 'exists': True}
2025-04-16 16:54:34,051 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300581 -> 输出 300581
2025-04-16 16:54:34,051 - src.data_sources.akshare - INFO - 股票 300581 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '晨曦航空', 'exists': True}
2025-04-16 16:54:34,052 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300591 -> 输出 300591
2025-04-16 16:54:34,052 - src.data_sources.akshare - INFO - 股票 300591 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '万里马', 'exists': True}
2025-04-16 16:54:34,052 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300601 -> 输出 300601
2025-04-16 16:54:34,053 - src.data_sources.akshare - INFO - 股票 300601 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '康泰生物', 'exists': True}
2025-04-16 16:54:34,053 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300610 -> 输出 300610
2025-04-16 16:54:34,054 - src.data_sources.akshare - INFO - 股票 300610 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '晨化股份', 'exists': True}
2025-04-16 16:54:34,055 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300611 -> 输出 300611
2025-04-16 16:54:34,055 - src.data_sources.akshare - INFO - 股票 300611 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '美力科技', 'exists': True}
2025-04-16 16:54:34,056 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300612 -> 输出 300612
2025-04-16 16:54:34,056 - src.data_sources.akshare - INFO - 股票 300612 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '宣亚国际', 'exists': True}
2025-04-16 16:54:34,057 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300613 -> 输出 300613
2025-04-16 16:54:34,057 - src.data_sources.akshare - INFO - 股票 300613 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '富瀚微', 'exists': True}
2025-04-16 16:54:34,058 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300614 -> 输出 300614
2025-04-16 16:54:34,058 - src.data_sources.akshare - INFO - 股票 300614 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '百川畅银', 'exists': True}
2025-04-16 16:54:34,059 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300615 -> 输出 300615
2025-04-16 16:54:34,059 - src.data_sources.akshare - INFO - 股票 300615 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '欣天科技', 'exists': True}
2025-04-16 16:54:34,060 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300616 -> 输出 300616
2025-04-16 16:54:34,060 - src.data_sources.akshare - INFO - 股票 300616 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '尚品宅配', 'exists': True}
2025-04-16 16:54:34,061 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300617 -> 输出 300617
2025-04-16 16:54:34,061 - src.data_sources.akshare - INFO - 股票 300617 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '安靠智电', 'exists': True}
2025-04-16 16:54:34,062 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300618 -> 输出 300618
2025-04-16 16:54:34,062 - src.data_sources.akshare - INFO - 股票 300618 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '寒锐钴业', 'exists': True}
2025-04-16 16:54:34,063 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300619 -> 输出 300619
2025-04-16 16:54:34,064 - src.data_sources.akshare - INFO - 股票 300619 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '金银河', 'exists': True}
2025-04-16 16:54:34,064 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300621 -> 输出 300621
2025-04-16 16:54:34,065 - src.data_sources.akshare - INFO - 股票 300621 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '维业股份', 'exists': True}
2025-04-16 16:54:34,065 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300631 -> 输出 300631
2025-04-16 16:54:34,066 - src.data_sources.akshare - INFO - 股票 300631 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '久吾高科', 'exists': True}
2025-04-16 16:54:34,066 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300641 -> 输出 300641
2025-04-16 16:54:34,067 - src.data_sources.akshare - INFO - 股票 300641 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '正丹股份', 'exists': True}
2025-04-16 16:54:34,067 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300651 -> 输出 300651
2025-04-16 16:54:34,068 - src.data_sources.akshare - INFO - 股票 300651 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '金陵体育', 'exists': True}
2025-04-16 16:54:34,068 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300661 -> 输出 300661
2025-04-16 16:54:34,068 - src.data_sources.akshare - INFO - 股票 300661 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '圣邦股份', 'exists': True}
2025-04-16 16:54:34,069 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300671 -> 输出 300671
2025-04-16 16:54:34,069 - src.data_sources.akshare - INFO - 股票 300671 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '富满微', 'exists': True}
2025-04-16 16:54:34,070 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300681 -> 输出 300681
2025-04-16 16:54:34,070 - src.data_sources.akshare - INFO - 股票 300681 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '英搏尔', 'exists': True}
2025-04-16 16:54:34,071 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300691 -> 输出 300691
2025-04-16 16:54:34,071 - src.data_sources.akshare - INFO - 股票 300691 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '联合光电', 'exists': True}
2025-04-16 16:54:34,072 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300701 -> 输出 300701
2025-04-16 16:54:34,073 - src.data_sources.akshare - INFO - 股票 300701 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '森霸传感', 'exists': True}
2025-04-16 16:54:34,073 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300710 -> 输出 300710
2025-04-16 16:54:34,074 - src.data_sources.akshare - INFO - 股票 300710 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '万隆光电', 'exists': True}
2025-04-16 16:54:34,074 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300711 -> 输出 300711
2025-04-16 16:54:34,074 - src.data_sources.akshare - INFO - 股票 300711 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '广哈通信', 'exists': True}
2025-04-16 16:54:34,075 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300712 -> 输出 300712
2025-04-16 16:54:34,075 - src.data_sources.akshare - INFO - 股票 300712 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '永福股份', 'exists': True}
2025-04-16 16:54:34,076 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300713 -> 输出 300713
2025-04-16 16:54:34,076 - src.data_sources.akshare - INFO - 股票 300713 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '英可瑞', 'exists': True}
2025-04-16 16:54:34,077 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300715 -> 输出 300715
2025-04-16 16:54:34,077 - src.data_sources.akshare - INFO - 股票 300715 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '凯伦股份', 'exists': True}
2025-04-16 16:54:34,077 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300716 -> 输出 300716
2025-04-16 16:54:34,078 - src.data_sources.akshare - INFO - 股票 300716 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '泉为科技', 'exists': True}
2025-04-16 16:54:34,078 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300717 -> 输出 300717
2025-04-16 16:54:34,079 - src.data_sources.akshare - INFO - 股票 300717 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '华信新材', 'exists': True}
2025-04-16 16:54:34,080 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300718 -> 输出 300718
2025-04-16 16:54:34,081 - src.data_sources.akshare - INFO - 股票 300718 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '长盛轴承', 'exists': True}
2025-04-16 16:54:34,081 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300719 -> 输出 300719
2025-04-16 16:54:34,082 - src.data_sources.akshare - INFO - 股票 300719 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '安达维尔', 'exists': True}
2025-04-16 16:54:34,082 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300721 -> 输出 300721
2025-04-16 16:54:34,083 - src.data_sources.akshare - INFO - 股票 300721 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '怡达股份', 'exists': True}
2025-04-16 16:54:34,083 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300731 -> 输出 300731
2025-04-16 16:54:34,084 - src.data_sources.akshare - INFO - 股票 300731 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '科创新源', 'exists': True}
2025-04-16 16:54:34,084 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300741 -> 输出 300741
2025-04-16 16:54:34,085 - src.data_sources.akshare - INFO - 股票 300741 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '华宝股份', 'exists': True}
2025-04-16 16:54:34,085 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300751 -> 输出 300751
2025-04-16 16:54:34,085 - src.data_sources.akshare - INFO - 股票 300751 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '迈为股份', 'exists': True}
2025-04-16 16:54:34,086 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300761 -> 输出 300761
2025-04-16 16:54:34,086 - src.data_sources.akshare - INFO - 股票 300761 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '立华股份', 'exists': True}
2025-04-16 16:54:34,087 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300771 -> 输出 300771
2025-04-16 16:54:34,087 - src.data_sources.akshare - INFO - 股票 300771 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '智莱科技', 'exists': True}
2025-04-16 16:54:34,088 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300781 -> 输出 300781
2025-04-16 16:54:34,089 - src.data_sources.akshare - INFO - 股票 300781 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '因赛集团', 'exists': True}
2025-04-16 16:54:34,089 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300791 -> 输出 300791
2025-04-16 16:54:34,090 - src.data_sources.akshare - INFO - 股票 300791 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '仙乐健康', 'exists': True}
2025-04-16 16:54:34,090 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300801 -> 输出 300801
2025-04-16 16:54:34,091 - src.data_sources.akshare - INFO - 股票 300801 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '泰和科技', 'exists': True}
2025-04-16 16:54:34,091 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300810 -> 输出 300810
2025-04-16 16:54:34,091 - src.data_sources.akshare - INFO - 股票 300810 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '中科海讯', 'exists': True}
2025-04-16 16:54:34,092 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300811 -> 输出 300811
2025-04-16 16:54:34,092 - src.data_sources.akshare - INFO - 股票 300811 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '铂科新材', 'exists': True}
2025-04-16 16:54:34,093 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300812 -> 输出 300812
2025-04-16 16:54:34,093 - src.data_sources.akshare - INFO - 股票 300812 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '易天股份', 'exists': True}
2025-04-16 16:54:34,094 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300813 -> 输出 300813
2025-04-16 16:54:34,094 - src.data_sources.akshare - INFO - 股票 300813 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '泰林生物', 'exists': True}
2025-04-16 16:54:34,095 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300814 -> 输出 300814
2025-04-16 16:54:34,095 - src.data_sources.akshare - INFO - 股票 300814 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '中富电路', 'exists': True}
2025-04-16 16:54:34,095 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300815 -> 输出 300815
2025-04-16 16:54:34,096 - src.data_sources.akshare - INFO - 股票 300815 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '玉禾田', 'exists': True}
2025-04-16 16:54:34,097 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300816 -> 输出 300816
2025-04-16 16:54:34,098 - src.data_sources.akshare - INFO - 股票 300816 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '艾可蓝', 'exists': True}
2025-04-16 16:54:34,098 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300817 -> 输出 300817
2025-04-16 16:54:34,099 - src.data_sources.akshare - INFO - 股票 300817 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '双飞集团', 'exists': True}
2025-04-16 16:54:34,099 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300818 -> 输出 300818
2025-04-16 16:54:34,100 - src.data_sources.akshare - INFO - 股票 300818 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '耐普矿机', 'exists': True}
2025-04-16 16:54:34,100 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300819 -> 输出 300819
2025-04-16 16:54:34,100 - src.data_sources.akshare - INFO - 股票 300819 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '聚杰微纤', 'exists': True}
2025-04-16 16:54:34,101 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300821 -> 输出 300821
2025-04-16 16:54:34,101 - src.data_sources.akshare - INFO - 股票 300821 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东岳硅材', 'exists': True}
2025-04-16 16:54:34,101 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300831 -> 输出 300831
2025-04-16 16:54:34,102 - src.data_sources.akshare - INFO - 股票 300831 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '派瑞股份', 'exists': True}
2025-04-16 16:54:34,102 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300841 -> 输出 300841
2025-04-16 16:54:34,103 - src.data_sources.akshare - INFO - 股票 300841 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '康华生物', 'exists': True}
2025-04-16 16:54:34,103 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300851 -> 输出 300851
2025-04-16 16:54:34,104 - src.data_sources.akshare - INFO - 股票 300851 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '交大思诺', 'exists': True}
2025-04-16 16:54:34,105 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300861 -> 输出 300861
2025-04-16 16:54:34,105 - src.data_sources.akshare - INFO - 股票 300861 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '美畅股份', 'exists': True}
2025-04-16 16:54:34,106 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300871 -> 输出 300871
2025-04-16 16:54:34,106 - src.data_sources.akshare - INFO - 股票 300871 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '回盛生物', 'exists': True}
2025-04-16 16:54:34,107 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300881 -> 输出 300881
2025-04-16 16:54:34,107 - src.data_sources.akshare - INFO - 股票 300881 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '盛德鑫泰', 'exists': True}
2025-04-16 16:54:34,108 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300891 -> 输出 300891
2025-04-16 16:54:34,108 - src.data_sources.akshare - INFO - 股票 300891 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '惠云钛业', 'exists': True}
2025-04-16 16:54:34,109 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300901 -> 输出 300901
2025-04-16 16:54:34,109 - src.data_sources.akshare - INFO - 股票 300901 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '中胤时尚', 'exists': True}
2025-04-16 16:54:34,109 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300910 -> 输出 300910
2025-04-16 16:54:34,110 - src.data_sources.akshare - INFO - 股票 300910 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '瑞丰新材', 'exists': True}
2025-04-16 16:54:34,110 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300911 -> 输出 300911
2025-04-16 16:54:34,111 - src.data_sources.akshare - INFO - 股票 300911 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '亿田智能', 'exists': True}
2025-04-16 16:54:34,111 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300912 -> 输出 300912
2025-04-16 16:54:34,112 - src.data_sources.akshare - INFO - 股票 300912 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '凯龙高科', 'exists': True}
2025-04-16 16:54:34,112 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300913 -> 输出 300913
2025-04-16 16:54:34,113 - src.data_sources.akshare - INFO - 股票 300913 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '兆龙互连', 'exists': True}
2025-04-16 16:54:34,114 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300915 -> 输出 300915
2025-04-16 16:54:34,114 - src.data_sources.akshare - INFO - 股票 300915 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '海融科技', 'exists': True}
2025-04-16 16:54:34,115 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300916 -> 输出 300916
2025-04-16 16:54:34,115 - src.data_sources.akshare - INFO - 股票 300916 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '朗特智能', 'exists': True}
2025-04-16 16:54:34,116 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300917 -> 输出 300917
2025-04-16 16:54:34,116 - src.data_sources.akshare - INFO - 股票 300917 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '特发服务', 'exists': True}
2025-04-16 16:54:34,117 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300918 -> 输出 300918
2025-04-16 16:54:34,117 - src.data_sources.akshare - INFO - 股票 300918 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '南山智尚', 'exists': True}
2025-04-16 16:54:34,117 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300919 -> 输出 300919
2025-04-16 16:54:34,118 - src.data_sources.akshare - INFO - 股票 300919 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '中伟股份', 'exists': True}
2025-04-16 16:54:34,118 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300921 -> 输出 300921
2025-04-16 16:54:34,119 - src.data_sources.akshare - INFO - 股票 300921 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '南凌科技', 'exists': True}
2025-04-16 16:54:34,119 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300931 -> 输出 300931
2025-04-16 16:54:34,120 - src.data_sources.akshare - INFO - 股票 300931 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '通用电梯', 'exists': True}
2025-04-16 16:54:34,120 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300941 -> 输出 300941
2025-04-16 16:54:34,121 - src.data_sources.akshare - INFO - 股票 300941 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '创识科技', 'exists': True}
2025-04-16 16:54:34,121 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300951 -> 输出 300951
2025-04-16 16:54:34,122 - src.data_sources.akshare - INFO - 股票 300951 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '博硕科技', 'exists': True}
2025-04-16 16:54:34,122 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300961 -> 输出 300961
2025-04-16 16:54:34,123 - src.data_sources.akshare - INFO - 股票 300961 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '深水海纳', 'exists': True}
2025-04-16 16:54:34,123 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300971 -> 输出 300971
2025-04-16 16:54:34,124 - src.data_sources.akshare - INFO - 股票 300971 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '博亚精工', 'exists': True}
2025-04-16 16:54:34,124 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300981 -> 输出 300981
2025-04-16 16:54:34,125 - src.data_sources.akshare - INFO - 股票 300981 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '中红医疗', 'exists': True}
2025-04-16 16:54:34,125 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300991 -> 输出 300991
2025-04-16 16:54:34,126 - src.data_sources.akshare - INFO - 股票 300991 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '创益通', 'exists': True}
2025-04-16 16:54:34,126 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301000 -> 输出 301000
2025-04-16 16:54:34,126 - src.data_sources.akshare - INFO - 股票 301000 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '肇民科技', 'exists': True}
2025-04-16 16:54:34,127 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301001 -> 输出 301001
2025-04-16 16:54:34,127 - src.data_sources.akshare - INFO - 股票 301001 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '凯淳股份', 'exists': True}
2025-04-16 16:54:34,128 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301002 -> 输出 301002
2025-04-16 16:54:34,128 - src.data_sources.akshare - INFO - 股票 301002 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '崧盛股份', 'exists': True}
2025-04-16 16:54:34,129 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301003 -> 输出 301003
2025-04-16 16:54:34,129 - src.data_sources.akshare - INFO - 股票 301003 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '江苏博云', 'exists': True}
2025-04-16 16:54:34,130 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301004 -> 输出 301004
2025-04-16 16:54:34,131 - src.data_sources.akshare - INFO - 股票 301004 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '嘉益股份', 'exists': True}
2025-04-16 16:54:34,131 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301005 -> 输出 301005
2025-04-16 16:54:34,132 - src.data_sources.akshare - INFO - 股票 301005 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '超捷股份', 'exists': True}
2025-04-16 16:54:34,132 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301006 -> 输出 301006
2025-04-16 16:54:34,133 - src.data_sources.akshare - INFO - 股票 301006 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '迈拓股份', 'exists': True}
2025-04-16 16:54:34,133 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301007 -> 输出 301007
2025-04-16 16:54:34,134 - src.data_sources.akshare - INFO - 股票 301007 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '德迈仕', 'exists': True}
2025-04-16 16:54:34,134 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301008 -> 输出 301008
2025-04-16 16:54:34,134 - src.data_sources.akshare - INFO - 股票 301008 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '宏昌科技', 'exists': True}
2025-04-16 16:54:34,135 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301009 -> 输出 301009
2025-04-16 16:54:34,135 - src.data_sources.akshare - INFO - 股票 301009 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '可靠股份', 'exists': True}
2025-04-16 16:54:34,136 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301010 -> 输出 301010
2025-04-16 16:54:34,136 - src.data_sources.akshare - INFO - 股票 301010 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '晶雪节能', 'exists': True}
2025-04-16 16:54:34,136 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301011 -> 输出 301011
2025-04-16 16:54:34,137 - src.data_sources.akshare - INFO - 股票 301011 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华立科技', 'exists': True}
2025-04-16 16:54:34,138 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301012 -> 输出 301012
2025-04-16 16:54:34,138 - src.data_sources.akshare - INFO - 股票 301012 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '扬电科技', 'exists': True}
2025-04-16 16:54:34,139 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301013 -> 输出 301013
2025-04-16 16:54:34,139 - src.data_sources.akshare - INFO - 股票 301013 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '利和兴', 'exists': True}
2025-04-16 16:54:34,140 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301015 -> 输出 301015
2025-04-16 16:54:34,140 - src.data_sources.akshare - INFO - 股票 301015 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '百洋医药', 'exists': True}
2025-04-16 16:54:34,141 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301016 -> 输出 301016
2025-04-16 16:54:34,141 - src.data_sources.akshare - INFO - 股票 301016 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '雷尔伟', 'exists': True}
2025-04-16 16:54:34,142 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301017 -> 输出 301017
2025-04-16 16:54:34,142 - src.data_sources.akshare - INFO - 股票 301017 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '漱玉平民', 'exists': True}
2025-04-16 16:54:34,142 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301018 -> 输出 301018
2025-04-16 16:54:34,143 - src.data_sources.akshare - INFO - 股票 301018 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '申菱环境', 'exists': True}
2025-04-16 16:54:34,143 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301019 -> 输出 301019
2025-04-16 16:54:34,144 - src.data_sources.akshare - INFO - 股票 301019 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '宁波色母', 'exists': True}
2025-04-16 16:54:34,144 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301020 -> 输出 301020
2025-04-16 16:54:34,145 - src.data_sources.akshare - INFO - 股票 301020 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '密封科技', 'exists': True}
2025-04-16 16:54:34,146 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301021 -> 输出 301021
2025-04-16 16:54:34,146 - src.data_sources.akshare - INFO - 股票 301021 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '英诺激光', 'exists': True}
2025-04-16 16:54:34,147 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301022 -> 输出 301022
2025-04-16 16:54:34,147 - src.data_sources.akshare - INFO - 股票 301022 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '海泰科', 'exists': True}
2025-04-16 16:54:34,148 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301023 -> 输出 301023
2025-04-16 16:54:34,149 - src.data_sources.akshare - INFO - 股票 301023 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '江南奕帆', 'exists': True}
2025-04-16 16:54:34,149 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301024 -> 输出 301024
2025-04-16 16:54:34,150 - src.data_sources.akshare - INFO - 股票 301024 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '霍普股份', 'exists': True}
2025-04-16 16:54:34,150 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301025 -> 输出 301025
2025-04-16 16:54:34,151 - src.data_sources.akshare - INFO - 股票 301025 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '读客文化', 'exists': True}
2025-04-16 16:54:34,151 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301026 -> 输出 301026
2025-04-16 16:54:34,151 - src.data_sources.akshare - INFO - 股票 301026 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '浩通科技', 'exists': True}
2025-04-16 16:54:34,152 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301027 -> 输出 301027
2025-04-16 16:54:34,152 - src.data_sources.akshare - INFO - 股票 301027 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华蓝集团', 'exists': True}
2025-04-16 16:54:34,153 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301028 -> 输出 301028
2025-04-16 16:54:34,153 - src.data_sources.akshare - INFO - 股票 301028 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '东亚机械', 'exists': True}
2025-04-16 16:54:34,154 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301029 -> 输出 301029
2025-04-16 16:54:34,154 - src.data_sources.akshare - INFO - 股票 301029 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '怡合达', 'exists': True}
2025-04-16 16:54:34,155 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301030 -> 输出 301030
2025-04-16 16:54:34,156 - src.data_sources.akshare - INFO - 股票 301030 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '仕净科技', 'exists': True}
2025-04-16 16:54:34,156 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301031 -> 输出 301031
2025-04-16 16:54:34,157 - src.data_sources.akshare - INFO - 股票 301031 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中熔电气', 'exists': True}
2025-04-16 16:54:34,157 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301032 -> 输出 301032
2025-04-16 16:54:34,158 - src.data_sources.akshare - INFO - 股票 301032 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '新柴股份', 'exists': True}
2025-04-16 16:54:34,158 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301033 -> 输出 301033
2025-04-16 16:54:34,159 - src.data_sources.akshare - INFO - 股票 301033 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '迈普医学', 'exists': True}
2025-04-16 16:54:34,159 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301035 -> 输出 301035
2025-04-16 16:54:34,160 - src.data_sources.akshare - INFO - 股票 301035 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '润丰股份', 'exists': True}
2025-04-16 16:54:34,160 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301036 -> 输出 301036
2025-04-16 16:54:34,160 - src.data_sources.akshare - INFO - 股票 301036 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '双乐股份', 'exists': True}
2025-04-16 16:54:34,161 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301037 -> 输出 301037
2025-04-16 16:54:34,161 - src.data_sources.akshare - INFO - 股票 301037 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '保立佳', 'exists': True}
2025-04-16 16:54:34,162 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301038 -> 输出 301038
2025-04-16 16:54:34,162 - src.data_sources.akshare - INFO - 股票 301038 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '深水规院', 'exists': True}
2025-04-16 16:54:34,163 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301039 -> 输出 301039
2025-04-16 16:54:34,164 - src.data_sources.akshare - INFO - 股票 301039 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中集车辆', 'exists': True}
2025-04-16 16:54:34,164 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301040 -> 输出 301040
2025-04-16 16:54:34,165 - src.data_sources.akshare - INFO - 股票 301040 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中环海陆', 'exists': True}
2025-04-16 16:54:34,165 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301041 -> 输出 301041
2025-04-16 16:54:34,166 - src.data_sources.akshare - INFO - 股票 301041 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '金百泽', 'exists': True}
2025-04-16 16:54:34,166 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301042 -> 输出 301042
2025-04-16 16:54:34,167 - src.data_sources.akshare - INFO - 股票 301042 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '安联锐视', 'exists': True}
2025-04-16 16:54:34,167 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301043 -> 输出 301043
2025-04-16 16:54:34,168 - src.data_sources.akshare - INFO - 股票 301043 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '绿岛风', 'exists': True}
2025-04-16 16:54:34,168 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301045 -> 输出 301045
2025-04-16 16:54:34,169 - src.data_sources.akshare - INFO - 股票 301045 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '天禄科技', 'exists': True}
2025-04-16 16:54:34,169 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301046 -> 输出 301046
2025-04-16 16:54:34,170 - src.data_sources.akshare - INFO - 股票 301046 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '能辉科技', 'exists': True}
2025-04-16 16:54:34,170 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301047 -> 输出 301047
2025-04-16 16:54:34,171 - src.data_sources.akshare - INFO - 股票 301047 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '义翘神州', 'exists': True}
2025-04-16 16:54:34,171 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301048 -> 输出 301048
2025-04-16 16:54:34,172 - src.data_sources.akshare - INFO - 股票 301048 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '金鹰重工', 'exists': True}
2025-04-16 16:54:34,172 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301049 -> 输出 301049
2025-04-16 16:54:34,183 - src.data_sources.akshare - INFO - 股票 301049 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '超越科技', 'exists': True}
2025-04-16 16:54:34,184 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301050 -> 输出 301050
2025-04-16 16:54:34,186 - src.data_sources.akshare - INFO - 股票 301050 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '雷电微力', 'exists': True}
2025-04-16 16:54:34,187 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301051 -> 输出 301051
2025-04-16 16:54:34,188 - src.data_sources.akshare - INFO - 股票 301051 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '信濠光电', 'exists': True}
2025-04-16 16:54:34,189 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301052 -> 输出 301052
2025-04-16 16:54:34,191 - src.data_sources.akshare - INFO - 股票 301052 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '果麦文化', 'exists': True}
2025-04-16 16:54:34,191 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301053 -> 输出 301053
2025-04-16 16:54:34,192 - src.data_sources.akshare - INFO - 股票 301053 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '远信工业', 'exists': True}
2025-04-16 16:54:34,193 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301055 -> 输出 301055
2025-04-16 16:54:34,194 - src.data_sources.akshare - INFO - 股票 301055 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '张小泉', 'exists': True}
2025-04-16 16:54:34,195 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301056 -> 输出 301056
2025-04-16 16:54:34,196 - src.data_sources.akshare - INFO - 股票 301056 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '森赫股份', 'exists': True}
2025-04-16 16:54:34,196 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301057 -> 输出 301057
2025-04-16 16:54:34,198 - src.data_sources.akshare - INFO - 股票 301057 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '汇隆新材', 'exists': True}
2025-04-16 16:54:34,198 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301058 -> 输出 301058
2025-04-16 16:54:34,199 - src.data_sources.akshare - INFO - 股票 301058 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中粮科工', 'exists': True}
2025-04-16 16:54:34,200 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301059 -> 输出 301059
2025-04-16 16:54:34,201 - src.data_sources.akshare - INFO - 股票 301059 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '金三江', 'exists': True}
2025-04-16 16:54:34,201 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301060 -> 输出 301060
2025-04-16 16:54:34,203 - src.data_sources.akshare - INFO - 股票 301060 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '兰卫医学', 'exists': True}
2025-04-16 16:54:34,205 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301061 -> 输出 301061
2025-04-16 16:54:34,207 - src.data_sources.akshare - INFO - 股票 301061 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '匠心家居', 'exists': True}
2025-04-16 16:54:34,207 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301062 -> 输出 301062
2025-04-16 16:54:34,208 - src.data_sources.akshare - INFO - 股票 301062 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '上海艾录', 'exists': True}
2025-04-16 16:54:34,209 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301063 -> 输出 301063
2025-04-16 16:54:34,210 - src.data_sources.akshare - INFO - 股票 301063 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '海锅股份', 'exists': True}
2025-04-16 16:54:34,210 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301065 -> 输出 301065
2025-04-16 16:54:34,211 - src.data_sources.akshare - INFO - 股票 301065 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '本立科技', 'exists': True}
2025-04-16 16:54:34,212 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301066 -> 输出 301066
2025-04-16 16:54:34,214 - src.data_sources.akshare - INFO - 股票 301066 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '万事利', 'exists': True}
2025-04-16 16:54:34,214 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301067 -> 输出 301067
2025-04-16 16:54:34,215 - src.data_sources.akshare - INFO - 股票 301067 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '显盈科技', 'exists': True}
2025-04-16 16:54:34,216 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301068 -> 输出 301068
2025-04-16 16:54:34,217 - src.data_sources.akshare - INFO - 股票 301068 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '大地海洋', 'exists': True}
2025-04-16 16:54:34,217 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301069 -> 输出 301069
2025-04-16 16:54:34,218 - src.data_sources.akshare - INFO - 股票 301069 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '凯盛新材', 'exists': True}
2025-04-16 16:54:34,220 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301070 -> 输出 301070
2025-04-16 16:54:34,221 - src.data_sources.akshare - INFO - 股票 301070 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '开勒股份', 'exists': True}
2025-04-16 16:54:34,222 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301071 -> 输出 301071
2025-04-16 16:54:34,224 - src.data_sources.akshare - INFO - 股票 301071 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '力量钻石', 'exists': True}
2025-04-16 16:54:34,224 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301072 -> 输出 301072
2025-04-16 16:54:34,226 - src.data_sources.akshare - INFO - 股票 301072 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中捷精工', 'exists': True}
2025-04-16 16:54:34,226 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301073 -> 输出 301073
2025-04-16 16:54:34,227 - src.data_sources.akshare - INFO - 股票 301073 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '君亭酒店', 'exists': True}
2025-04-16 16:54:34,227 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301075 -> 输出 301075
2025-04-16 16:54:34,228 - src.data_sources.akshare - INFO - 股票 301075 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '多瑞医药', 'exists': True}
2025-04-16 16:54:34,229 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301076 -> 输出 301076
2025-04-16 16:54:34,230 - src.data_sources.akshare - INFO - 股票 301076 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '新瀚新材', 'exists': True}
2025-04-16 16:54:34,230 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301077 -> 输出 301077
2025-04-16 16:54:34,231 - src.data_sources.akshare - INFO - 股票 301077 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '星华新材', 'exists': True}
2025-04-16 16:54:34,231 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301078 -> 输出 301078
2025-04-16 16:54:34,232 - src.data_sources.akshare - INFO - 股票 301078 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '孩子王', 'exists': True}
2025-04-16 16:54:34,233 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301079 -> 输出 301079
2025-04-16 16:54:34,233 - src.data_sources.akshare - INFO - 股票 301079 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '邵阳液压', 'exists': True}
2025-04-16 16:54:34,234 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301080 -> 输出 301080
2025-04-16 16:54:34,235 - src.data_sources.akshare - INFO - 股票 301080 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '百普赛斯', 'exists': True}
2025-04-16 16:54:34,235 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301081 -> 输出 301081
2025-04-16 16:54:34,236 - src.data_sources.akshare - INFO - 股票 301081 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '严牌股份', 'exists': True}
2025-04-16 16:54:34,237 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301082 -> 输出 301082
2025-04-16 16:54:34,238 - src.data_sources.akshare - INFO - 股票 301082 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '久盛电气', 'exists': True}
2025-04-16 16:54:34,238 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301083 -> 输出 301083
2025-04-16 16:54:34,239 - src.data_sources.akshare - INFO - 股票 301083 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '百胜智能', 'exists': True}
2025-04-16 16:54:34,240 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301085 -> 输出 301085
2025-04-16 16:54:34,241 - src.data_sources.akshare - INFO - 股票 301085 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '亚康股份', 'exists': True}
2025-04-16 16:54:34,241 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301086 -> 输出 301086
2025-04-16 16:54:34,242 - src.data_sources.akshare - INFO - 股票 301086 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '鸿富瀚', 'exists': True}
2025-04-16 16:54:34,243 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301087 -> 输出 301087
2025-04-16 16:54:34,244 - src.data_sources.akshare - INFO - 股票 301087 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '可孚医疗', 'exists': True}
2025-04-16 16:54:34,244 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301088 -> 输出 301088
2025-04-16 16:54:34,246 - src.data_sources.akshare - INFO - 股票 301088 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '戎美股份', 'exists': True}
2025-04-16 16:54:34,246 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301089 -> 输出 301089
2025-04-16 16:54:34,247 - src.data_sources.akshare - INFO - 股票 301089 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '拓新药业', 'exists': True}
2025-04-16 16:54:34,248 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301090 -> 输出 301090
2025-04-16 16:54:34,248 - src.data_sources.akshare - INFO - 股票 301090 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华润材料', 'exists': True}
2025-04-16 16:54:34,249 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301091 -> 输出 301091
2025-04-16 16:54:34,249 - src.data_sources.akshare - INFO - 股票 301091 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '深城交', 'exists': True}
2025-04-16 16:54:34,250 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301092 -> 输出 301092
2025-04-16 16:54:34,251 - src.data_sources.akshare - INFO - 股票 301092 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '争光股份', 'exists': True}
2025-04-16 16:54:34,251 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301093 -> 输出 301093
2025-04-16 16:54:34,252 - src.data_sources.akshare - INFO - 股票 301093 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华兰股份', 'exists': True}
2025-04-16 16:54:34,252 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301095 -> 输出 301095
2025-04-16 16:54:34,253 - src.data_sources.akshare - INFO - 股票 301095 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '广立微', 'exists': True}
2025-04-16 16:54:34,254 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301096 -> 输出 301096
2025-04-16 16:54:34,255 - src.data_sources.akshare - INFO - 股票 301096 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '百诚医药', 'exists': True}
2025-04-16 16:54:34,255 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301097 -> 输出 301097
2025-04-16 16:54:34,256 - src.data_sources.akshare - INFO - 股票 301097 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '天益医疗', 'exists': True}
2025-04-16 16:54:34,256 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301098 -> 输出 301098
2025-04-16 16:54:34,257 - src.data_sources.akshare - INFO - 股票 301098 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '金埔园林', 'exists': True}
2025-04-16 16:54:34,257 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301099 -> 输出 301099
2025-04-16 16:54:34,258 - src.data_sources.akshare - INFO - 股票 301099 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '雅创电子', 'exists': True}
2025-04-16 16:54:34,258 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301100 -> 输出 301100
2025-04-16 16:54:34,259 - src.data_sources.akshare - INFO - 股票 301100 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '风光股份', 'exists': True}
2025-04-16 16:54:34,259 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301101 -> 输出 301101
2025-04-16 16:54:34,260 - src.data_sources.akshare - INFO - 股票 301101 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '明月镜片', 'exists': True}
2025-04-16 16:54:34,260 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301102 -> 输出 301102
2025-04-16 16:54:34,261 - src.data_sources.akshare - INFO - 股票 301102 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '兆讯传媒', 'exists': True}
2025-04-16 16:54:34,261 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301103 -> 输出 301103
2025-04-16 16:54:34,262 - src.data_sources.akshare - INFO - 股票 301103 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '何氏眼科', 'exists': True}
2025-04-16 16:54:34,262 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301105 -> 输出 301105
2025-04-16 16:54:34,263 - src.data_sources.akshare - INFO - 股票 301105 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '鸿铭股份', 'exists': True}
2025-04-16 16:54:34,264 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301106 -> 输出 301106
2025-04-16 16:54:34,264 - src.data_sources.akshare - INFO - 股票 301106 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '骏成科技', 'exists': True}
2025-04-16 16:54:34,265 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301107 -> 输出 301107
2025-04-16 16:54:34,265 - src.data_sources.akshare - INFO - 股票 301107 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '瑜欣电子', 'exists': True}
2025-04-16 16:54:34,266 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301108 -> 输出 301108
2025-04-16 16:54:34,266 - src.data_sources.akshare - INFO - 股票 301108 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '洁雅股份', 'exists': True}
2025-04-16 16:54:34,267 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301109 -> 输出 301109
2025-04-16 16:54:34,268 - src.data_sources.akshare - INFO - 股票 301109 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '军信股份', 'exists': True}
2025-04-16 16:54:34,268 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301110 -> 输出 301110
2025-04-16 16:54:34,269 - src.data_sources.akshare - INFO - 股票 301110 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '青木科技', 'exists': True}
2025-04-16 16:54:34,269 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301111 -> 输出 301111
2025-04-16 16:54:34,270 - src.data_sources.akshare - INFO - 股票 301111 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '粤万年青', 'exists': True}
2025-04-16 16:54:34,271 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301112 -> 输出 301112
2025-04-16 16:54:34,271 - src.data_sources.akshare - INFO - 股票 301112 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '信邦智能', 'exists': True}
2025-04-16 16:54:34,272 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301113 -> 输出 301113
2025-04-16 16:54:34,273 - src.data_sources.akshare - INFO - 股票 301113 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '雅艺科技', 'exists': True}
2025-04-16 16:54:34,273 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301115 -> 输出 301115
2025-04-16 16:54:34,274 - src.data_sources.akshare - INFO - 股票 301115 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '建科股份', 'exists': True}
2025-04-16 16:54:34,274 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301116 -> 输出 301116
2025-04-16 16:54:34,275 - src.data_sources.akshare - INFO - 股票 301116 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '益客食品', 'exists': True}
2025-04-16 16:54:34,275 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301117 -> 输出 301117
2025-04-16 16:54:34,276 - src.data_sources.akshare - INFO - 股票 301117 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '佳缘科技', 'exists': True}
2025-04-16 16:54:34,276 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301118 -> 输出 301118
2025-04-16 16:54:34,277 - src.data_sources.akshare - INFO - 股票 301118 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '恒光股份', 'exists': True}
2025-04-16 16:54:34,277 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301119 -> 输出 301119
2025-04-16 16:54:34,278 - src.data_sources.akshare - INFO - 股票 301119 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '正强股份', 'exists': True}
2025-04-16 16:54:34,278 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301120 -> 输出 301120
2025-04-16 16:54:34,278 - src.data_sources.akshare - INFO - 股票 301120 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '新特电气', 'exists': True}
2025-04-16 16:54:34,279 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301121 -> 输出 301121
2025-04-16 16:54:34,280 - src.data_sources.akshare - INFO - 股票 301121 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '紫建电子', 'exists': True}
2025-04-16 16:54:34,281 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301122 -> 输出 301122
2025-04-16 16:54:34,282 - src.data_sources.akshare - INFO - 股票 301122 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '采纳股份', 'exists': True}
2025-04-16 16:54:34,282 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301123 -> 输出 301123
2025-04-16 16:54:34,283 - src.data_sources.akshare - INFO - 股票 301123 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '奕东电子', 'exists': True}
2025-04-16 16:54:34,283 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301125 -> 输出 301125
2025-04-16 16:54:34,284 - src.data_sources.akshare - INFO - 股票 301125 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '腾亚精工', 'exists': True}
2025-04-16 16:54:34,284 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301126 -> 输出 301126
2025-04-16 16:54:34,285 - src.data_sources.akshare - INFO - 股票 301126 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '达嘉维康', 'exists': True}
2025-04-16 16:54:34,285 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301127 -> 输出 301127
2025-04-16 16:54:34,286 - src.data_sources.akshare - INFO - 股票 301127 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '天源环保', 'exists': True}
2025-04-16 16:54:34,286 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301128 -> 输出 301128
2025-04-16 16:54:34,287 - src.data_sources.akshare - INFO - 股票 301128 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '强瑞技术', 'exists': True}
2025-04-16 16:54:34,287 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301129 -> 输出 301129
2025-04-16 16:54:34,288 - src.data_sources.akshare - INFO - 股票 301129 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '瑞纳智能', 'exists': True}
2025-04-16 16:54:34,288 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301130 -> 输出 301130
2025-04-16 16:54:34,289 - src.data_sources.akshare - INFO - 股票 301130 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '西点药业', 'exists': True}
2025-04-16 16:54:34,289 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301131 -> 输出 301131
2025-04-16 16:54:34,290 - src.data_sources.akshare - INFO - 股票 301131 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '聚赛龙', 'exists': True}
2025-04-16 16:54:34,290 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301132 -> 输出 301132
2025-04-16 16:54:34,291 - src.data_sources.akshare - INFO - 股票 301132 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '满坤科技', 'exists': True}
2025-04-16 16:54:34,291 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301133 -> 输出 301133
2025-04-16 16:54:34,292 - src.data_sources.akshare - INFO - 股票 301133 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '金钟股份', 'exists': True}
2025-04-16 16:54:34,292 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301135 -> 输出 301135
2025-04-16 16:54:34,293 - src.data_sources.akshare - INFO - 股票 301135 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '瑞德智能', 'exists': True}
2025-04-16 16:54:34,293 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301136 -> 输出 301136
2025-04-16 16:54:34,294 - src.data_sources.akshare - INFO - 股票 301136 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '招标股份', 'exists': True}
2025-04-16 16:54:34,294 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301137 -> 输出 301137
2025-04-16 16:54:34,295 - src.data_sources.akshare - INFO - 股票 301137 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '哈焊华通', 'exists': True}
2025-04-16 16:54:34,295 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301138 -> 输出 301138
2025-04-16 16:54:34,296 - src.data_sources.akshare - INFO - 股票 301138 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华研精机', 'exists': True}
2025-04-16 16:54:34,296 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301139 -> 输出 301139
2025-04-16 16:54:34,297 - src.data_sources.akshare - INFO - 股票 301139 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '元道通信', 'exists': True}
2025-04-16 16:54:34,298 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301141 -> 输出 301141
2025-04-16 16:54:34,298 - src.data_sources.akshare - INFO - 股票 301141 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中科磁业', 'exists': True}
2025-04-16 16:54:34,299 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301148 -> 输出 301148
2025-04-16 16:54:34,299 - src.data_sources.akshare - INFO - 股票 301148 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '嘉戎技术', 'exists': True}
2025-04-16 16:54:34,300 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301149 -> 输出 301149
2025-04-16 16:54:34,300 - src.data_sources.akshare - INFO - 股票 301149 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '隆华新材', 'exists': True}
2025-04-16 16:54:34,301 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301150 -> 输出 301150
2025-04-16 16:54:34,301 - src.data_sources.akshare - INFO - 股票 301150 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中一科技', 'exists': True}
2025-04-16 16:54:34,302 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301151 -> 输出 301151
2025-04-16 16:54:34,302 - src.data_sources.akshare - INFO - 股票 301151 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '冠龙节能', 'exists': True}
2025-04-16 16:54:34,303 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301152 -> 输出 301152
2025-04-16 16:54:34,303 - src.data_sources.akshare - INFO - 股票 301152 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '天力锂能', 'exists': True}
2025-04-16 16:54:34,304 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301153 -> 输出 301153
2025-04-16 16:54:34,304 - src.data_sources.akshare - INFO - 股票 301153 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中科江南', 'exists': True}
2025-04-16 16:54:34,305 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301155 -> 输出 301155
2025-04-16 16:54:34,306 - src.data_sources.akshare - INFO - 股票 301155 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '海力风电', 'exists': True}
2025-04-16 16:54:34,306 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301156 -> 输出 301156
2025-04-16 16:54:34,307 - src.data_sources.akshare - INFO - 股票 301156 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '美农生物', 'exists': True}
2025-04-16 16:54:34,307 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301157 -> 输出 301157
2025-04-16 16:54:34,308 - src.data_sources.akshare - INFO - 股票 301157 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华塑科技', 'exists': True}
2025-04-16 16:54:34,308 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301158 -> 输出 301158
2025-04-16 16:54:34,309 - src.data_sources.akshare - INFO - 股票 301158 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '德石股份', 'exists': True}
2025-04-16 16:54:34,309 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301159 -> 输出 301159
2025-04-16 16:54:34,310 - src.data_sources.akshare - INFO - 股票 301159 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '三维天地', 'exists': True}
2025-04-16 16:54:34,310 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301160 -> 输出 301160
2025-04-16 16:54:34,311 - src.data_sources.akshare - INFO - 股票 301160 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '翔楼新材', 'exists': True}
2025-04-16 16:54:34,311 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301161 -> 输出 301161
2025-04-16 16:54:34,311 - src.data_sources.akshare - INFO - 股票 301161 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '唯万密封', 'exists': True}
2025-04-16 16:54:34,312 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301162 -> 输出 301162
2025-04-16 16:54:34,313 - src.data_sources.akshare - INFO - 股票 301162 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '国能日新', 'exists': True}
2025-04-16 16:54:34,313 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301163 -> 输出 301163
2025-04-16 16:54:34,314 - src.data_sources.akshare - INFO - 股票 301163 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '宏德股份', 'exists': True}
2025-04-16 16:54:34,314 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301165 -> 输出 301165
2025-04-16 16:54:34,315 - src.data_sources.akshare - INFO - 股票 301165 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '锐捷网络', 'exists': True}
2025-04-16 16:54:34,315 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301166 -> 输出 301166
2025-04-16 16:54:34,316 - src.data_sources.akshare - INFO - 股票 301166 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '优宁维', 'exists': True}
2025-04-16 16:54:34,316 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301167 -> 输出 301167
2025-04-16 16:54:34,317 - src.data_sources.akshare - INFO - 股票 301167 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '建研设计', 'exists': True}
2025-04-16 16:54:34,317 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301168 -> 输出 301168
2025-04-16 16:54:34,318 - src.data_sources.akshare - INFO - 股票 301168 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '通灵股份', 'exists': True}
2025-04-16 16:54:34,318 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301169 -> 输出 301169
2025-04-16 16:54:34,318 - src.data_sources.akshare - INFO - 股票 301169 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '零点有数', 'exists': True}
2025-04-16 16:54:34,319 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301170 -> 输出 301170
2025-04-16 16:54:34,319 - src.data_sources.akshare - INFO - 股票 301170 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '锡南科技', 'exists': True}
2025-04-16 16:54:34,320 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301171 -> 输出 301171
2025-04-16 16:54:34,320 - src.data_sources.akshare - INFO - 股票 301171 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '易点天下', 'exists': True}
2025-04-16 16:54:34,321 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301172 -> 输出 301172
2025-04-16 16:54:34,322 - src.data_sources.akshare - INFO - 股票 301172 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '君逸数码', 'exists': True}
2025-04-16 16:54:34,322 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301173 -> 输出 301173
2025-04-16 16:54:34,323 - src.data_sources.akshare - INFO - 股票 301173 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '毓恬冠佳', 'exists': True}
2025-04-16 16:54:34,324 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301175 -> 输出 301175
2025-04-16 16:54:34,324 - src.data_sources.akshare - INFO - 股票 301175 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中科环保', 'exists': True}
2025-04-16 16:54:34,325 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301176 -> 输出 301176
2025-04-16 16:54:34,325 - src.data_sources.akshare - INFO - 股票 301176 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '逸豪新材', 'exists': True}
2025-04-16 16:54:34,326 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301177 -> 输出 301177
2025-04-16 16:54:34,327 - src.data_sources.akshare - INFO - 股票 301177 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '迪阿股份', 'exists': True}
2025-04-16 16:54:34,327 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301178 -> 输出 301178
2025-04-16 16:54:34,327 - src.data_sources.akshare - INFO - 股票 301178 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '天亿马', 'exists': True}
2025-04-16 16:54:34,328 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301179 -> 输出 301179
2025-04-16 16:54:34,328 - src.data_sources.akshare - INFO - 股票 301179 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '泽宇智能', 'exists': True}
2025-04-16 16:54:34,329 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301180 -> 输出 301180
2025-04-16 16:54:34,330 - src.data_sources.akshare - INFO - 股票 301180 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '万祥科技', 'exists': True}
2025-04-16 16:54:34,330 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301181 -> 输出 301181
2025-04-16 16:54:34,331 - src.data_sources.akshare - INFO - 股票 301181 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '标榜股份', 'exists': True}
2025-04-16 16:54:34,331 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301182 -> 输出 301182
2025-04-16 16:54:34,332 - src.data_sources.akshare - INFO - 股票 301182 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '凯旺科技', 'exists': True}
2025-04-16 16:54:34,332 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301183 -> 输出 301183
2025-04-16 16:54:34,333 - src.data_sources.akshare - INFO - 股票 301183 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '东田微', 'exists': True}
2025-04-16 16:54:34,333 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301185 -> 输出 301185
2025-04-16 16:54:34,334 - src.data_sources.akshare - INFO - 股票 301185 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '鸥玛软件', 'exists': True}
2025-04-16 16:54:34,334 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301186 -> 输出 301186
2025-04-16 16:54:34,335 - src.data_sources.akshare - INFO - 股票 301186 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '超达装备', 'exists': True}
2025-04-16 16:54:34,335 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301187 -> 输出 301187
2025-04-16 16:54:34,336 - src.data_sources.akshare - INFO - 股票 301187 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '欧圣电气', 'exists': True}
2025-04-16 16:54:34,336 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301188 -> 输出 301188
2025-04-16 16:54:34,337 - src.data_sources.akshare - INFO - 股票 301188 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '力诺药包', 'exists': True}
2025-04-16 16:54:34,337 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301189 -> 输出 301189
2025-04-16 16:54:34,338 - src.data_sources.akshare - INFO - 股票 301189 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '奥尼电子', 'exists': True}
2025-04-16 16:54:34,338 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301190 -> 输出 301190
2025-04-16 16:54:34,339 - src.data_sources.akshare - INFO - 股票 301190 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '善水科技', 'exists': True}
2025-04-16 16:54:34,339 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301191 -> 输出 301191
2025-04-16 16:54:34,340 - src.data_sources.akshare - INFO - 股票 301191 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '菲菱科思', 'exists': True}
2025-04-16 16:54:34,340 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301192 -> 输出 301192
2025-04-16 16:54:34,341 - src.data_sources.akshare - INFO - 股票 301192 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '泰祥股份', 'exists': True}
2025-04-16 16:54:34,341 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301193 -> 输出 301193
2025-04-16 16:54:34,342 - src.data_sources.akshare - INFO - 股票 301193 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '家联科技', 'exists': True}
2025-04-16 16:54:34,342 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301195 -> 输出 301195
2025-04-16 16:54:34,343 - src.data_sources.akshare - INFO - 股票 301195 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '北路智控', 'exists': True}
2025-04-16 16:54:34,343 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301196 -> 输出 301196
2025-04-16 16:54:34,344 - src.data_sources.akshare - INFO - 股票 301196 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '唯科科技', 'exists': True}
2025-04-16 16:54:34,344 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301197 -> 输出 301197
2025-04-16 16:54:34,345 - src.data_sources.akshare - INFO - 股票 301197 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '工大科雅', 'exists': True}
2025-04-16 16:54:34,345 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301198 -> 输出 301198
2025-04-16 16:54:34,346 - src.data_sources.akshare - INFO - 股票 301198 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '喜悦智行', 'exists': True}
2025-04-16 16:54:34,346 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301199 -> 输出 301199
2025-04-16 16:54:34,347 - src.data_sources.akshare - INFO - 股票 301199 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '迈赫股份', 'exists': True}
2025-04-16 16:54:34,347 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301200 -> 输出 301200
2025-04-16 16:54:34,348 - src.data_sources.akshare - INFO - 股票 301200 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '大族数控', 'exists': True}
2025-04-16 16:54:34,348 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301201 -> 输出 301201
2025-04-16 16:54:34,349 - src.data_sources.akshare - INFO - 股票 301201 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '诚达药业', 'exists': True}
2025-04-16 16:54:34,349 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301202 -> 输出 301202
2025-04-16 16:54:34,350 - src.data_sources.akshare - INFO - 股票 301202 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '朗威股份', 'exists': True}
2025-04-16 16:54:34,350 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301203 -> 输出 301203
2025-04-16 16:54:34,351 - src.data_sources.akshare - INFO - 股票 301203 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '国泰环保', 'exists': True}
2025-04-16 16:54:34,351 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301205 -> 输出 301205
2025-04-16 16:54:34,352 - src.data_sources.akshare - INFO - 股票 301205 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '联特科技', 'exists': True}
2025-04-16 16:54:34,352 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301206 -> 输出 301206
2025-04-16 16:54:34,353 - src.data_sources.akshare - INFO - 股票 301206 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '三元生物', 'exists': True}
2025-04-16 16:54:34,353 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301207 -> 输出 301207
2025-04-16 16:54:34,354 - src.data_sources.akshare - INFO - 股票 301207 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华兰疫苗', 'exists': True}
2025-04-16 16:54:34,354 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301208 -> 输出 301208
2025-04-16 16:54:34,355 - src.data_sources.akshare - INFO - 股票 301208 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中亦科技', 'exists': True}
2025-04-16 16:54:34,356 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301209 -> 输出 301209
2025-04-16 16:54:34,357 - src.data_sources.akshare - INFO - 股票 301209 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '联合化学', 'exists': True}
2025-04-16 16:54:34,357 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301210 -> 输出 301210
2025-04-16 16:54:34,358 - src.data_sources.akshare - INFO - 股票 301210 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '金杨股份', 'exists': True}
2025-04-16 16:54:34,358 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301211 -> 输出 301211
2025-04-16 16:54:34,359 - src.data_sources.akshare - INFO - 股票 301211 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '亨迪药业', 'exists': True}
2025-04-16 16:54:34,359 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301212 -> 输出 301212
2025-04-16 16:54:34,360 - src.data_sources.akshare - INFO - 股票 301212 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '联盛化学', 'exists': True}
2025-04-16 16:54:34,360 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301213 -> 输出 301213
2025-04-16 16:54:34,361 - src.data_sources.akshare - INFO - 股票 301213 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '观想科技', 'exists': True}
2025-04-16 16:54:34,361 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301215 -> 输出 301215
2025-04-16 16:54:34,362 - src.data_sources.akshare - INFO - 股票 301215 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中汽股份', 'exists': True}
2025-04-16 16:54:34,362 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301216 -> 输出 301216
2025-04-16 16:54:34,363 - src.data_sources.akshare - INFO - 股票 301216 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '万凯新材', 'exists': True}
2025-04-16 16:54:34,363 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301217 -> 输出 301217
2025-04-16 16:54:34,364 - src.data_sources.akshare - INFO - 股票 301217 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '铜冠铜箔', 'exists': True}
2025-04-16 16:54:34,364 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301218 -> 输出 301218
2025-04-16 16:54:34,365 - src.data_sources.akshare - INFO - 股票 301218 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华是科技', 'exists': True}
2025-04-16 16:54:34,365 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301219 -> 输出 301219
2025-04-16 16:54:34,366 - src.data_sources.akshare - INFO - 股票 301219 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '腾远钴业', 'exists': True}
2025-04-16 16:54:34,366 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301220 -> 输出 301220
2025-04-16 16:54:34,367 - src.data_sources.akshare - INFO - 股票 301220 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '亚香股份', 'exists': True}
2025-04-16 16:54:34,367 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301221 -> 输出 301221
2025-04-16 16:54:34,368 - src.data_sources.akshare - INFO - 股票 301221 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '光庭信息', 'exists': True}
2025-04-16 16:54:34,368 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301222 -> 输出 301222
2025-04-16 16:54:34,369 - src.data_sources.akshare - INFO - 股票 301222 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '浙江恒威', 'exists': True}
2025-04-16 16:54:34,369 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301223 -> 输出 301223
2025-04-16 16:54:34,370 - src.data_sources.akshare - INFO - 股票 301223 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中荣股份', 'exists': True}
2025-04-16 16:54:34,370 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301225 -> 输出 301225
2025-04-16 16:54:34,371 - src.data_sources.akshare - INFO - 股票 301225 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '恒勃股份', 'exists': True}
2025-04-16 16:54:34,371 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301226 -> 输出 301226
2025-04-16 16:54:34,372 - src.data_sources.akshare - INFO - 股票 301226 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '祥明智能', 'exists': True}
2025-04-16 16:54:34,372 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301227 -> 输出 301227
2025-04-16 16:54:34,373 - src.data_sources.akshare - INFO - 股票 301227 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '森鹰窗业', 'exists': True}
2025-04-16 16:54:34,373 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301228 -> 输出 301228
2025-04-16 16:54:34,374 - src.data_sources.akshare - INFO - 股票 301228 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '实朴检测', 'exists': True}
2025-04-16 16:54:34,374 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301229 -> 输出 301229
2025-04-16 16:54:34,375 - src.data_sources.akshare - INFO - 股票 301229 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '纽泰格', 'exists': True}
2025-04-16 16:54:34,375 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301230 -> 输出 301230
2025-04-16 16:54:34,376 - src.data_sources.akshare - INFO - 股票 301230 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '泓博医药', 'exists': True}
2025-04-16 16:54:34,376 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301231 -> 输出 301231
2025-04-16 16:54:34,377 - src.data_sources.akshare - INFO - 股票 301231 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '荣信文化', 'exists': True}
2025-04-16 16:54:34,377 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301232 -> 输出 301232
2025-04-16 16:54:34,378 - src.data_sources.akshare - INFO - 股票 301232 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '飞沃科技', 'exists': True}
2025-04-16 16:54:34,378 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301233 -> 输出 301233
2025-04-16 16:54:34,379 - src.data_sources.akshare - INFO - 股票 301233 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '盛帮股份', 'exists': True}
2025-04-16 16:54:34,380 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301234 -> 输出 301234
2025-04-16 16:54:34,380 - src.data_sources.akshare - INFO - 股票 301234 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '五洲医疗', 'exists': True}
2025-04-16 16:54:34,381 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301235 -> 输出 301235
2025-04-16 16:54:34,381 - src.data_sources.akshare - INFO - 股票 301235 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华康洁净', 'exists': True}
2025-04-16 16:54:34,382 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301236 -> 输出 301236
2025-04-16 16:54:34,382 - src.data_sources.akshare - INFO - 股票 301236 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '软通动力', 'exists': True}
2025-04-16 16:54:34,383 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301237 -> 输出 301237
2025-04-16 16:54:34,383 - src.data_sources.akshare - INFO - 股票 301237 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '和顺科技', 'exists': True}
2025-04-16 16:54:34,384 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301238 -> 输出 301238
2025-04-16 16:54:34,384 - src.data_sources.akshare - INFO - 股票 301238 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '瑞泰新材', 'exists': True}
2025-04-16 16:54:34,385 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301239 -> 输出 301239
2025-04-16 16:54:34,385 - src.data_sources.akshare - INFO - 股票 301239 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '普瑞眼科', 'exists': True}
2025-04-16 16:54:34,385 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301246 -> 输出 301246
2025-04-16 16:54:34,386 - src.data_sources.akshare - INFO - 股票 301246 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '宏源药业', 'exists': True}
2025-04-16 16:54:34,386 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301248 -> 输出 301248
2025-04-16 16:54:34,387 - src.data_sources.akshare - INFO - 股票 301248 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '杰创智能', 'exists': True}
2025-04-16 16:54:34,388 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301251 -> 输出 301251
2025-04-16 16:54:34,389 - src.data_sources.akshare - INFO - 股票 301251 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '威尔高', 'exists': True}
2025-04-16 16:54:34,389 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301252 -> 输出 301252
2025-04-16 16:54:34,390 - src.data_sources.akshare - INFO - 股票 301252 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '同星科技', 'exists': True}
2025-04-16 16:54:34,391 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301255 -> 输出 301255
2025-04-16 16:54:34,391 - src.data_sources.akshare - INFO - 股票 301255 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '通力科技', 'exists': True}
2025-04-16 16:54:34,392 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301256 -> 输出 301256
2025-04-16 16:54:34,392 - src.data_sources.akshare - INFO - 股票 301256 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华融化学', 'exists': True}
2025-04-16 16:54:34,393 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301257 -> 输出 301257
2025-04-16 16:54:34,393 - src.data_sources.akshare - INFO - 股票 301257 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '普蕊斯', 'exists': True}
2025-04-16 16:54:34,393 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301258 -> 输出 301258
2025-04-16 16:54:34,394 - src.data_sources.akshare - INFO - 股票 301258 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '富士莱', 'exists': True}
2025-04-16 16:54:34,394 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301259 -> 输出 301259
2025-04-16 16:54:34,395 - src.data_sources.akshare - INFO - 股票 301259 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '艾布鲁', 'exists': True}
2025-04-16 16:54:34,395 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301260 -> 输出 301260
2025-04-16 16:54:34,396 - src.data_sources.akshare - INFO - 股票 301260 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '格力博', 'exists': True}
2025-04-16 16:54:34,397 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301261 -> 输出 301261
2025-04-16 16:54:34,397 - src.data_sources.akshare - INFO - 股票 301261 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '恒工精密', 'exists': True}
2025-04-16 16:54:34,398 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301262 -> 输出 301262
2025-04-16 16:54:34,398 - src.data_sources.akshare - INFO - 股票 301262 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '海看股份', 'exists': True}
2025-04-16 16:54:34,399 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301263 -> 输出 301263
2025-04-16 16:54:34,399 - src.data_sources.akshare - INFO - 股票 301263 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '泰恩康', 'exists': True}
2025-04-16 16:54:34,400 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301265 -> 输出 301265
2025-04-16 16:54:34,400 - src.data_sources.akshare - INFO - 股票 301265 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华新环保', 'exists': True}
2025-04-16 16:54:34,400 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301266 -> 输出 301266
2025-04-16 16:54:34,401 - src.data_sources.akshare - INFO - 股票 301266 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '宇邦新材', 'exists': True}
2025-04-16 16:54:34,401 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301267 -> 输出 301267
2025-04-16 16:54:34,402 - src.data_sources.akshare - INFO - 股票 301267 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华厦眼科', 'exists': True}
2025-04-16 16:54:34,402 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301268 -> 输出 301268
2025-04-16 16:54:34,403 - src.data_sources.akshare - INFO - 股票 301268 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '铭利达', 'exists': True}
2025-04-16 16:54:34,403 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301269 -> 输出 301269
2025-04-16 16:54:34,404 - src.data_sources.akshare - INFO - 股票 301269 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华大九天', 'exists': True}
2025-04-16 16:54:34,404 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301270 -> 输出 301270
2025-04-16 16:54:34,405 - src.data_sources.akshare - INFO - 股票 301270 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '汉仪股份', 'exists': True}
2025-04-16 16:54:34,405 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301272 -> 输出 301272
2025-04-16 16:54:34,406 - src.data_sources.akshare - INFO - 股票 301272 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '英华特', 'exists': True}
2025-04-16 16:54:34,406 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301273 -> 输出 301273
2025-04-16 16:54:34,407 - src.data_sources.akshare - INFO - 股票 301273 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '瑞晨环保', 'exists': True}
2025-04-16 16:54:34,407 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301275 -> 输出 301275
2025-04-16 16:54:34,408 - src.data_sources.akshare - INFO - 股票 301275 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '汉朔科技', 'exists': True}
2025-04-16 16:54:34,408 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301276 -> 输出 301276
2025-04-16 16:54:34,409 - src.data_sources.akshare - INFO - 股票 301276 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '嘉曼服饰', 'exists': True}
2025-04-16 16:54:34,409 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301277 -> 输出 301277
2025-04-16 16:54:34,410 - src.data_sources.akshare - INFO - 股票 301277 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '新天地', 'exists': True}
2025-04-16 16:54:34,410 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301278 -> 输出 301278
2025-04-16 16:54:34,411 - src.data_sources.akshare - INFO - 股票 301278 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '快可电子', 'exists': True}
2025-04-16 16:54:34,411 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301279 -> 输出 301279
2025-04-16 16:54:34,412 - src.data_sources.akshare - INFO - 股票 301279 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '金道科技', 'exists': True}
2025-04-16 16:54:34,412 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301280 -> 输出 301280
2025-04-16 16:54:34,413 - src.data_sources.akshare - INFO - 股票 301280 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '珠城科技', 'exists': True}
2025-04-16 16:54:34,413 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301281 -> 输出 301281
2025-04-16 16:54:34,414 - src.data_sources.akshare - INFO - 股票 301281 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '科源制药', 'exists': True}
2025-04-16 16:54:34,414 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301282 -> 输出 301282
2025-04-16 16:54:34,415 - src.data_sources.akshare - INFO - 股票 301282 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '金禄电子', 'exists': True}
2025-04-16 16:54:34,415 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301283 -> 输出 301283
2025-04-16 16:54:34,416 - src.data_sources.akshare - INFO - 股票 301283 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '聚胶股份', 'exists': True}
2025-04-16 16:54:34,416 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301285 -> 输出 301285
2025-04-16 16:54:34,417 - src.data_sources.akshare - INFO - 股票 301285 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '鸿日达', 'exists': True}
2025-04-16 16:54:34,417 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301286 -> 输出 301286
2025-04-16 16:54:34,418 - src.data_sources.akshare - INFO - 股票 301286 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '侨源股份', 'exists': True}
2025-04-16 16:54:34,418 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301287 -> 输出 301287
2025-04-16 16:54:34,419 - src.data_sources.akshare - INFO - 股票 301287 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '康力源', 'exists': True}
2025-04-16 16:54:34,419 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301288 -> 输出 301288
2025-04-16 16:54:34,420 - src.data_sources.akshare - INFO - 股票 301288 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '清研环境', 'exists': True}
2025-04-16 16:54:34,420 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301289 -> 输出 301289
2025-04-16 16:54:34,421 - src.data_sources.akshare - INFO - 股票 301289 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '国缆检测', 'exists': True}
2025-04-16 16:54:34,421 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301290 -> 输出 301290
2025-04-16 16:54:34,422 - src.data_sources.akshare - INFO - 股票 301290 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '东星医疗', 'exists': True}
2025-04-16 16:54:34,423 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301291 -> 输出 301291
2025-04-16 16:54:34,423 - src.data_sources.akshare - INFO - 股票 301291 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '明阳电气', 'exists': True}
2025-04-16 16:54:34,424 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301292 -> 输出 301292
2025-04-16 16:54:34,424 - src.data_sources.akshare - INFO - 股票 301292 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '海科新源', 'exists': True}
2025-04-16 16:54:34,424 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301293 -> 输出 301293
2025-04-16 16:54:34,425 - src.data_sources.akshare - INFO - 股票 301293 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '三博脑科', 'exists': True}
2025-04-16 16:54:34,425 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301295 -> 输出 301295
2025-04-16 16:54:34,426 - src.data_sources.akshare - INFO - 股票 301295 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '美硕科技', 'exists': True}
2025-04-16 16:54:34,426 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301296 -> 输出 301296
2025-04-16 16:54:34,427 - src.data_sources.akshare - INFO - 股票 301296 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '新巨丰', 'exists': True}
2025-04-16 16:54:34,427 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301297 -> 输出 301297
2025-04-16 16:54:34,428 - src.data_sources.akshare - INFO - 股票 301297 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '富乐德', 'exists': True}
2025-04-16 16:54:34,428 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301298 -> 输出 301298
2025-04-16 16:54:34,429 - src.data_sources.akshare - INFO - 股票 301298 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '东利机械', 'exists': True}
2025-04-16 16:54:34,430 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301299 -> 输出 301299
2025-04-16 16:54:34,431 - src.data_sources.akshare - INFO - 股票 301299 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '卓创资讯', 'exists': True}
2025-04-16 16:54:34,431 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301300 -> 输出 301300
2025-04-16 16:54:34,432 - src.data_sources.akshare - INFO - 股票 301300 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '远翔新材', 'exists': True}
2025-04-16 16:54:34,432 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301301 -> 输出 301301
2025-04-16 16:54:34,433 - src.data_sources.akshare - INFO - 股票 301301 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '川宁生物', 'exists': True}
2025-04-16 16:54:34,434 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301302 -> 输出 301302
2025-04-16 16:54:34,434 - src.data_sources.akshare - INFO - 股票 301302 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华如科技', 'exists': True}
2025-04-16 16:54:34,435 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301303 -> 输出 301303
2025-04-16 16:54:34,435 - src.data_sources.akshare - INFO - 股票 301303 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '真兰仪表', 'exists': True}
2025-04-16 16:54:34,436 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301305 -> 输出 301305
2025-04-16 16:54:34,436 - src.data_sources.akshare - INFO - 股票 301305 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '朗坤环境', 'exists': True}
2025-04-16 16:54:34,437 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301306 -> 输出 301306
2025-04-16 16:54:34,438 - src.data_sources.akshare - INFO - 股票 301306 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '西测测试', 'exists': True}
2025-04-16 16:54:34,438 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301307 -> 输出 301307
2025-04-16 16:54:34,439 - src.data_sources.akshare - INFO - 股票 301307 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '美利信', 'exists': True}
2025-04-16 16:54:34,439 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301308 -> 输出 301308
2025-04-16 16:54:34,440 - src.data_sources.akshare - INFO - 股票 301308 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '江波龙', 'exists': True}
2025-04-16 16:54:34,440 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301309 -> 输出 301309
2025-04-16 16:54:34,441 - src.data_sources.akshare - INFO - 股票 301309 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '万得凯', 'exists': True}
2025-04-16 16:54:34,441 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301310 -> 输出 301310
2025-04-16 16:54:34,442 - src.data_sources.akshare - INFO - 股票 301310 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '鑫宏业', 'exists': True}
2025-04-16 16:54:34,442 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301311 -> 输出 301311
2025-04-16 16:54:34,443 - src.data_sources.akshare - INFO - 股票 301311 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '昆船智能', 'exists': True}
2025-04-16 16:54:34,443 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301312 -> 输出 301312
2025-04-16 16:54:34,444 - src.data_sources.akshare - INFO - 股票 301312 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '智立方', 'exists': True}
2025-04-16 16:54:34,444 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301313 -> 输出 301313
2025-04-16 16:54:34,445 - src.data_sources.akshare - INFO - 股票 301313 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '凡拓数创', 'exists': True}
2025-04-16 16:54:34,445 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301314 -> 输出 301314
2025-04-16 16:54:34,446 - src.data_sources.akshare - INFO - 股票 301314 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '科瑞思', 'exists': True}
2025-04-16 16:54:34,447 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301315 -> 输出 301315
2025-04-16 16:54:34,447 - src.data_sources.akshare - INFO - 股票 301315 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '威士顿', 'exists': True}
2025-04-16 16:54:34,448 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301316 -> 输出 301316
2025-04-16 16:54:34,448 - src.data_sources.akshare - INFO - 股票 301316 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '慧博云通', 'exists': True}
2025-04-16 16:54:34,449 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301317 -> 输出 301317
2025-04-16 16:54:34,449 - src.data_sources.akshare - INFO - 股票 301317 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '鑫磊股份', 'exists': True}
2025-04-16 16:54:34,450 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301318 -> 输出 301318
2025-04-16 16:54:34,450 - src.data_sources.akshare - INFO - 股票 301318 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '维海德', 'exists': True}
2025-04-16 16:54:34,451 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301319 -> 输出 301319
2025-04-16 16:54:34,451 - src.data_sources.akshare - INFO - 股票 301319 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '唯特偶', 'exists': True}
2025-04-16 16:54:34,452 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301320 -> 输出 301320
2025-04-16 16:54:34,452 - src.data_sources.akshare - INFO - 股票 301320 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '豪江智能', 'exists': True}
2025-04-16 16:54:34,452 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301321 -> 输出 301321
2025-04-16 16:54:34,453 - src.data_sources.akshare - INFO - 股票 301321 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '翰博高新', 'exists': True}
2025-04-16 16:54:34,453 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301322 -> 输出 301322
2025-04-16 16:54:34,454 - src.data_sources.akshare - INFO - 股票 301322 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '绿通科技', 'exists': True}
2025-04-16 16:54:34,455 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301323 -> 输出 301323
2025-04-16 16:54:34,456 - src.data_sources.akshare - INFO - 股票 301323 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '新莱福', 'exists': True}
2025-04-16 16:54:34,456 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301325 -> 输出 301325
2025-04-16 16:54:34,457 - src.data_sources.akshare - INFO - 股票 301325 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '曼恩斯特', 'exists': True}
2025-04-16 16:54:34,457 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301326 -> 输出 301326
2025-04-16 16:54:34,458 - src.data_sources.akshare - INFO - 股票 301326 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '捷邦科技', 'exists': True}
2025-04-16 16:54:34,458 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301327 -> 输出 301327
2025-04-16 16:54:34,459 - src.data_sources.akshare - INFO - 股票 301327 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华宝新能', 'exists': True}
2025-04-16 16:54:34,459 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301328 -> 输出 301328
2025-04-16 16:54:34,460 - src.data_sources.akshare - INFO - 股票 301328 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '维峰电子', 'exists': True}
2025-04-16 16:54:34,460 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301329 -> 输出 301329
2025-04-16 16:54:34,460 - src.data_sources.akshare - INFO - 股票 301329 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '信音电子', 'exists': True}
2025-04-16 16:54:34,461 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301330 -> 输出 301330
2025-04-16 16:54:34,461 - src.data_sources.akshare - INFO - 股票 301330 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '熵基科技', 'exists': True}
2025-04-16 16:54:34,462 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301331 -> 输出 301331
2025-04-16 16:54:34,462 - src.data_sources.akshare - INFO - 股票 301331 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '恩威医药', 'exists': True}
2025-04-16 16:54:34,463 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301332 -> 输出 301332
2025-04-16 16:54:34,464 - src.data_sources.akshare - INFO - 股票 301332 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '德尔玛', 'exists': True}
2025-04-16 16:54:34,464 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301333 -> 输出 301333
2025-04-16 16:54:34,465 - src.data_sources.akshare - INFO - 股票 301333 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '诺思格', 'exists': True}
2025-04-16 16:54:34,465 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301335 -> 输出 301335
2025-04-16 16:54:34,466 - src.data_sources.akshare - INFO - 股票 301335 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '天元宠物', 'exists': True}
2025-04-16 16:54:34,466 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301336 -> 输出 301336
2025-04-16 16:54:34,467 - src.data_sources.akshare - INFO - 股票 301336 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '趣睡科技', 'exists': True}
2025-04-16 16:54:34,467 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301337 -> 输出 301337
2025-04-16 16:54:34,468 - src.data_sources.akshare - INFO - 股票 301337 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '亚华电子', 'exists': True}
2025-04-16 16:54:34,468 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301338 -> 输出 301338
2025-04-16 16:54:34,469 - src.data_sources.akshare - INFO - 股票 301338 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '凯格精机', 'exists': True}
2025-04-16 16:54:34,469 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301339 -> 输出 301339
2025-04-16 16:54:34,469 - src.data_sources.akshare - INFO - 股票 301339 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '通行宝', 'exists': True}
2025-04-16 16:54:34,470 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301345 -> 输出 301345
2025-04-16 16:54:34,471 - src.data_sources.akshare - INFO - 股票 301345 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '涛涛车业', 'exists': True}
2025-04-16 16:54:34,471 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301348 -> 输出 301348
2025-04-16 16:54:34,472 - src.data_sources.akshare - INFO - 股票 301348 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '蓝箭电子', 'exists': True}
2025-04-16 16:54:34,472 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301349 -> 输出 301349
2025-04-16 16:54:34,473 - src.data_sources.akshare - INFO - 股票 301349 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '信德新材', 'exists': True}
2025-04-16 16:54:34,473 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301353 -> 输出 301353
2025-04-16 16:54:34,474 - src.data_sources.akshare - INFO - 股票 301353 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '普莱得', 'exists': True}
2025-04-16 16:54:34,474 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301355 -> 输出 301355
2025-04-16 16:54:34,475 - src.data_sources.akshare - INFO - 股票 301355 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '南王科技', 'exists': True}
2025-04-16 16:54:34,475 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301356 -> 输出 301356
2025-04-16 16:54:34,476 - src.data_sources.akshare - INFO - 股票 301356 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '天振股份', 'exists': True}
2025-04-16 16:54:34,476 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301357 -> 输出 301357
2025-04-16 16:54:34,477 - src.data_sources.akshare - INFO - 股票 301357 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '北方长龙', 'exists': True}
2025-04-16 16:54:34,477 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301358 -> 输出 301358
2025-04-16 16:54:34,478 - src.data_sources.akshare - INFO - 股票 301358 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '湖南裕能', 'exists': True}
2025-04-16 16:54:34,479 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301359 -> 输出 301359
2025-04-16 16:54:34,479 - src.data_sources.akshare - INFO - 股票 301359 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '东南电子', 'exists': True}
2025-04-16 16:54:34,480 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301360 -> 输出 301360
2025-04-16 16:54:34,481 - src.data_sources.akshare - INFO - 股票 301360 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '荣旗科技', 'exists': True}
2025-04-16 16:54:34,481 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301361 -> 输出 301361
2025-04-16 16:54:34,482 - src.data_sources.akshare - INFO - 股票 301361 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '众智科技', 'exists': True}
2025-04-16 16:54:34,482 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301362 -> 输出 301362
2025-04-16 16:54:34,483 - src.data_sources.akshare - INFO - 股票 301362 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '民爆光电', 'exists': True}
2025-04-16 16:54:34,483 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301363 -> 输出 301363
2025-04-16 16:54:34,484 - src.data_sources.akshare - INFO - 股票 301363 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '美好医疗', 'exists': True}
2025-04-16 16:54:34,484 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301365 -> 输出 301365
2025-04-16 16:54:34,485 - src.data_sources.akshare - INFO - 股票 301365 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '矩阵股份', 'exists': True}
2025-04-16 16:54:34,486 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301366 -> 输出 301366
2025-04-16 16:54:34,486 - src.data_sources.akshare - INFO - 股票 301366 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '一博科技', 'exists': True}
2025-04-16 16:54:34,487 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301367 -> 输出 301367
2025-04-16 16:54:34,487 - src.data_sources.akshare - INFO - 股票 301367 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '怡和嘉业', 'exists': True}
2025-04-16 16:54:34,488 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301368 -> 输出 301368
2025-04-16 16:54:34,488 - src.data_sources.akshare - INFO - 股票 301368 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '丰立智能', 'exists': True}
2025-04-16 16:54:34,489 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301369 -> 输出 301369
2025-04-16 16:54:34,489 - src.data_sources.akshare - INFO - 股票 301369 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '联动科技', 'exists': True}
2025-04-16 16:54:34,490 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301370 -> 输出 301370
2025-04-16 16:54:34,490 - src.data_sources.akshare - INFO - 股票 301370 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '国科恒泰', 'exists': True}
2025-04-16 16:54:34,491 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301371 -> 输出 301371
2025-04-16 16:54:34,491 - src.data_sources.akshare - INFO - 股票 301371 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '敷尔佳', 'exists': True}
2025-04-16 16:54:34,492 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301372 -> 输出 301372
2025-04-16 16:54:34,492 - src.data_sources.akshare - INFO - 股票 301372 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '科净源', 'exists': True}
2025-04-16 16:54:34,493 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301373 -> 输出 301373
2025-04-16 16:54:34,493 - src.data_sources.akshare - INFO - 股票 301373 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '凌玮科技', 'exists': True}
2025-04-16 16:54:34,493 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301376 -> 输出 301376
2025-04-16 16:54:34,494 - src.data_sources.akshare - INFO - 股票 301376 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '致欧科技', 'exists': True}
2025-04-16 16:54:34,494 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301377 -> 输出 301377
2025-04-16 16:54:34,495 - src.data_sources.akshare - INFO - 股票 301377 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '鼎泰高科', 'exists': True}
2025-04-16 16:54:34,495 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301378 -> 输出 301378
2025-04-16 16:54:34,496 - src.data_sources.akshare - INFO - 股票 301378 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '通达海', 'exists': True}
2025-04-16 16:54:34,497 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301379 -> 输出 301379
2025-04-16 16:54:34,498 - src.data_sources.akshare - INFO - 股票 301379 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '天山电子', 'exists': True}
2025-04-16 16:54:34,498 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301380 -> 输出 301380
2025-04-16 16:54:34,499 - src.data_sources.akshare - INFO - 股票 301380 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '挖金客', 'exists': True}
2025-04-16 16:54:34,499 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301381 -> 输出 301381
2025-04-16 16:54:34,500 - src.data_sources.akshare - INFO - 股票 301381 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '赛维时代', 'exists': True}
2025-04-16 16:54:34,500 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301382 -> 输出 301382
2025-04-16 16:54:34,500 - src.data_sources.akshare - INFO - 股票 301382 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '蜂助手', 'exists': True}
2025-04-16 16:54:34,501 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301383 -> 输出 301383
2025-04-16 16:54:34,501 - src.data_sources.akshare - INFO - 股票 301383 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '天键股份', 'exists': True}
2025-04-16 16:54:34,502 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301386 -> 输出 301386
2025-04-16 16:54:34,502 - src.data_sources.akshare - INFO - 股票 301386 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '未来电器', 'exists': True}
2025-04-16 16:54:34,503 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301387 -> 输出 301387
2025-04-16 16:54:34,503 - src.data_sources.akshare - INFO - 股票 301387 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '光大同创', 'exists': True}
2025-04-16 16:54:34,504 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301388 -> 输出 301388
2025-04-16 16:54:34,505 - src.data_sources.akshare - INFO - 股票 301388 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '欣灵电气', 'exists': True}
2025-04-16 16:54:34,505 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301389 -> 输出 301389
2025-04-16 16:54:34,506 - src.data_sources.akshare - INFO - 股票 301389 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '隆扬电子', 'exists': True}
2025-04-16 16:54:34,506 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301390 -> 输出 301390
2025-04-16 16:54:34,507 - src.data_sources.akshare - INFO - 股票 301390 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '经纬股份', 'exists': True}
2025-04-16 16:54:34,507 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301391 -> 输出 301391
2025-04-16 16:54:34,508 - src.data_sources.akshare - INFO - 股票 301391 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '卡莱特', 'exists': True}
2025-04-16 16:54:34,508 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301392 -> 输出 301392
2025-04-16 16:54:34,509 - src.data_sources.akshare - INFO - 股票 301392 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '汇成真空', 'exists': True}
2025-04-16 16:54:34,509 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301393 -> 输出 301393
2025-04-16 16:54:34,510 - src.data_sources.akshare - INFO - 股票 301393 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '昊帆生物', 'exists': True}
2025-04-16 16:54:34,510 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301395 -> 输出 301395
2025-04-16 16:54:34,510 - src.data_sources.akshare - INFO - 股票 301395 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '仁信新材', 'exists': True}
2025-04-16 16:54:34,511 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301396 -> 输出 301396
2025-04-16 16:54:34,511 - src.data_sources.akshare - INFO - 股票 301396 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '宏景科技', 'exists': True}
2025-04-16 16:54:34,512 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301397 -> 输出 301397
2025-04-16 16:54:34,512 - src.data_sources.akshare - INFO - 股票 301397 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '溯联股份', 'exists': True}
2025-04-16 16:54:34,513 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301398 -> 输出 301398
2025-04-16 16:54:34,514 - src.data_sources.akshare - INFO - 股票 301398 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '星源卓镁', 'exists': True}
2025-04-16 16:54:34,514 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301399 -> 输出 301399
2025-04-16 16:54:34,515 - src.data_sources.akshare - INFO - 股票 301399 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '英特科技', 'exists': True}
2025-04-16 16:54:34,515 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301408 -> 输出 301408
2025-04-16 16:54:34,516 - src.data_sources.akshare - INFO - 股票 301408 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华人健康', 'exists': True}
2025-04-16 16:54:34,516 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301413 -> 输出 301413
2025-04-16 16:54:34,516 - src.data_sources.akshare - INFO - 股票 301413 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '安培龙', 'exists': True}
2025-04-16 16:54:34,517 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301418 -> 输出 301418
2025-04-16 16:54:34,517 - src.data_sources.akshare - INFO - 股票 301418 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '协昌科技', 'exists': True}
2025-04-16 16:54:34,518 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301419 -> 输出 301419
2025-04-16 16:54:34,518 - src.data_sources.akshare - INFO - 股票 301419 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '阿莱德', 'exists': True}
2025-04-16 16:54:34,518 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301421 -> 输出 301421
2025-04-16 16:54:34,519 - src.data_sources.akshare - INFO - 股票 301421 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '波长光电', 'exists': True}
2025-04-16 16:54:34,519 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301428 -> 输出 301428
2025-04-16 16:54:34,520 - src.data_sources.akshare - INFO - 股票 301428 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '世纪恒通', 'exists': True}
2025-04-16 16:54:34,520 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301429 -> 输出 301429
2025-04-16 16:54:34,521 - src.data_sources.akshare - INFO - 股票 301429 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '森泰股份', 'exists': True}
2025-04-16 16:54:34,521 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301439 -> 输出 301439
2025-04-16 16:54:34,522 - src.data_sources.akshare - INFO - 股票 301439 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '泓淋电力', 'exists': True}
2025-04-16 16:54:34,522 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301446 -> 输出 301446
2025-04-16 16:54:34,523 - src.data_sources.akshare - INFO - 股票 301446 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '福事特', 'exists': True}
2025-04-16 16:54:34,523 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301448 -> 输出 301448
2025-04-16 16:54:34,524 - src.data_sources.akshare - INFO - 股票 301448 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '开创电气', 'exists': True}
2025-04-16 16:54:34,524 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301456 -> 输出 301456
2025-04-16 16:54:34,525 - src.data_sources.akshare - INFO - 股票 301456 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '盘古智能', 'exists': True}
2025-04-16 16:54:34,525 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301458 -> 输出 301458
2025-04-16 16:54:34,525 - src.data_sources.akshare - INFO - 股票 301458 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '钧崴电子', 'exists': True}
2025-04-16 16:54:34,526 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301459 -> 输出 301459
2025-04-16 16:54:34,526 - src.data_sources.akshare - INFO - 股票 301459 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '丰茂股份', 'exists': True}
2025-04-16 16:54:34,527 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301468 -> 输出 301468
2025-04-16 16:54:34,527 - src.data_sources.akshare - INFO - 股票 301468 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '博盈特焊', 'exists': True}
2025-04-16 16:54:34,527 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301469 -> 输出 301469
2025-04-16 16:54:34,528 - src.data_sources.akshare - INFO - 股票 301469 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '恒达新材', 'exists': True}
2025-04-16 16:54:34,528 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301479 -> 输出 301479
2025-04-16 16:54:34,529 - src.data_sources.akshare - INFO - 股票 301479 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '弘景光电', 'exists': True}
2025-04-16 16:54:34,530 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301486 -> 输出 301486
2025-04-16 16:54:34,530 - src.data_sources.akshare - INFO - 股票 301486 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '致尚科技', 'exists': True}
2025-04-16 16:54:34,531 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301487 -> 输出 301487
2025-04-16 16:54:34,531 - src.data_sources.akshare - INFO - 股票 301487 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '盟固利', 'exists': True}
2025-04-16 16:54:34,532 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301488 -> 输出 301488
2025-04-16 16:54:34,532 - src.data_sources.akshare - INFO - 股票 301488 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '豪恩汽电', 'exists': True}
2025-04-16 16:54:34,533 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301489 -> 输出 301489
2025-04-16 16:54:34,533 - src.data_sources.akshare - INFO - 股票 301489 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '思泉新材', 'exists': True}
2025-04-16 16:54:34,534 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301498 -> 输出 301498
2025-04-16 16:54:34,534 - src.data_sources.akshare - INFO - 股票 301498 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '乖宝宠物', 'exists': True}
2025-04-16 16:54:34,534 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301499 -> 输出 301499
2025-04-16 16:54:34,535 - src.data_sources.akshare - INFO - 股票 301499 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '维科精密', 'exists': True}
2025-04-16 16:54:34,535 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301500 -> 输出 301500
2025-04-16 16:54:34,536 - src.data_sources.akshare - INFO - 股票 301500 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '飞南资源', 'exists': True}
2025-04-16 16:54:34,536 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301501 -> 输出 301501
2025-04-16 16:54:34,537 - src.data_sources.akshare - INFO - 股票 301501 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '恒鑫生活', 'exists': True}
2025-04-16 16:54:34,538 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301502 -> 输出 301502
2025-04-16 16:54:34,539 - src.data_sources.akshare - INFO - 股票 301502 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '华阳智能', 'exists': True}
2025-04-16 16:54:34,539 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301503 -> 输出 301503
2025-04-16 16:54:34,540 - src.data_sources.akshare - INFO - 股票 301503 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '智迪科技', 'exists': True}
2025-04-16 16:54:34,540 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301505 -> 输出 301505
2025-04-16 16:54:34,541 - src.data_sources.akshare - INFO - 股票 301505 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '苏州规划', 'exists': True}
2025-04-16 16:54:34,542 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301507 -> 输出 301507
2025-04-16 16:54:34,543 - src.data_sources.akshare - INFO - 股票 301507 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '民生健康', 'exists': True}
2025-04-16 16:54:34,543 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301508 -> 输出 301508
2025-04-16 16:54:34,544 - src.data_sources.akshare - INFO - 股票 301508 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中机认检', 'exists': True}
2025-04-16 16:54:34,544 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301509 -> 输出 301509
2025-04-16 16:54:34,545 - src.data_sources.akshare - INFO - 股票 301509 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '金凯生科', 'exists': True}
2025-04-16 16:54:34,545 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301510 -> 输出 301510
2025-04-16 16:54:34,546 - src.data_sources.akshare - INFO - 股票 301510 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '固高科技', 'exists': True}
2025-04-16 16:54:34,546 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301511 -> 输出 301511
2025-04-16 16:54:34,547 - src.data_sources.akshare - INFO - 股票 301511 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '德福科技', 'exists': True}
2025-04-16 16:54:34,548 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301512 -> 输出 301512
2025-04-16 16:54:34,549 - src.data_sources.akshare - INFO - 股票 301512 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '智信精密', 'exists': True}
2025-04-16 16:54:34,549 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301515 -> 输出 301515
2025-04-16 16:54:34,550 - src.data_sources.akshare - INFO - 股票 301515 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '港通医疗', 'exists': True}
2025-04-16 16:54:34,550 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301516 -> 输出 301516
2025-04-16 16:54:34,550 - src.data_sources.akshare - INFO - 股票 301516 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中远通', 'exists': True}
2025-04-16 16:54:34,551 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301517 -> 输出 301517
2025-04-16 16:54:34,551 - src.data_sources.akshare - INFO - 股票 301517 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '陕西华达', 'exists': True}
2025-04-16 16:54:34,552 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301518 -> 输出 301518
2025-04-16 16:54:34,552 - src.data_sources.akshare - INFO - 股票 301518 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '长华化学', 'exists': True}
2025-04-16 16:54:34,552 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301519 -> 输出 301519
2025-04-16 16:54:34,553 - src.data_sources.akshare - INFO - 股票 301519 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '舜禹股份', 'exists': True}
2025-04-16 16:54:34,553 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301520 -> 输出 301520
2025-04-16 16:54:34,554 - src.data_sources.akshare - INFO - 股票 301520 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '万邦医药', 'exists': True}
2025-04-16 16:54:34,555 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301522 -> 输出 301522
2025-04-16 16:54:34,556 - src.data_sources.akshare - INFO - 股票 301522 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '上大股份', 'exists': True}
2025-04-16 16:54:34,556 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301525 -> 输出 301525
2025-04-16 16:54:34,556 - src.data_sources.akshare - INFO - 股票 301525 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '儒竞科技', 'exists': True}
2025-04-16 16:54:34,557 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301526 -> 输出 301526
2025-04-16 16:54:34,557 - src.data_sources.akshare - INFO - 股票 301526 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '国际复材', 'exists': True}
2025-04-16 16:54:34,558 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301528 -> 输出 301528
2025-04-16 16:54:34,558 - src.data_sources.akshare - INFO - 股票 301528 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '多浦乐', 'exists': True}
2025-04-16 16:54:34,559 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301529 -> 输出 301529
2025-04-16 16:54:34,559 - src.data_sources.akshare - INFO - 股票 301529 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '福赛科技', 'exists': True}
2025-04-16 16:54:34,559 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301533 -> 输出 301533
2025-04-16 16:54:34,560 - src.data_sources.akshare - INFO - 股票 301533 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '威马农机', 'exists': True}
2025-04-16 16:54:34,560 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301535 -> 输出 301535
2025-04-16 16:54:34,561 - src.data_sources.akshare - INFO - 股票 301535 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '浙江华远', 'exists': True}
2025-04-16 16:54:34,561 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301536 -> 输出 301536
2025-04-16 16:54:34,562 - src.data_sources.akshare - INFO - 股票 301536 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '星宸科技', 'exists': True}
2025-04-16 16:54:34,563 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301538 -> 输出 301538
2025-04-16 16:54:34,563 - src.data_sources.akshare - INFO - 股票 301538 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '骏鼎达', 'exists': True}
2025-04-16 16:54:34,564 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301539 -> 输出 301539
2025-04-16 16:54:34,564 - src.data_sources.akshare - INFO - 股票 301539 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '宏鑫科技', 'exists': True}
2025-04-16 16:54:34,565 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301548 -> 输出 301548
2025-04-16 16:54:34,565 - src.data_sources.akshare - INFO - 股票 301548 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '崇德科技', 'exists': True}
2025-04-16 16:54:34,566 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301550 -> 输出 301550
2025-04-16 16:54:34,566 - src.data_sources.akshare - INFO - 股票 301550 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '斯菱股份', 'exists': True}
2025-04-16 16:54:34,567 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301551 -> 输出 301551
2025-04-16 16:54:34,567 - src.data_sources.akshare - INFO - 股票 301551 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '无线传媒', 'exists': True}
2025-04-16 16:54:34,567 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301552 -> 输出 301552
2025-04-16 16:54:34,568 - src.data_sources.akshare - INFO - 股票 301552 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '科力装备', 'exists': True}
2025-04-16 16:54:34,568 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301555 -> 输出 301555
2025-04-16 16:54:34,569 - src.data_sources.akshare - INFO - 股票 301555 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '惠柏新材', 'exists': True}
2025-04-16 16:54:34,569 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301556 -> 输出 301556
2025-04-16 16:54:34,570 - src.data_sources.akshare - INFO - 股票 301556 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '托普云农', 'exists': True}
2025-04-16 16:54:34,570 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301557 -> 输出 301557
2025-04-16 16:54:34,571 - src.data_sources.akshare - INFO - 股票 301557 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '常友科技', 'exists': True}
2025-04-16 16:54:34,571 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301558 -> 输出 301558
2025-04-16 16:54:34,572 - src.data_sources.akshare - INFO - 股票 301558 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '三态股份', 'exists': True}
2025-04-16 16:54:34,572 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301559 -> 输出 301559
2025-04-16 16:54:34,573 - src.data_sources.akshare - INFO - 股票 301559 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中集环科', 'exists': True}
2025-04-16 16:54:34,573 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301565 -> 输出 301565
2025-04-16 16:54:34,574 - src.data_sources.akshare - INFO - 股票 301565 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中仑新材', 'exists': True}
2025-04-16 16:54:34,574 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301566 -> 输出 301566
2025-04-16 16:54:34,575 - src.data_sources.akshare - INFO - 股票 301566 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '达利凯普', 'exists': True}
2025-04-16 16:54:34,575 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301567 -> 输出 301567
2025-04-16 16:54:34,576 - src.data_sources.akshare - INFO - 股票 301567 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '贝隆精密', 'exists': True}
2025-04-16 16:54:34,576 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301568 -> 输出 301568
2025-04-16 16:54:34,577 - src.data_sources.akshare - INFO - 股票 301568 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '思泰克', 'exists': True}
2025-04-16 16:54:34,577 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301571 -> 输出 301571
2025-04-16 16:54:34,578 - src.data_sources.akshare - INFO - 股票 301571 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '国科天成', 'exists': True}
2025-04-16 16:54:34,578 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301577 -> 输出 301577
2025-04-16 16:54:34,579 - src.data_sources.akshare - INFO - 股票 301577 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '美信科技', 'exists': True}
2025-04-16 16:54:34,579 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301578 -> 输出 301578
2025-04-16 16:54:34,580 - src.data_sources.akshare - INFO - 股票 301578 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '辰奕智能', 'exists': True}
2025-04-16 16:54:34,580 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301580 -> 输出 301580
2025-04-16 16:54:34,581 - src.data_sources.akshare - INFO - 股票 301580 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '爱迪特', 'exists': True}
2025-04-16 16:54:34,582 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301581 -> 输出 301581
2025-04-16 16:54:34,582 - src.data_sources.akshare - INFO - 股票 301581 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '黄山谷捷', 'exists': True}
2025-04-16 16:54:34,583 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301585 -> 输出 301585
2025-04-16 16:54:34,583 - src.data_sources.akshare - INFO - 股票 301585 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '蓝宇股份', 'exists': True}
2025-04-16 16:54:34,584 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301586 -> 输出 301586
2025-04-16 16:54:34,584 - src.data_sources.akshare - INFO - 股票 301586 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '佳力奇', 'exists': True}
2025-04-16 16:54:34,584 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301587 -> 输出 301587
2025-04-16 16:54:34,585 - src.data_sources.akshare - INFO - 股票 301587 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中瑞股份', 'exists': True}
2025-04-16 16:54:34,585 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301588 -> 输出 301588
2025-04-16 16:54:34,586 - src.data_sources.akshare - INFO - 股票 301588 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '美新科技', 'exists': True}
2025-04-16 16:54:34,586 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301589 -> 输出 301589
2025-04-16 16:54:34,587 - src.data_sources.akshare - INFO - 股票 301589 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '诺瓦星云', 'exists': True}
2025-04-16 16:54:34,587 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301591 -> 输出 301591
2025-04-16 16:54:34,588 - src.data_sources.akshare - INFO - 股票 301591 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '肯特股份', 'exists': True}
2025-04-16 16:54:34,588 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301592 -> 输出 301592
2025-04-16 16:54:34,589 - src.data_sources.akshare - INFO - 股票 301592 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '六九一二', 'exists': True}
2025-04-16 16:54:34,589 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301596 -> 输出 301596
2025-04-16 16:54:34,590 - src.data_sources.akshare - INFO - 股票 301596 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '瑞迪智驱', 'exists': True}
2025-04-16 16:54:34,590 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301598 -> 输出 301598
2025-04-16 16:54:34,591 - src.data_sources.akshare - INFO - 股票 301598 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '博科测试', 'exists': True}
2025-04-16 16:54:34,591 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301600 -> 输出 301600
2025-04-16 16:54:34,592 - src.data_sources.akshare - INFO - 股票 301600 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '慧翰股份', 'exists': True}
2025-04-16 16:54:34,592 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301601 -> 输出 301601
2025-04-16 16:54:34,592 - src.data_sources.akshare - INFO - 股票 301601 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '惠通科技', 'exists': True}
2025-04-16 16:54:34,593 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301602 -> 输出 301602
2025-04-16 16:54:34,593 - src.data_sources.akshare - INFO - 股票 301602 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '超研股份', 'exists': True}
2025-04-16 16:54:34,594 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301603 -> 输出 301603
2025-04-16 16:54:34,594 - src.data_sources.akshare - INFO - 股票 301603 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '乔锋智能', 'exists': True}
2025-04-16 16:54:34,594 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301606 -> 输出 301606
2025-04-16 16:54:34,595 - src.data_sources.akshare - INFO - 股票 301606 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '绿联科技', 'exists': True}
2025-04-16 16:54:34,596 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301607 -> 输出 301607
2025-04-16 16:54:34,597 - src.data_sources.akshare - INFO - 股票 301607 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '富特科技', 'exists': True}
2025-04-16 16:54:34,597 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301608 -> 输出 301608
2025-04-16 16:54:34,598 - src.data_sources.akshare - INFO - 股票 301608 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '博实结', 'exists': True}
2025-04-16 16:54:34,598 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301611 -> 输出 301611
2025-04-16 16:54:34,599 - src.data_sources.akshare - INFO - 股票 301611 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '珂玛科技', 'exists': True}
2025-04-16 16:54:34,600 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301613 -> 输出 301613
2025-04-16 16:54:34,600 - src.data_sources.akshare - INFO - 股票 301613 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '新铝时代', 'exists': True}
2025-04-16 16:54:34,601 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301616 -> 输出 301616
2025-04-16 16:54:34,601 - src.data_sources.akshare - INFO - 股票 301616 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '浙江华业', 'exists': True}
2025-04-16 16:54:34,602 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301617 -> 输出 301617
2025-04-16 16:54:34,602 - src.data_sources.akshare - INFO - 股票 301617 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '博苑股份', 'exists': True}
2025-04-16 16:54:34,603 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301618 -> 输出 301618
2025-04-16 16:54:34,603 - src.data_sources.akshare - INFO - 股票 301618 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '长联科技', 'exists': True}
2025-04-16 16:54:34,604 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301622 -> 输出 301622
2025-04-16 16:54:34,604 - src.data_sources.akshare - INFO - 股票 301622 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '英思特', 'exists': True}
2025-04-16 16:54:34,605 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301626 -> 输出 301626
2025-04-16 16:54:34,606 - src.data_sources.akshare - INFO - 股票 301626 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '苏州天脉', 'exists': True}
2025-04-16 16:54:34,606 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301628 -> 输出 301628
2025-04-16 16:54:34,607 - src.data_sources.akshare - INFO - 股票 301628 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '强达电路', 'exists': True}
2025-04-16 16:54:34,607 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301629 -> 输出 301629
2025-04-16 16:54:34,608 - src.data_sources.akshare - INFO - 股票 301629 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '矽电股份', 'exists': True}
2025-04-16 16:54:34,608 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301631 -> 输出 301631
2025-04-16 16:54:34,609 - src.data_sources.akshare - INFO - 股票 301631 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '壹连科技', 'exists': True}
2025-04-16 16:54:34,609 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301633 -> 输出 301633
2025-04-16 16:54:34,610 - src.data_sources.akshare - INFO - 股票 301633 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '港迪技术', 'exists': True}
2025-04-16 16:54:34,610 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301658 -> 输出 301658
2025-04-16 16:54:34,611 - src.data_sources.akshare - INFO - 股票 301658 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '首航新能', 'exists': True}
2025-04-16 16:54:34,611 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 301665 -> 输出 301665
2025-04-16 16:54:34,612 - src.data_sources.akshare - INFO - 股票 301665 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': 'C泰禾股份', 'exists': True}
2025-04-16 16:54:34,612 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 302132 -> 输出 302132
2025-04-16 16:54:34,613 - src.data_sources.akshare - INFO - 股票 302132 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中航成飞', 'exists': True}
2025-04-16 16:54:34,613 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600010 -> 输出 600010
2025-04-16 16:54:34,614 - src.data_sources.akshare - INFO - 股票 600010 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '包钢股份', 'exists': True}
2025-04-16 16:54:34,615 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600011 -> 输出 600011
2025-04-16 16:54:34,615 - src.data_sources.akshare - INFO - 股票 600011 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华能国际', 'exists': True}
2025-04-16 16:54:34,616 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600012 -> 输出 600012
2025-04-16 16:54:34,617 - src.data_sources.akshare - INFO - 股票 600012 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '皖通高速', 'exists': True}
2025-04-16 16:54:34,617 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600015 -> 输出 600015
2025-04-16 16:54:34,618 - src.data_sources.akshare - INFO - 股票 600015 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华夏银行', 'exists': True}
2025-04-16 16:54:34,618 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600016 -> 输出 600016
2025-04-16 16:54:34,619 - src.data_sources.akshare - INFO - 股票 600016 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '民生银行', 'exists': True}
2025-04-16 16:54:34,619 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600017 -> 输出 600017
2025-04-16 16:54:34,620 - src.data_sources.akshare - INFO - 股票 600017 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '日照港', 'exists': True}
2025-04-16 16:54:34,621 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600018 -> 输出 600018
2025-04-16 16:54:34,621 - src.data_sources.akshare - INFO - 股票 600018 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上港集团', 'exists': True}
2025-04-16 16:54:34,622 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600019 -> 输出 600019
2025-04-16 16:54:34,622 - src.data_sources.akshare - INFO - 股票 600019 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '宝钢股份', 'exists': True}
2025-04-16 16:54:34,623 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600021 -> 输出 600021
2025-04-16 16:54:34,623 - src.data_sources.akshare - INFO - 股票 600021 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海电力', 'exists': True}
2025-04-16 16:54:34,624 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600031 -> 输出 600031
2025-04-16 16:54:34,624 - src.data_sources.akshare - INFO - 股票 600031 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '三一重工', 'exists': True}
2025-04-16 16:54:34,625 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600051 -> 输出 600051
2025-04-16 16:54:34,625 - src.data_sources.akshare - INFO - 股票 600051 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '宁波联合', 'exists': True}
2025-04-16 16:54:34,625 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600061 -> 输出 600061
2025-04-16 16:54:34,626 - src.data_sources.akshare - INFO - 股票 600061 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国投资本', 'exists': True}
2025-04-16 16:54:34,626 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600071 -> 输出 600071
2025-04-16 16:54:34,627 - src.data_sources.akshare - INFO - 股票 600071 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '凤凰光学', 'exists': True}
2025-04-16 16:54:34,627 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600081 -> 输出 600081
2025-04-16 16:54:34,628 - src.data_sources.akshare - INFO - 股票 600081 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东风科技', 'exists': True}
2025-04-16 16:54:34,628 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600100 -> 输出 600100
2025-04-16 16:54:34,629 - src.data_sources.akshare - INFO - 股票 600100 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '同方股份', 'exists': True}
2025-04-16 16:54:34,630 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600101 -> 输出 600101
2025-04-16 16:54:34,630 - src.data_sources.akshare - INFO - 股票 600101 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '明星电力', 'exists': True}
2025-04-16 16:54:34,631 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600103 -> 输出 600103
2025-04-16 16:54:34,631 - src.data_sources.akshare - INFO - 股票 600103 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '青山纸业', 'exists': True}
2025-04-16 16:54:34,632 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600104 -> 输出 600104
2025-04-16 16:54:34,632 - src.data_sources.akshare - INFO - 股票 600104 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上汽集团', 'exists': True}
2025-04-16 16:54:34,632 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600105 -> 输出 600105
2025-04-16 16:54:34,633 - src.data_sources.akshare - INFO - 股票 600105 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永鼎股份', 'exists': True}
2025-04-16 16:54:34,633 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600106 -> 输出 600106
2025-04-16 16:54:34,634 - src.data_sources.akshare - INFO - 股票 600106 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '重庆路桥', 'exists': True}
2025-04-16 16:54:34,634 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600107 -> 输出 600107
2025-04-16 16:54:34,635 - src.data_sources.akshare - INFO - 股票 600107 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '美尔雅', 'exists': True}
2025-04-16 16:54:34,635 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600108 -> 输出 600108
2025-04-16 16:54:34,636 - src.data_sources.akshare - INFO - 股票 600108 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '亚盛集团', 'exists': True}
2025-04-16 16:54:34,636 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600109 -> 输出 600109
2025-04-16 16:54:34,637 - src.data_sources.akshare - INFO - 股票 600109 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国金证券', 'exists': True}
2025-04-16 16:54:34,637 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600110 -> 输出 600110
2025-04-16 16:54:34,638 - src.data_sources.akshare - INFO - 股票 600110 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '诺德股份', 'exists': True}
2025-04-16 16:54:34,638 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600111 -> 输出 600111
2025-04-16 16:54:34,639 - src.data_sources.akshare - INFO - 股票 600111 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '北方稀土', 'exists': True}
2025-04-16 16:54:34,639 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600113 -> 输出 600113
2025-04-16 16:54:34,639 - src.data_sources.akshare - INFO - 股票 600113 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '浙江东日', 'exists': True}
2025-04-16 16:54:34,640 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600114 -> 输出 600114
2025-04-16 16:54:34,640 - src.data_sources.akshare - INFO - 股票 600114 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东睦股份', 'exists': True}
2025-04-16 16:54:34,641 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600115 -> 输出 600115
2025-04-16 16:54:34,641 - src.data_sources.akshare - INFO - 股票 600115 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国东航', 'exists': True}
2025-04-16 16:54:34,642 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600116 -> 输出 600116
2025-04-16 16:54:34,642 - src.data_sources.akshare - INFO - 股票 600116 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '三峡水利', 'exists': True}
2025-04-16 16:54:34,642 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600117 -> 输出 600117
2025-04-16 16:54:34,643 - src.data_sources.akshare - INFO - 股票 600117 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '西宁特钢', 'exists': True}
2025-04-16 16:54:34,643 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600118 -> 输出 600118
2025-04-16 16:54:34,644 - src.data_sources.akshare - INFO - 股票 600118 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国卫星', 'exists': True}
2025-04-16 16:54:34,644 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600119 -> 输出 600119
2025-04-16 16:54:34,645 - src.data_sources.akshare - INFO - 股票 600119 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '长江投资', 'exists': True}
2025-04-16 16:54:34,645 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600120 -> 输出 600120
2025-04-16 16:54:34,646 - src.data_sources.akshare - INFO - 股票 600120 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '浙江东方', 'exists': True}
2025-04-16 16:54:34,647 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600121 -> 输出 600121
2025-04-16 16:54:34,647 - src.data_sources.akshare - INFO - 股票 600121 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '郑州煤电', 'exists': True}
2025-04-16 16:54:34,648 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600123 -> 输出 600123
2025-04-16 16:54:34,648 - src.data_sources.akshare - INFO - 股票 600123 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '兰花科创', 'exists': True}
2025-04-16 16:54:34,649 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600125 -> 输出 600125
2025-04-16 16:54:34,649 - src.data_sources.akshare - INFO - 股票 600125 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '铁龙物流', 'exists': True}
2025-04-16 16:54:34,650 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600126 -> 输出 600126
2025-04-16 16:54:34,650 - src.data_sources.akshare - INFO - 股票 600126 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '杭钢股份', 'exists': True}
2025-04-16 16:54:34,650 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600127 -> 输出 600127
2025-04-16 16:54:34,651 - src.data_sources.akshare - INFO - 股票 600127 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金健米业', 'exists': True}
2025-04-16 16:54:34,651 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600128 -> 输出 600128
2025-04-16 16:54:34,652 - src.data_sources.akshare - INFO - 股票 600128 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '苏豪弘业', 'exists': True}
2025-04-16 16:54:34,652 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600129 -> 输出 600129
2025-04-16 16:54:34,653 - src.data_sources.akshare - INFO - 股票 600129 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '太极集团', 'exists': True}
2025-04-16 16:54:34,653 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600130 -> 输出 600130
2025-04-16 16:54:34,654 - src.data_sources.akshare - INFO - 股票 600130 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '波导股份', 'exists': True}
2025-04-16 16:54:34,654 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600131 -> 输出 600131
2025-04-16 16:54:34,655 - src.data_sources.akshare - INFO - 股票 600131 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国网信通', 'exists': True}
2025-04-16 16:54:34,655 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600132 -> 输出 600132
2025-04-16 16:54:34,656 - src.data_sources.akshare - INFO - 股票 600132 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '重庆啤酒', 'exists': True}
2025-04-16 16:54:34,656 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600133 -> 输出 600133
2025-04-16 16:54:34,657 - src.data_sources.akshare - INFO - 股票 600133 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东湖高新', 'exists': True}
2025-04-16 16:54:34,657 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600135 -> 输出 600135
2025-04-16 16:54:34,658 - src.data_sources.akshare - INFO - 股票 600135 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '乐凯胶片', 'exists': True}
2025-04-16 16:54:34,658 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600136 -> 输出 600136
2025-04-16 16:54:34,659 - src.data_sources.akshare - INFO - 股票 600136 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': 'ST明诚', 'exists': True}
2025-04-16 16:54:34,659 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600137 -> 输出 600137
2025-04-16 16:54:34,660 - src.data_sources.akshare - INFO - 股票 600137 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '浪莎股份', 'exists': True}
2025-04-16 16:54:34,660 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600138 -> 输出 600138
2025-04-16 16:54:34,661 - src.data_sources.akshare - INFO - 股票 600138 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中青旅', 'exists': True}
2025-04-16 16:54:34,661 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600141 -> 输出 600141
2025-04-16 16:54:34,661 - src.data_sources.akshare - INFO - 股票 600141 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '兴发集团', 'exists': True}
2025-04-16 16:54:34,662 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600143 -> 输出 600143
2025-04-16 16:54:34,663 - src.data_sources.akshare - INFO - 股票 600143 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金发科技', 'exists': True}
2025-04-16 16:54:34,663 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600148 -> 输出 600148
2025-04-16 16:54:34,664 - src.data_sources.akshare - INFO - 股票 600148 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '长春一东', 'exists': True}
2025-04-16 16:54:34,664 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600149 -> 输出 600149
2025-04-16 16:54:34,665 - src.data_sources.akshare - INFO - 股票 600149 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '廊坊发展', 'exists': True}
2025-04-16 16:54:34,665 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600150 -> 输出 600150
2025-04-16 16:54:34,665 - src.data_sources.akshare - INFO - 股票 600150 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国船舶', 'exists': True}
2025-04-16 16:54:34,666 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600151 -> 输出 600151
2025-04-16 16:54:34,666 - src.data_sources.akshare - INFO - 股票 600151 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '航天机电', 'exists': True}
2025-04-16 16:54:34,667 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600152 -> 输出 600152
2025-04-16 16:54:34,667 - src.data_sources.akshare - INFO - 股票 600152 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '维科技术', 'exists': True}
2025-04-16 16:54:34,668 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600153 -> 输出 600153
2025-04-16 16:54:34,668 - src.data_sources.akshare - INFO - 股票 600153 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '建发股份', 'exists': True}
2025-04-16 16:54:34,669 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600155 -> 输出 600155
2025-04-16 16:54:34,669 - src.data_sources.akshare - INFO - 股票 600155 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华创云信', 'exists': True}
2025-04-16 16:54:34,669 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600156 -> 输出 600156
2025-04-16 16:54:34,670 - src.data_sources.akshare - INFO - 股票 600156 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华升股份', 'exists': True}
2025-04-16 16:54:34,670 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600157 -> 输出 600157
2025-04-16 16:54:34,672 - src.data_sources.akshare - INFO - 股票 600157 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永泰能源', 'exists': True}
2025-04-16 16:54:34,672 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600158 -> 输出 600158
2025-04-16 16:54:34,673 - src.data_sources.akshare - INFO - 股票 600158 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中体产业', 'exists': True}
2025-04-16 16:54:34,673 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600159 -> 输出 600159
2025-04-16 16:54:34,674 - src.data_sources.akshare - INFO - 股票 600159 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '大龙地产', 'exists': True}
2025-04-16 16:54:34,674 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600160 -> 输出 600160
2025-04-16 16:54:34,675 - src.data_sources.akshare - INFO - 股票 600160 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '巨化股份', 'exists': True}
2025-04-16 16:54:34,675 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600161 -> 输出 600161
2025-04-16 16:54:34,675 - src.data_sources.akshare - INFO - 股票 600161 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '天坛生物', 'exists': True}
2025-04-16 16:54:34,676 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600162 -> 输出 600162
2025-04-16 16:54:34,676 - src.data_sources.akshare - INFO - 股票 600162 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '香江控股', 'exists': True}
2025-04-16 16:54:34,677 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600163 -> 输出 600163
2025-04-16 16:54:34,677 - src.data_sources.akshare - INFO - 股票 600163 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中闽能源', 'exists': True}
2025-04-16 16:54:34,677 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600165 -> 输出 600165
2025-04-16 16:54:34,678 - src.data_sources.akshare - INFO - 股票 600165 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '*ST宁科', 'exists': True}
2025-04-16 16:54:34,678 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600166 -> 输出 600166
2025-04-16 16:54:34,679 - src.data_sources.akshare - INFO - 股票 600166 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '福田汽车', 'exists': True}
2025-04-16 16:54:34,680 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600167 -> 输出 600167
2025-04-16 16:54:34,680 - src.data_sources.akshare - INFO - 股票 600167 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '联美控股', 'exists': True}
2025-04-16 16:54:34,681 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600168 -> 输出 600168
2025-04-16 16:54:34,681 - src.data_sources.akshare - INFO - 股票 600168 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '武汉控股', 'exists': True}
2025-04-16 16:54:34,682 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600169 -> 输出 600169
2025-04-16 16:54:34,682 - src.data_sources.akshare - INFO - 股票 600169 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '太原重工', 'exists': True}
2025-04-16 16:54:34,682 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600170 -> 输出 600170
2025-04-16 16:54:34,683 - src.data_sources.akshare - INFO - 股票 600170 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海建工', 'exists': True}
2025-04-16 16:54:34,683 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600171 -> 输出 600171
2025-04-16 16:54:34,684 - src.data_sources.akshare - INFO - 股票 600171 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海贝岭', 'exists': True}
2025-04-16 16:54:34,685 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600172 -> 输出 600172
2025-04-16 16:54:34,685 - src.data_sources.akshare - INFO - 股票 600172 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '黄河旋风', 'exists': True}
2025-04-16 16:54:34,686 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600173 -> 输出 600173
2025-04-16 16:54:34,686 - src.data_sources.akshare - INFO - 股票 600173 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '卧龙地产', 'exists': True}
2025-04-16 16:54:34,686 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600176 -> 输出 600176
2025-04-16 16:54:34,687 - src.data_sources.akshare - INFO - 股票 600176 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国巨石', 'exists': True}
2025-04-16 16:54:34,688 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600177 -> 输出 600177
2025-04-16 16:54:34,689 - src.data_sources.akshare - INFO - 股票 600177 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '雅戈尔', 'exists': True}
2025-04-16 16:54:34,689 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600178 -> 输出 600178
2025-04-16 16:54:34,690 - src.data_sources.akshare - INFO - 股票 600178 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东安动力', 'exists': True}
2025-04-16 16:54:34,690 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600179 -> 输出 600179
2025-04-16 16:54:34,691 - src.data_sources.akshare - INFO - 股票 600179 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '安通控股', 'exists': True}
2025-04-16 16:54:34,691 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600180 -> 输出 600180
2025-04-16 16:54:34,692 - src.data_sources.akshare - INFO - 股票 600180 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '瑞茂通', 'exists': True}
2025-04-16 16:54:34,692 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600182 -> 输出 600182
2025-04-16 16:54:34,693 - src.data_sources.akshare - INFO - 股票 600182 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': 'S佳通', 'exists': True}
2025-04-16 16:54:34,693 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600183 -> 输出 600183
2025-04-16 16:54:34,694 - src.data_sources.akshare - INFO - 股票 600183 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '生益科技', 'exists': True}
2025-04-16 16:54:34,694 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600184 -> 输出 600184
2025-04-16 16:54:34,695 - src.data_sources.akshare - INFO - 股票 600184 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '光电股份', 'exists': True}
2025-04-16 16:54:34,695 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600185 -> 输出 600185
2025-04-16 16:54:34,696 - src.data_sources.akshare - INFO - 股票 600185 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '格力地产', 'exists': True}
2025-04-16 16:54:34,696 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600186 -> 输出 600186
2025-04-16 16:54:34,697 - src.data_sources.akshare - INFO - 股票 600186 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '莲花控股', 'exists': True}
2025-04-16 16:54:34,698 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600187 -> 输出 600187
2025-04-16 16:54:34,698 - src.data_sources.akshare - INFO - 股票 600187 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国中水务', 'exists': True}
2025-04-16 16:54:34,699 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600188 -> 输出 600188
2025-04-16 16:54:34,699 - src.data_sources.akshare - INFO - 股票 600188 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '兖矿能源', 'exists': True}
2025-04-16 16:54:34,700 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600189 -> 输出 600189
2025-04-16 16:54:34,700 - src.data_sources.akshare - INFO - 股票 600189 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '泉阳泉', 'exists': True}
2025-04-16 16:54:34,700 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600190 -> 输出 600190
2025-04-16 16:54:34,701 - src.data_sources.akshare - INFO - 股票 600190 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': 'ST锦港', 'exists': True}
2025-04-16 16:54:34,701 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600191 -> 输出 600191
2025-04-16 16:54:34,702 - src.data_sources.akshare - INFO - 股票 600191 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华资实业', 'exists': True}
2025-04-16 16:54:34,702 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600192 -> 输出 600192
2025-04-16 16:54:34,703 - src.data_sources.akshare - INFO - 股票 600192 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '长城电工', 'exists': True}
2025-04-16 16:54:34,703 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600193 -> 输出 600193
2025-04-16 16:54:34,705 - src.data_sources.akshare - INFO - 股票 600193 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '创兴资源', 'exists': True}
2025-04-16 16:54:34,705 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600195 -> 输出 600195
2025-04-16 16:54:34,706 - src.data_sources.akshare - INFO - 股票 600195 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中牧股份', 'exists': True}
2025-04-16 16:54:34,706 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600196 -> 输出 600196
2025-04-16 16:54:34,707 - src.data_sources.akshare - INFO - 股票 600196 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '复星医药', 'exists': True}
2025-04-16 16:54:34,708 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600197 -> 输出 600197
2025-04-16 16:54:34,708 - src.data_sources.akshare - INFO - 股票 600197 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '伊力特', 'exists': True}
2025-04-16 16:54:34,709 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600198 -> 输出 600198
2025-04-16 16:54:34,709 - src.data_sources.akshare - INFO - 股票 600198 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '大唐电信', 'exists': True}
2025-04-16 16:54:34,710 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600199 -> 输出 600199
2025-04-16 16:54:34,710 - src.data_sources.akshare - INFO - 股票 600199 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金种子酒', 'exists': True}
2025-04-16 16:54:34,711 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600201 -> 输出 600201
2025-04-16 16:54:34,711 - src.data_sources.akshare - INFO - 股票 600201 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '生物股份', 'exists': True}
2025-04-16 16:54:34,712 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600210 -> 输出 600210
2025-04-16 16:54:34,712 - src.data_sources.akshare - INFO - 股票 600210 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '紫江企业', 'exists': True}
2025-04-16 16:54:34,713 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600211 -> 输出 600211
2025-04-16 16:54:34,714 - src.data_sources.akshare - INFO - 股票 600211 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '西藏药业', 'exists': True}
2025-04-16 16:54:34,714 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600212 -> 输出 600212
2025-04-16 16:54:34,714 - src.data_sources.akshare - INFO - 股票 600212 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '绿能慧充', 'exists': True}
2025-04-16 16:54:34,715 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600215 -> 输出 600215
2025-04-16 16:54:34,715 - src.data_sources.akshare - INFO - 股票 600215 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '派斯林', 'exists': True}
2025-04-16 16:54:34,716 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600216 -> 输出 600216
2025-04-16 16:54:34,716 - src.data_sources.akshare - INFO - 股票 600216 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '浙江医药', 'exists': True}
2025-04-16 16:54:34,717 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600217 -> 输出 600217
2025-04-16 16:54:34,717 - src.data_sources.akshare - INFO - 股票 600217 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中再资环', 'exists': True}
2025-04-16 16:54:34,717 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600218 -> 输出 600218
2025-04-16 16:54:34,718 - src.data_sources.akshare - INFO - 股票 600218 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '全柴动力', 'exists': True}
2025-04-16 16:54:34,718 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600219 -> 输出 600219
2025-04-16 16:54:34,719 - src.data_sources.akshare - INFO - 股票 600219 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '南山铝业', 'exists': True}
2025-04-16 16:54:34,719 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600221 -> 输出 600221
2025-04-16 16:54:34,720 - src.data_sources.akshare - INFO - 股票 600221 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海航控股', 'exists': True}
2025-04-16 16:54:34,721 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600231 -> 输出 600231
2025-04-16 16:54:34,721 - src.data_sources.akshare - INFO - 股票 600231 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '凌钢股份', 'exists': True}
2025-04-16 16:54:34,722 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600241 -> 输出 600241
2025-04-16 16:54:34,722 - src.data_sources.akshare - INFO - 股票 600241 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '时代万恒', 'exists': True}
2025-04-16 16:54:34,723 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600251 -> 输出 600251
2025-04-16 16:54:34,723 - src.data_sources.akshare - INFO - 股票 600251 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '冠农股份', 'exists': True}
2025-04-16 16:54:34,724 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600261 -> 输出 600261
2025-04-16 16:54:34,724 - src.data_sources.akshare - INFO - 股票 600261 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '阳光照明', 'exists': True}
2025-04-16 16:54:34,725 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600271 -> 输出 600271
2025-04-16 16:54:34,725 - src.data_sources.akshare - INFO - 股票 600271 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '航天信息', 'exists': True}
2025-04-16 16:54:34,725 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600281 -> 输出 600281
2025-04-16 16:54:34,726 - src.data_sources.akshare - INFO - 股票 600281 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华阳新材', 'exists': True}
2025-04-16 16:54:34,726 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600301 -> 输出 600301
2025-04-16 16:54:34,727 - src.data_sources.akshare - INFO - 股票 600301 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华锡有色', 'exists': True}
2025-04-16 16:54:34,727 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600310 -> 输出 600310
2025-04-16 16:54:34,728 - src.data_sources.akshare - INFO - 股票 600310 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '广西能源', 'exists': True}
2025-04-16 16:54:34,728 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600312 -> 输出 600312
2025-04-16 16:54:34,729 - src.data_sources.akshare - INFO - 股票 600312 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '平高电气', 'exists': True}
2025-04-16 16:54:34,729 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600313 -> 输出 600313
2025-04-16 16:54:34,730 - src.data_sources.akshare - INFO - 股票 600313 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农发种业', 'exists': True}
2025-04-16 16:54:34,731 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600315 -> 输出 600315
2025-04-16 16:54:34,731 - src.data_sources.akshare - INFO - 股票 600315 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海家化', 'exists': True}
2025-04-16 16:54:34,732 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600316 -> 输出 600316
2025-04-16 16:54:34,732 - src.data_sources.akshare - INFO - 股票 600316 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '洪都航空', 'exists': True}
2025-04-16 16:54:34,733 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600318 -> 输出 600318
2025-04-16 16:54:34,733 - src.data_sources.akshare - INFO - 股票 600318 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '新力金融', 'exists': True}
2025-04-16 16:54:34,734 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600319 -> 输出 600319
2025-04-16 16:54:34,734 - src.data_sources.akshare - INFO - 股票 600319 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '亚星化学', 'exists': True}
2025-04-16 16:54:34,734 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600331 -> 输出 600331
2025-04-16 16:54:34,735 - src.data_sources.akshare - INFO - 股票 600331 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '宏达股份', 'exists': True}
2025-04-16 16:54:34,735 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600351 -> 输出 600351
2025-04-16 16:54:34,736 - src.data_sources.akshare - INFO - 股票 600351 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '亚宝药业', 'exists': True}
2025-04-16 16:54:34,736 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600361 -> 输出 600361
2025-04-16 16:54:34,737 - src.data_sources.akshare - INFO - 股票 600361 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '创新新材', 'exists': True}
2025-04-16 16:54:34,737 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600371 -> 输出 600371
2025-04-16 16:54:34,738 - src.data_sources.akshare - INFO - 股票 600371 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '万向德农', 'exists': True}
2025-04-16 16:54:34,738 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600381 -> 输出 600381
2025-04-16 16:54:34,739 - src.data_sources.akshare - INFO - 股票 600381 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': 'ST春天', 'exists': True}
2025-04-16 16:54:34,740 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600391 -> 输出 600391
2025-04-16 16:54:34,740 - src.data_sources.akshare - INFO - 股票 600391 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '航发科技', 'exists': True}
2025-04-16 16:54:34,741 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600410 -> 输出 600410
2025-04-16 16:54:34,741 - src.data_sources.akshare - INFO - 股票 600410 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华胜天成', 'exists': True}
2025-04-16 16:54:34,742 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600415 -> 输出 600415
2025-04-16 16:54:34,742 - src.data_sources.akshare - INFO - 股票 600415 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '小商品城', 'exists': True}
2025-04-16 16:54:34,743 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600416 -> 输出 600416
2025-04-16 16:54:34,743 - src.data_sources.akshare - INFO - 股票 600416 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '湘电股份', 'exists': True}
2025-04-16 16:54:34,744 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600418 -> 输出 600418
2025-04-16 16:54:34,744 - src.data_sources.akshare - INFO - 股票 600418 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '江淮汽车', 'exists': True}
2025-04-16 16:54:34,744 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600419 -> 输出 600419
2025-04-16 16:54:34,745 - src.data_sources.akshare - INFO - 股票 600419 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '天润乳业', 'exists': True}
2025-04-16 16:54:34,745 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600421 -> 输出 600421
2025-04-16 16:54:34,746 - src.data_sources.akshare - INFO - 股票 600421 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华嵘控股', 'exists': True}
2025-04-16 16:54:34,746 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600461 -> 输出 600461
2025-04-16 16:54:34,747 - src.data_sources.akshare - INFO - 股票 600461 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '洪城环境', 'exists': True}
2025-04-16 16:54:34,748 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600481 -> 输出 600481
2025-04-16 16:54:34,749 - src.data_sources.akshare - INFO - 股票 600481 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '双良节能', 'exists': True}
2025-04-16 16:54:34,749 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600491 -> 输出 600491
2025-04-16 16:54:34,750 - src.data_sources.akshare - INFO - 股票 600491 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '龙元建设', 'exists': True}
2025-04-16 16:54:34,750 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600501 -> 输出 600501
2025-04-16 16:54:34,751 - src.data_sources.akshare - INFO - 股票 600501 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '航天晨光', 'exists': True}
2025-04-16 16:54:34,751 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600510 -> 输出 600510
2025-04-16 16:54:34,751 - src.data_sources.akshare - INFO - 股票 600510 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '黑牡丹', 'exists': True}
2025-04-16 16:54:34,752 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600511 -> 输出 600511
2025-04-16 16:54:34,752 - src.data_sources.akshare - INFO - 股票 600511 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国药股份', 'exists': True}
2025-04-16 16:54:34,753 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600512 -> 输出 600512
2025-04-16 16:54:34,753 - src.data_sources.akshare - INFO - 股票 600512 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '腾达建设', 'exists': True}
2025-04-16 16:54:34,754 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600513 -> 输出 600513
2025-04-16 16:54:34,755 - src.data_sources.akshare - INFO - 股票 600513 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '联环药业', 'exists': True}
2025-04-16 16:54:34,755 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600515 -> 输出 600515
2025-04-16 16:54:34,756 - src.data_sources.akshare - INFO - 股票 600515 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海南机场', 'exists': True}
2025-04-16 16:54:34,756 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600516 -> 输出 600516
2025-04-16 16:54:34,757 - src.data_sources.akshare - INFO - 股票 600516 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '方大炭素', 'exists': True}
2025-04-16 16:54:34,757 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600517 -> 输出 600517
2025-04-16 16:54:34,758 - src.data_sources.akshare - INFO - 股票 600517 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国网英大', 'exists': True}
2025-04-16 16:54:34,758 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600518 -> 输出 600518
2025-04-16 16:54:34,758 - src.data_sources.akshare - INFO - 股票 600518 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '康美药业', 'exists': True}
2025-04-16 16:54:34,759 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 16:54:34,759 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 16:54:34,760 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600521 -> 输出 600521
2025-04-16 16:54:34,760 - src.data_sources.akshare - INFO - 股票 600521 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华海药业', 'exists': True}
2025-04-16 16:54:34,760 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600531 -> 输出 600531
2025-04-16 16:54:34,761 - src.data_sources.akshare - INFO - 股票 600531 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '豫光金铅', 'exists': True}
2025-04-16 16:54:34,761 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600551 -> 输出 600551
2025-04-16 16:54:34,762 - src.data_sources.akshare - INFO - 股票 600551 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '时代出版', 'exists': True}
2025-04-16 16:54:34,763 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600561 -> 输出 600561
2025-04-16 16:54:34,764 - src.data_sources.akshare - INFO - 股票 600561 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '江西长运', 'exists': True}
2025-04-16 16:54:34,764 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600571 -> 输出 600571
2025-04-16 16:54:34,765 - src.data_sources.akshare - INFO - 股票 600571 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '信雅达', 'exists': True}
2025-04-16 16:54:34,765 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600581 -> 输出 600581
2025-04-16 16:54:34,766 - src.data_sources.akshare - INFO - 股票 600581 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '八一钢铁', 'exists': True}
2025-04-16 16:54:34,766 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600601 -> 输出 600601
2025-04-16 16:54:34,767 - src.data_sources.akshare - INFO - 股票 600601 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '方正科技', 'exists': True}
2025-04-16 16:54:34,767 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600610 -> 输出 600610
2025-04-16 16:54:34,768 - src.data_sources.akshare - INFO - 股票 600610 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中毅达', 'exists': True}
2025-04-16 16:54:34,768 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600611 -> 输出 600611
2025-04-16 16:54:34,769 - src.data_sources.akshare - INFO - 股票 600611 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '大众交通', 'exists': True}
2025-04-16 16:54:34,769 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600612 -> 输出 600612
2025-04-16 16:54:34,770 - src.data_sources.akshare - INFO - 股票 600612 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '老凤祥', 'exists': True}
2025-04-16 16:54:34,770 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600613 -> 输出 600613
2025-04-16 16:54:34,771 - src.data_sources.akshare - INFO - 股票 600613 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '神奇制药', 'exists': True}
2025-04-16 16:54:34,771 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600615 -> 输出 600615
2025-04-16 16:54:34,772 - src.data_sources.akshare - INFO - 股票 600615 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '丰华股份', 'exists': True}
2025-04-16 16:54:34,772 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600616 -> 输出 600616
2025-04-16 16:54:34,773 - src.data_sources.akshare - INFO - 股票 600616 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金枫酒业', 'exists': True}
2025-04-16 16:54:34,773 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600617 -> 输出 600617
2025-04-16 16:54:34,774 - src.data_sources.akshare - INFO - 股票 600617 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国新能源', 'exists': True}
2025-04-16 16:54:34,774 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600618 -> 输出 600618
2025-04-16 16:54:34,775 - src.data_sources.akshare - INFO - 股票 600618 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '氯碱化工', 'exists': True}
2025-04-16 16:54:34,775 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600619 -> 输出 600619
2025-04-16 16:54:34,776 - src.data_sources.akshare - INFO - 股票 600619 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海立股份', 'exists': True}
2025-04-16 16:54:34,776 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600621 -> 输出 600621
2025-04-16 16:54:34,776 - src.data_sources.akshare - INFO - 股票 600621 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华鑫股份', 'exists': True}
2025-04-16 16:54:34,777 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600641 -> 输出 600641
2025-04-16 16:54:34,777 - src.data_sources.akshare - INFO - 股票 600641 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '万业企业', 'exists': True}
2025-04-16 16:54:34,777 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600651 -> 输出 600651
2025-04-16 16:54:34,778 - src.data_sources.akshare - INFO - 股票 600651 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '飞乐音响', 'exists': True}
2025-04-16 16:54:34,779 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600661 -> 输出 600661
2025-04-16 16:54:34,779 - src.data_sources.akshare - INFO - 股票 600661 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '昂立教育', 'exists': True}
2025-04-16 16:54:34,780 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600671 -> 输出 600671
2025-04-16 16:54:34,781 - src.data_sources.akshare - INFO - 股票 600671 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': 'ST目药', 'exists': True}
2025-04-16 16:54:34,781 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600681 -> 输出 600681
2025-04-16 16:54:34,782 - src.data_sources.akshare - INFO - 股票 600681 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '百川能源', 'exists': True}
2025-04-16 16:54:34,782 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600691 -> 输出 600691
2025-04-16 16:54:34,783 - src.data_sources.akshare - INFO - 股票 600691 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '阳煤化工', 'exists': True}
2025-04-16 16:54:34,783 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600710 -> 输出 600710
2025-04-16 16:54:34,784 - src.data_sources.akshare - INFO - 股票 600710 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '苏美达', 'exists': True}
2025-04-16 16:54:34,784 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600711 -> 输出 600711
2025-04-16 16:54:34,785 - src.data_sources.akshare - INFO - 股票 600711 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': 'ST盛屯', 'exists': True}
2025-04-16 16:54:34,785 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600712 -> 输出 600712
2025-04-16 16:54:34,786 - src.data_sources.akshare - INFO - 股票 600712 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '南宁百货', 'exists': True}
2025-04-16 16:54:34,786 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600713 -> 输出 600713
2025-04-16 16:54:34,787 - src.data_sources.akshare - INFO - 股票 600713 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '南京医药', 'exists': True}
2025-04-16 16:54:34,787 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600714 -> 输出 600714
2025-04-16 16:54:34,788 - src.data_sources.akshare - INFO - 股票 600714 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金瑞矿业', 'exists': True}
2025-04-16 16:54:34,789 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600715 -> 输出 600715
2025-04-16 16:54:34,789 - src.data_sources.akshare - INFO - 股票 600715 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '*ST文投', 'exists': True}
2025-04-16 16:54:34,790 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600716 -> 输出 600716
2025-04-16 16:54:34,790 - src.data_sources.akshare - INFO - 股票 600716 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '凤凰股份', 'exists': True}
2025-04-16 16:54:34,791 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600717 -> 输出 600717
2025-04-16 16:54:34,791 - src.data_sources.akshare - INFO - 股票 600717 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '天津港', 'exists': True}
2025-04-16 16:54:34,791 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600718 -> 输出 600718
2025-04-16 16:54:34,792 - src.data_sources.akshare - INFO - 股票 600718 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东软集团', 'exists': True}
2025-04-16 16:54:34,792 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600719 -> 输出 600719
2025-04-16 16:54:34,793 - src.data_sources.akshare - INFO - 股票 600719 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '大连热电', 'exists': True}
2025-04-16 16:54:34,793 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600721 -> 输出 600721
2025-04-16 16:54:34,794 - src.data_sources.akshare - INFO - 股票 600721 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '百花医药', 'exists': True}
2025-04-16 16:54:34,794 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600731 -> 输出 600731
2025-04-16 16:54:34,795 - src.data_sources.akshare - INFO - 股票 600731 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '湖南海利', 'exists': True}
2025-04-16 16:54:34,795 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600741 -> 输出 600741
2025-04-16 16:54:34,796 - src.data_sources.akshare - INFO - 股票 600741 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华域汽车', 'exists': True}
2025-04-16 16:54:34,796 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600751 -> 输出 600751
2025-04-16 16:54:34,797 - src.data_sources.akshare - INFO - 股票 600751 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海航科技', 'exists': True}
2025-04-16 16:54:34,797 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600761 -> 输出 600761
2025-04-16 16:54:34,798 - src.data_sources.akshare - INFO - 股票 600761 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '安徽合力', 'exists': True}
2025-04-16 16:54:34,799 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600771 -> 输出 600771
2025-04-16 16:54:34,799 - src.data_sources.akshare - INFO - 股票 600771 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '广誉远', 'exists': True}
2025-04-16 16:54:34,800 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600791 -> 输出 600791
2025-04-16 16:54:34,800 - src.data_sources.akshare - INFO - 股票 600791 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '京能置业', 'exists': True}
2025-04-16 16:54:34,801 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600801 -> 输出 600801
2025-04-16 16:54:34,801 - src.data_sources.akshare - INFO - 股票 600801 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华新水泥', 'exists': True}
2025-04-16 16:54:34,802 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600810 -> 输出 600810
2025-04-16 16:54:34,802 - src.data_sources.akshare - INFO - 股票 600810 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '神马股份', 'exists': True}
2025-04-16 16:54:34,803 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600811 -> 输出 600811
2025-04-16 16:54:34,803 - src.data_sources.akshare - INFO - 股票 600811 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '*ST东方', 'exists': True}
2025-04-16 16:54:34,804 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600812 -> 输出 600812
2025-04-16 16:54:34,804 - src.data_sources.akshare - INFO - 股票 600812 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华北制药', 'exists': True}
2025-04-16 16:54:34,805 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600814 -> 输出 600814
2025-04-16 16:54:34,805 - src.data_sources.akshare - INFO - 股票 600814 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '杭州解百', 'exists': True}
2025-04-16 16:54:34,806 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600815 -> 输出 600815
2025-04-16 16:54:34,806 - src.data_sources.akshare - INFO - 股票 600815 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '厦工股份', 'exists': True}
2025-04-16 16:54:34,807 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600816 -> 输出 600816
2025-04-16 16:54:34,807 - src.data_sources.akshare - INFO - 股票 600816 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '建元信托', 'exists': True}
2025-04-16 16:54:34,808 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600817 -> 输出 600817
2025-04-16 16:54:34,808 - src.data_sources.akshare - INFO - 股票 600817 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '宇通重工', 'exists': True}
2025-04-16 16:54:34,809 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600818 -> 输出 600818
2025-04-16 16:54:34,809 - src.data_sources.akshare - INFO - 股票 600818 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中路股份', 'exists': True}
2025-04-16 16:54:34,809 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600819 -> 输出 600819
2025-04-16 16:54:34,810 - src.data_sources.akshare - INFO - 股票 600819 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '耀皮玻璃', 'exists': True}
2025-04-16 16:54:34,810 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600821 -> 输出 600821
2025-04-16 16:54:34,811 - src.data_sources.akshare - INFO - 股票 600821 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金开新能', 'exists': True}
2025-04-16 16:54:34,811 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600831 -> 输出 600831
2025-04-16 16:54:34,812 - src.data_sources.akshare - INFO - 股票 600831 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': 'ST广网', 'exists': True}
2025-04-16 16:54:34,813 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600841 -> 输出 600841
2025-04-16 16:54:34,814 - src.data_sources.akshare - INFO - 股票 600841 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '动力新科', 'exists': True}
2025-04-16 16:54:34,814 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600851 -> 输出 600851
2025-04-16 16:54:34,815 - src.data_sources.akshare - INFO - 股票 600851 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海欣股份', 'exists': True}
2025-04-16 16:54:34,815 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600861 -> 输出 600861
2025-04-16 16:54:34,816 - src.data_sources.akshare - INFO - 股票 600861 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '北京人力', 'exists': True}
2025-04-16 16:54:34,816 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600871 -> 输出 600871
2025-04-16 16:54:34,817 - src.data_sources.akshare - INFO - 股票 600871 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '石化油服', 'exists': True}
2025-04-16 16:54:34,817 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600881 -> 输出 600881
2025-04-16 16:54:34,818 - src.data_sources.akshare - INFO - 股票 600881 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '亚泰集团', 'exists': True}
2025-04-16 16:54:34,818 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600901 -> 输出 600901
2025-04-16 16:54:34,819 - src.data_sources.akshare - INFO - 股票 600901 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '江苏金租', 'exists': True}
2025-04-16 16:54:34,819 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600916 -> 输出 600916
2025-04-16 16:54:34,820 - src.data_sources.akshare - INFO - 股票 600916 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国黄金', 'exists': True}
2025-04-16 16:54:34,820 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600917 -> 输出 600917
2025-04-16 16:54:34,821 - src.data_sources.akshare - INFO - 股票 600917 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '重庆燃气', 'exists': True}
2025-04-16 16:54:34,821 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600918 -> 输出 600918
2025-04-16 16:54:34,822 - src.data_sources.akshare - INFO - 股票 600918 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中泰证券', 'exists': True}
2025-04-16 16:54:34,822 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600919 -> 输出 600919
2025-04-16 16:54:34,823 - src.data_sources.akshare - INFO - 股票 600919 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '江苏银行', 'exists': True}
2025-04-16 16:54:34,823 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600941 -> 输出 600941
2025-04-16 16:54:34,824 - src.data_sources.akshare - INFO - 股票 600941 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国移动', 'exists': True}
2025-04-16 16:54:34,824 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600961 -> 输出 600961
2025-04-16 16:54:34,825 - src.data_sources.akshare - INFO - 股票 600961 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '株冶集团', 'exists': True}
2025-04-16 16:54:34,825 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600971 -> 输出 600971
2025-04-16 16:54:34,826 - src.data_sources.akshare - INFO - 股票 600971 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒源煤电', 'exists': True}
2025-04-16 16:54:34,826 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600981 -> 输出 600981
2025-04-16 16:54:34,827 - src.data_sources.akshare - INFO - 股票 600981 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '汇鸿集团', 'exists': True}
2025-04-16 16:54:34,827 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601000 -> 输出 601000
2025-04-16 16:54:34,828 - src.data_sources.akshare - INFO - 股票 601000 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '唐山港', 'exists': True}
2025-04-16 16:54:34,828 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601001 -> 输出 601001
2025-04-16 16:54:34,829 - src.data_sources.akshare - INFO - 股票 601001 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '晋控煤业', 'exists': True}
2025-04-16 16:54:34,830 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601002 -> 输出 601002
2025-04-16 16:54:34,830 - src.data_sources.akshare - INFO - 股票 601002 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '晋亿实业', 'exists': True}
2025-04-16 16:54:34,831 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601003 -> 输出 601003
2025-04-16 16:54:34,831 - src.data_sources.akshare - INFO - 股票 601003 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '柳钢股份', 'exists': True}
2025-04-16 16:54:34,832 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601005 -> 输出 601005
2025-04-16 16:54:34,832 - src.data_sources.akshare - INFO - 股票 601005 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '重庆钢铁', 'exists': True}
2025-04-16 16:54:34,833 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601006 -> 输出 601006
2025-04-16 16:54:34,833 - src.data_sources.akshare - INFO - 股票 601006 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '大秦铁路', 'exists': True}
2025-04-16 16:54:34,834 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601007 -> 输出 601007
2025-04-16 16:54:34,834 - src.data_sources.akshare - INFO - 股票 601007 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金陵饭店', 'exists': True}
2025-04-16 16:54:34,835 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601008 -> 输出 601008
2025-04-16 16:54:34,835 - src.data_sources.akshare - INFO - 股票 601008 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '连云港', 'exists': True}
2025-04-16 16:54:34,836 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601009 -> 输出 601009
2025-04-16 16:54:34,836 - src.data_sources.akshare - INFO - 股票 601009 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '南京银行', 'exists': True}
2025-04-16 16:54:34,837 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601010 -> 输出 601010
2025-04-16 16:54:34,837 - src.data_sources.akshare - INFO - 股票 601010 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '文峰股份', 'exists': True}
2025-04-16 16:54:34,838 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601011 -> 输出 601011
2025-04-16 16:54:34,839 - src.data_sources.akshare - INFO - 股票 601011 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '宝泰隆', 'exists': True}
2025-04-16 16:54:34,839 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601012 -> 输出 601012
2025-04-16 16:54:34,840 - src.data_sources.akshare - INFO - 股票 601012 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '隆基绿能', 'exists': True}
2025-04-16 16:54:34,840 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601015 -> 输出 601015
2025-04-16 16:54:34,841 - src.data_sources.akshare - INFO - 股票 601015 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '陕西黑猫', 'exists': True}
2025-04-16 16:54:34,841 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601016 -> 输出 601016
2025-04-16 16:54:34,842 - src.data_sources.akshare - INFO - 股票 601016 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '节能风电', 'exists': True}
2025-04-16 16:54:34,842 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601018 -> 输出 601018
2025-04-16 16:54:34,842 - src.data_sources.akshare - INFO - 股票 601018 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '宁波港', 'exists': True}
2025-04-16 16:54:34,843 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601019 -> 输出 601019
2025-04-16 16:54:34,843 - src.data_sources.akshare - INFO - 股票 601019 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '山东出版', 'exists': True}
2025-04-16 16:54:34,844 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601020 -> 输出 601020
2025-04-16 16:54:34,844 - src.data_sources.akshare - INFO - 股票 601020 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华钰矿业', 'exists': True}
2025-04-16 16:54:34,845 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601021 -> 输出 601021
2025-04-16 16:54:34,846 - src.data_sources.akshare - INFO - 股票 601021 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '春秋航空', 'exists': True}
2025-04-16 16:54:34,846 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601022 -> 输出 601022
2025-04-16 16:54:34,847 - src.data_sources.akshare - INFO - 股票 601022 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '宁波远洋', 'exists': True}
2025-04-16 16:54:34,847 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601028 -> 输出 601028
2025-04-16 16:54:34,848 - src.data_sources.akshare - INFO - 股票 601028 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '玉龙股份', 'exists': True}
2025-04-16 16:54:34,848 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601033 -> 输出 601033
2025-04-16 16:54:34,849 - src.data_sources.akshare - INFO - 股票 601033 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永兴股份', 'exists': True}
2025-04-16 16:54:34,849 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601038 -> 输出 601038
2025-04-16 16:54:34,850 - src.data_sources.akshare - INFO - 股票 601038 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '一拖股份', 'exists': True}
2025-04-16 16:54:34,850 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601058 -> 输出 601058
2025-04-16 16:54:34,851 - src.data_sources.akshare - INFO - 股票 601058 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '赛轮轮胎', 'exists': True}
2025-04-16 16:54:34,851 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601059 -> 输出 601059
2025-04-16 16:54:34,851 - src.data_sources.akshare - INFO - 股票 601059 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '信达证券', 'exists': True}
2025-04-16 16:54:34,852 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601061 -> 输出 601061
2025-04-16 16:54:34,852 - src.data_sources.akshare - INFO - 股票 601061 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中信金属', 'exists': True}
2025-04-16 16:54:34,853 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601065 -> 输出 601065
2025-04-16 16:54:34,853 - src.data_sources.akshare - INFO - 股票 601065 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '江盐集团', 'exists': True}
2025-04-16 16:54:34,854 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601066 -> 输出 601066
2025-04-16 16:54:34,855 - src.data_sources.akshare - INFO - 股票 601066 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中信建投', 'exists': True}
2025-04-16 16:54:34,855 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601068 -> 输出 601068
2025-04-16 16:54:34,856 - src.data_sources.akshare - INFO - 股票 601068 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中铝国际', 'exists': True}
2025-04-16 16:54:34,856 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601069 -> 输出 601069
2025-04-16 16:54:34,857 - src.data_sources.akshare - INFO - 股票 601069 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '西部黄金', 'exists': True}
2025-04-16 16:54:34,858 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601077 -> 输出 601077
2025-04-16 16:54:34,858 - src.data_sources.akshare - INFO - 股票 601077 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '渝农商行', 'exists': True}
2025-04-16 16:54:34,859 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601083 -> 输出 601083
2025-04-16 16:54:34,859 - src.data_sources.akshare - INFO - 股票 601083 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '锦江航运', 'exists': True}
2025-04-16 16:54:34,860 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601086 -> 输出 601086
2025-04-16 16:54:34,860 - src.data_sources.akshare - INFO - 股票 601086 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国芳集团', 'exists': True}
2025-04-16 16:54:34,861 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601088 -> 输出 601088
2025-04-16 16:54:34,861 - src.data_sources.akshare - INFO - 股票 601088 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国神华', 'exists': True}
2025-04-16 16:54:34,862 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601089 -> 输出 601089
2025-04-16 16:54:34,862 - src.data_sources.akshare - INFO - 股票 601089 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '福元医药', 'exists': True}
2025-04-16 16:54:34,863 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601096 -> 输出 601096
2025-04-16 16:54:34,863 - src.data_sources.akshare - INFO - 股票 601096 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '宏盛华源', 'exists': True}
2025-04-16 16:54:34,864 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601098 -> 输出 601098
2025-04-16 16:54:34,864 - src.data_sources.akshare - INFO - 股票 601098 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中南传媒', 'exists': True}
2025-04-16 16:54:34,865 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601099 -> 输出 601099
2025-04-16 16:54:34,865 - src.data_sources.akshare - INFO - 股票 601099 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '太平洋', 'exists': True}
2025-04-16 16:54:34,865 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601100 -> 输出 601100
2025-04-16 16:54:34,866 - src.data_sources.akshare - INFO - 股票 601100 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒立液压', 'exists': True}
2025-04-16 16:54:34,866 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601101 -> 输出 601101
2025-04-16 16:54:34,867 - src.data_sources.akshare - INFO - 股票 601101 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '昊华能源', 'exists': True}
2025-04-16 16:54:34,867 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601106 -> 输出 601106
2025-04-16 16:54:34,868 - src.data_sources.akshare - INFO - 股票 601106 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国一重', 'exists': True}
2025-04-16 16:54:34,868 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601107 -> 输出 601107
2025-04-16 16:54:34,869 - src.data_sources.akshare - INFO - 股票 601107 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '四川成渝', 'exists': True}
2025-04-16 16:54:34,869 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601108 -> 输出 601108
2025-04-16 16:54:34,870 - src.data_sources.akshare - INFO - 股票 601108 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '财通证券', 'exists': True}
2025-04-16 16:54:34,870 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601111 -> 输出 601111
2025-04-16 16:54:34,871 - src.data_sources.akshare - INFO - 股票 601111 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国国航', 'exists': True}
2025-04-16 16:54:34,871 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601113 -> 输出 601113
2025-04-16 16:54:34,872 - src.data_sources.akshare - INFO - 股票 601113 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华鼎股份', 'exists': True}
2025-04-16 16:54:34,872 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601116 -> 输出 601116
2025-04-16 16:54:34,873 - src.data_sources.akshare - INFO - 股票 601116 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '三江购物', 'exists': True}
2025-04-16 16:54:34,873 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601117 -> 输出 601117
2025-04-16 16:54:34,874 - src.data_sources.akshare - INFO - 股票 601117 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国化学', 'exists': True}
2025-04-16 16:54:34,874 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601118 -> 输出 601118
2025-04-16 16:54:34,874 - src.data_sources.akshare - INFO - 股票 601118 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海南橡胶', 'exists': True}
2025-04-16 16:54:34,875 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601121 -> 输出 601121
2025-04-16 16:54:34,875 - src.data_sources.akshare - INFO - 股票 601121 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '宝地矿业', 'exists': True}
2025-04-16 16:54:34,876 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601126 -> 输出 601126
2025-04-16 16:54:34,876 - src.data_sources.akshare - INFO - 股票 601126 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '四方股份', 'exists': True}
2025-04-16 16:54:34,876 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601127 -> 输出 601127
2025-04-16 16:54:34,877 - src.data_sources.akshare - INFO - 股票 601127 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '赛力斯', 'exists': True}
2025-04-16 16:54:34,877 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601128 -> 输出 601128
2025-04-16 16:54:34,878 - src.data_sources.akshare - INFO - 股票 601128 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '常熟银行', 'exists': True}
2025-04-16 16:54:34,879 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601133 -> 输出 601133
2025-04-16 16:54:34,879 - src.data_sources.akshare - INFO - 股票 601133 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '柏诚股份', 'exists': True}
2025-04-16 16:54:34,880 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601136 -> 输出 601136
2025-04-16 16:54:34,881 - src.data_sources.akshare - INFO - 股票 601136 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '首创证券', 'exists': True}
2025-04-16 16:54:34,881 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601137 -> 输出 601137
2025-04-16 16:54:34,881 - src.data_sources.akshare - INFO - 股票 601137 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '博威合金', 'exists': True}
2025-04-16 16:54:34,882 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601138 -> 输出 601138
2025-04-16 16:54:34,882 - src.data_sources.akshare - INFO - 股票 601138 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工业富联', 'exists': True}
2025-04-16 16:54:34,882 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601139 -> 输出 601139
2025-04-16 16:54:34,883 - src.data_sources.akshare - INFO - 股票 601139 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '深圳燃气', 'exists': True}
2025-04-16 16:54:34,883 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601155 -> 输出 601155
2025-04-16 16:54:34,884 - src.data_sources.akshare - INFO - 股票 601155 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '新城控股', 'exists': True}
2025-04-16 16:54:34,884 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601156 -> 输出 601156
2025-04-16 16:54:34,885 - src.data_sources.akshare - INFO - 股票 601156 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东航物流', 'exists': True}
2025-04-16 16:54:34,885 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601158 -> 输出 601158
2025-04-16 16:54:34,886 - src.data_sources.akshare - INFO - 股票 601158 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '重庆水务', 'exists': True}
2025-04-16 16:54:34,886 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601162 -> 输出 601162
2025-04-16 16:54:34,887 - src.data_sources.akshare - INFO - 股票 601162 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '天风证券', 'exists': True}
2025-04-16 16:54:34,887 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601163 -> 输出 601163
2025-04-16 16:54:34,888 - src.data_sources.akshare - INFO - 股票 601163 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '三角轮胎', 'exists': True}
2025-04-16 16:54:34,888 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601166 -> 输出 601166
2025-04-16 16:54:34,889 - src.data_sources.akshare - INFO - 股票 601166 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '兴业银行', 'exists': True}
2025-04-16 16:54:34,889 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601168 -> 输出 601168
2025-04-16 16:54:34,890 - src.data_sources.akshare - INFO - 股票 601168 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '西部矿业', 'exists': True}
2025-04-16 16:54:34,890 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601169 -> 输出 601169
2025-04-16 16:54:34,891 - src.data_sources.akshare - INFO - 股票 601169 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '北京银行', 'exists': True}
2025-04-16 16:54:34,891 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601177 -> 输出 601177
2025-04-16 16:54:34,892 - src.data_sources.akshare - INFO - 股票 601177 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '杭齿前进', 'exists': True}
2025-04-16 16:54:34,892 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601179 -> 输出 601179
2025-04-16 16:54:34,892 - src.data_sources.akshare - INFO - 股票 601179 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国西电', 'exists': True}
2025-04-16 16:54:34,893 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601186 -> 输出 601186
2025-04-16 16:54:34,893 - src.data_sources.akshare - INFO - 股票 601186 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国铁建', 'exists': True}
2025-04-16 16:54:34,894 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601187 -> 输出 601187
2025-04-16 16:54:34,894 - src.data_sources.akshare - INFO - 股票 601187 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '厦门银行', 'exists': True}
2025-04-16 16:54:34,895 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601188 -> 输出 601188
2025-04-16 16:54:34,896 - src.data_sources.akshare - INFO - 股票 601188 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '龙江交通', 'exists': True}
2025-04-16 16:54:34,896 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601198 -> 输出 601198
2025-04-16 16:54:34,897 - src.data_sources.akshare - INFO - 股票 601198 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东兴证券', 'exists': True}
2025-04-16 16:54:34,897 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601199 -> 输出 601199
2025-04-16 16:54:34,898 - src.data_sources.akshare - INFO - 股票 601199 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '江南水务', 'exists': True}
2025-04-16 16:54:34,898 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601200 -> 输出 601200
2025-04-16 16:54:34,898 - src.data_sources.akshare - INFO - 股票 601200 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海环境', 'exists': True}
2025-04-16 16:54:34,899 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601208 -> 输出 601208
2025-04-16 16:54:34,899 - src.data_sources.akshare - INFO - 股票 601208 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东材科技', 'exists': True}
2025-04-16 16:54:34,900 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601211 -> 输出 601211
2025-04-16 16:54:34,900 - src.data_sources.akshare - INFO - 股票 601211 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国泰海通', 'exists': True}
2025-04-16 16:54:34,901 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601212 -> 输出 601212
2025-04-16 16:54:34,901 - src.data_sources.akshare - INFO - 股票 601212 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '白银有色', 'exists': True}
2025-04-16 16:54:34,901 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601216 -> 输出 601216
2025-04-16 16:54:34,902 - src.data_sources.akshare - INFO - 股票 601216 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '君正集团', 'exists': True}
2025-04-16 16:54:34,902 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601218 -> 输出 601218
2025-04-16 16:54:34,903 - src.data_sources.akshare - INFO - 股票 601218 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '吉鑫科技', 'exists': True}
2025-04-16 16:54:34,903 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601222 -> 输出 601222
2025-04-16 16:54:34,905 - src.data_sources.akshare - INFO - 股票 601222 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '林洋能源', 'exists': True}
2025-04-16 16:54:34,905 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601225 -> 输出 601225
2025-04-16 16:54:34,906 - src.data_sources.akshare - INFO - 股票 601225 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '陕西煤业', 'exists': True}
2025-04-16 16:54:34,906 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601226 -> 输出 601226
2025-04-16 16:54:34,907 - src.data_sources.akshare - INFO - 股票 601226 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华电科工', 'exists': True}
2025-04-16 16:54:34,907 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601228 -> 输出 601228
2025-04-16 16:54:34,908 - src.data_sources.akshare - INFO - 股票 601228 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '广州港', 'exists': True}
2025-04-16 16:54:34,908 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601229 -> 输出 601229
2025-04-16 16:54:34,909 - src.data_sources.akshare - INFO - 股票 601229 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海银行', 'exists': True}
2025-04-16 16:54:34,909 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601231 -> 输出 601231
2025-04-16 16:54:34,909 - src.data_sources.akshare - INFO - 股票 601231 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '环旭电子', 'exists': True}
2025-04-16 16:54:34,910 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601233 -> 输出 601233
2025-04-16 16:54:34,910 - src.data_sources.akshare - INFO - 股票 601233 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '桐昆股份', 'exists': True}
2025-04-16 16:54:34,911 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601236 -> 输出 601236
2025-04-16 16:54:34,911 - src.data_sources.akshare - INFO - 股票 601236 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '红塔证券', 'exists': True}
2025-04-16 16:54:34,911 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601238 -> 输出 601238
2025-04-16 16:54:34,912 - src.data_sources.akshare - INFO - 股票 601238 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '广汽集团', 'exists': True}
2025-04-16 16:54:34,913 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601279 -> 输出 601279
2025-04-16 16:54:34,913 - src.data_sources.akshare - INFO - 股票 601279 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '英利汽车', 'exists': True}
2025-04-16 16:54:34,914 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 16:54:34,914 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 16:54:34,915 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601298 -> 输出 601298
2025-04-16 16:54:34,915 - src.data_sources.akshare - INFO - 股票 601298 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '青岛港', 'exists': True}
2025-04-16 16:54:34,916 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601311 -> 输出 601311
2025-04-16 16:54:34,916 - src.data_sources.akshare - INFO - 股票 601311 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '骆驼股份', 'exists': True}
2025-04-16 16:54:34,916 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601318 -> 输出 601318
2025-04-16 16:54:34,917 - src.data_sources.akshare - INFO - 股票 601318 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国平安', 'exists': True}
2025-04-16 16:54:34,917 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601319 -> 输出 601319
2025-04-16 16:54:34,918 - src.data_sources.akshare - INFO - 股票 601319 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国人保', 'exists': True}
2025-04-16 16:54:34,918 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601326 -> 输出 601326
2025-04-16 16:54:34,919 - src.data_sources.akshare - INFO - 股票 601326 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '秦港股份', 'exists': True}
2025-04-16 16:54:34,919 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601328 -> 输出 601328
2025-04-16 16:54:34,920 - src.data_sources.akshare - INFO - 股票 601328 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '交通银行', 'exists': True}
2025-04-16 16:54:34,920 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601330 -> 输出 601330
2025-04-16 16:54:34,921 - src.data_sources.akshare - INFO - 股票 601330 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '绿色动力', 'exists': True}
2025-04-16 16:54:34,921 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601333 -> 输出 601333
2025-04-16 16:54:34,922 - src.data_sources.akshare - INFO - 股票 601333 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '广深铁路', 'exists': True}
2025-04-16 16:54:34,922 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601336 -> 输出 601336
2025-04-16 16:54:34,923 - src.data_sources.akshare - INFO - 股票 601336 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '新华保险', 'exists': True}
2025-04-16 16:54:34,923 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601339 -> 输出 601339
2025-04-16 16:54:34,924 - src.data_sources.akshare - INFO - 股票 601339 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '百隆东方', 'exists': True}
2025-04-16 16:54:34,924 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601360 -> 输出 601360
2025-04-16 16:54:34,925 - src.data_sources.akshare - INFO - 股票 601360 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '三六零', 'exists': True}
2025-04-16 16:54:34,925 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601366 -> 输出 601366
2025-04-16 16:54:34,925 - src.data_sources.akshare - INFO - 股票 601366 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '利群股份', 'exists': True}
2025-04-16 16:54:34,926 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601368 -> 输出 601368
2025-04-16 16:54:34,926 - src.data_sources.akshare - INFO - 股票 601368 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '绿城水务', 'exists': True}
2025-04-16 16:54:34,927 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601369 -> 输出 601369
2025-04-16 16:54:34,927 - src.data_sources.akshare - INFO - 股票 601369 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '陕鼓动力', 'exists': True}
2025-04-16 16:54:34,927 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601375 -> 输出 601375
2025-04-16 16:54:34,928 - src.data_sources.akshare - INFO - 股票 601375 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中原证券', 'exists': True}
2025-04-16 16:54:34,928 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601377 -> 输出 601377
2025-04-16 16:54:34,929 - src.data_sources.akshare - INFO - 股票 601377 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '兴业证券', 'exists': True}
2025-04-16 16:54:34,930 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601388 -> 输出 601388
2025-04-16 16:54:34,930 - src.data_sources.akshare - INFO - 股票 601388 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '怡球资源', 'exists': True}
2025-04-16 16:54:34,931 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601390 -> 输出 601390
2025-04-16 16:54:34,931 - src.data_sources.akshare - INFO - 股票 601390 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国中铁', 'exists': True}
2025-04-16 16:54:34,932 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 16:54:34,932 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 16:54:34,932 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601399 -> 输出 601399
2025-04-16 16:54:34,933 - src.data_sources.akshare - INFO - 股票 601399 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国机重装', 'exists': True}
2025-04-16 16:54:34,933 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601456 -> 输出 601456
2025-04-16 16:54:34,934 - src.data_sources.akshare - INFO - 股票 601456 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国联民生', 'exists': True}
2025-04-16 16:54:34,934 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601500 -> 输出 601500
2025-04-16 16:54:34,935 - src.data_sources.akshare - INFO - 股票 601500 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '通用股份', 'exists': True}
2025-04-16 16:54:34,935 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601512 -> 输出 601512
2025-04-16 16:54:34,936 - src.data_sources.akshare - INFO - 股票 601512 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中新集团', 'exists': True}
2025-04-16 16:54:34,936 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601515 -> 输出 601515
2025-04-16 16:54:34,937 - src.data_sources.akshare - INFO - 股票 601515 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东峰集团', 'exists': True}
2025-04-16 16:54:34,937 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601518 -> 输出 601518
2025-04-16 16:54:34,938 - src.data_sources.akshare - INFO - 股票 601518 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '吉林高速', 'exists': True}
2025-04-16 16:54:34,938 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601519 -> 输出 601519
2025-04-16 16:54:34,939 - src.data_sources.akshare - INFO - 股票 601519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '大智慧', 'exists': True}
2025-04-16 16:54:34,939 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601528 -> 输出 601528
2025-04-16 16:54:34,940 - src.data_sources.akshare - INFO - 股票 601528 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '瑞丰银行', 'exists': True}
2025-04-16 16:54:34,940 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601555 -> 输出 601555
2025-04-16 16:54:34,941 - src.data_sources.akshare - INFO - 股票 601555 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东吴证券', 'exists': True}
2025-04-16 16:54:34,941 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601566 -> 输出 601566
2025-04-16 16:54:34,942 - src.data_sources.akshare - INFO - 股票 601566 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '九牧王', 'exists': True}
2025-04-16 16:54:34,942 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601567 -> 输出 601567
2025-04-16 16:54:34,943 - src.data_sources.akshare - INFO - 股票 601567 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '三星医疗', 'exists': True}
2025-04-16 16:54:34,943 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601568 -> 输出 601568
2025-04-16 16:54:34,943 - src.data_sources.akshare - INFO - 股票 601568 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '北元集团', 'exists': True}
2025-04-16 16:54:34,944 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601577 -> 输出 601577
2025-04-16 16:54:34,944 - src.data_sources.akshare - INFO - 股票 601577 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '长沙银行', 'exists': True}
2025-04-16 16:54:34,945 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601579 -> 输出 601579
2025-04-16 16:54:34,945 - src.data_sources.akshare - INFO - 股票 601579 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '会稽山', 'exists': True}
2025-04-16 16:54:34,946 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601588 -> 输出 601588
2025-04-16 16:54:34,947 - src.data_sources.akshare - INFO - 股票 601588 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '北辰实业', 'exists': True}
2025-04-16 16:54:34,947 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601595 -> 输出 601595
2025-04-16 16:54:34,948 - src.data_sources.akshare - INFO - 股票 601595 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海电影', 'exists': True}
2025-04-16 16:54:34,948 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601598 -> 输出 601598
2025-04-16 16:54:34,949 - src.data_sources.akshare - INFO - 股票 601598 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国外运', 'exists': True}
2025-04-16 16:54:34,949 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601599 -> 输出 601599
2025-04-16 16:54:34,950 - src.data_sources.akshare - INFO - 股票 601599 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '浙文影业', 'exists': True}
2025-04-16 16:54:34,950 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601600 -> 输出 601600
2025-04-16 16:54:34,951 - src.data_sources.akshare - INFO - 股票 601600 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国铝业', 'exists': True}
2025-04-16 16:54:34,951 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601601 -> 输出 601601
2025-04-16 16:54:34,952 - src.data_sources.akshare - INFO - 股票 601601 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国太保', 'exists': True}
2025-04-16 16:54:34,953 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601606 -> 输出 601606
2025-04-16 16:54:34,953 - src.data_sources.akshare - INFO - 股票 601606 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '长城军工', 'exists': True}
2025-04-16 16:54:34,954 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601607 -> 输出 601607
2025-04-16 16:54:34,955 - src.data_sources.akshare - INFO - 股票 601607 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海医药', 'exists': True}
2025-04-16 16:54:34,955 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601608 -> 输出 601608
2025-04-16 16:54:34,956 - src.data_sources.akshare - INFO - 股票 601608 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中信重工', 'exists': True}
2025-04-16 16:54:34,956 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601609 -> 输出 601609
2025-04-16 16:54:34,957 - src.data_sources.akshare - INFO - 股票 601609 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金田股份', 'exists': True}
2025-04-16 16:54:34,957 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601611 -> 输出 601611
2025-04-16 16:54:34,958 - src.data_sources.akshare - INFO - 股票 601611 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国核建', 'exists': True}
2025-04-16 16:54:34,958 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601615 -> 输出 601615
2025-04-16 16:54:34,959 - src.data_sources.akshare - INFO - 股票 601615 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '明阳智能', 'exists': True}
2025-04-16 16:54:34,959 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601616 -> 输出 601616
2025-04-16 16:54:34,960 - src.data_sources.akshare - INFO - 股票 601616 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '广电电气', 'exists': True}
2025-04-16 16:54:34,960 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601618 -> 输出 601618
2025-04-16 16:54:34,961 - src.data_sources.akshare - INFO - 股票 601618 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国中冶', 'exists': True}
2025-04-16 16:54:34,961 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601619 -> 输出 601619
2025-04-16 16:54:34,962 - src.data_sources.akshare - INFO - 股票 601619 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '嘉泽新能', 'exists': True}
2025-04-16 16:54:34,962 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601628 -> 输出 601628
2025-04-16 16:54:34,963 - src.data_sources.akshare - INFO - 股票 601628 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国人寿', 'exists': True}
2025-04-16 16:54:34,963 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601633 -> 输出 601633
2025-04-16 16:54:34,964 - src.data_sources.akshare - INFO - 股票 601633 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '长城汽车', 'exists': True}
2025-04-16 16:54:34,964 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601636 -> 输出 601636
2025-04-16 16:54:34,965 - src.data_sources.akshare - INFO - 股票 601636 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '旗滨集团', 'exists': True}
2025-04-16 16:54:34,965 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601658 -> 输出 601658
2025-04-16 16:54:34,966 - src.data_sources.akshare - INFO - 股票 601658 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '邮储银行', 'exists': True}
2025-04-16 16:54:34,966 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601665 -> 输出 601665
2025-04-16 16:54:34,967 - src.data_sources.akshare - INFO - 股票 601665 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '齐鲁银行', 'exists': True}
2025-04-16 16:54:34,967 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601666 -> 输出 601666
2025-04-16 16:54:34,968 - src.data_sources.akshare - INFO - 股票 601666 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '平煤股份', 'exists': True}
2025-04-16 16:54:34,968 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601668 -> 输出 601668
2025-04-16 16:54:34,969 - src.data_sources.akshare - INFO - 股票 601668 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国建筑', 'exists': True}
2025-04-16 16:54:34,969 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601669 -> 输出 601669
2025-04-16 16:54:34,970 - src.data_sources.akshare - INFO - 股票 601669 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国电建', 'exists': True}
2025-04-16 16:54:34,970 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601677 -> 输出 601677
2025-04-16 16:54:34,971 - src.data_sources.akshare - INFO - 股票 601677 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '明泰铝业', 'exists': True}
2025-04-16 16:54:34,971 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601678 -> 输出 601678
2025-04-16 16:54:34,972 - src.data_sources.akshare - INFO - 股票 601678 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '滨化股份', 'exists': True}
2025-04-16 16:54:34,972 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601686 -> 输出 601686
2025-04-16 16:54:34,973 - src.data_sources.akshare - INFO - 股票 601686 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '友发集团', 'exists': True}
2025-04-16 16:54:34,973 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601688 -> 输出 601688
2025-04-16 16:54:34,974 - src.data_sources.akshare - INFO - 股票 601688 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华泰证券', 'exists': True}
2025-04-16 16:54:34,974 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601689 -> 输出 601689
2025-04-16 16:54:34,975 - src.data_sources.akshare - INFO - 股票 601689 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '拓普集团', 'exists': True}
2025-04-16 16:54:34,975 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601696 -> 输出 601696
2025-04-16 16:54:34,976 - src.data_sources.akshare - INFO - 股票 601696 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中银证券', 'exists': True}
2025-04-16 16:54:34,976 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601698 -> 输出 601698
2025-04-16 16:54:34,977 - src.data_sources.akshare - INFO - 股票 601698 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国卫通', 'exists': True}
2025-04-16 16:54:34,977 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601699 -> 输出 601699
2025-04-16 16:54:34,978 - src.data_sources.akshare - INFO - 股票 601699 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '潞安环能', 'exists': True}
2025-04-16 16:54:34,978 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601700 -> 输出 601700
2025-04-16 16:54:34,979 - src.data_sources.akshare - INFO - 股票 601700 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '风范股份', 'exists': True}
2025-04-16 16:54:34,980 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601702 -> 输出 601702
2025-04-16 16:54:34,981 - src.data_sources.akshare - INFO - 股票 601702 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华峰铝业', 'exists': True}
2025-04-16 16:54:34,981 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601717 -> 输出 601717
2025-04-16 16:54:34,982 - src.data_sources.akshare - INFO - 股票 601717 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '郑煤机', 'exists': True}
2025-04-16 16:54:34,982 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601718 -> 输出 601718
2025-04-16 16:54:34,983 - src.data_sources.akshare - INFO - 股票 601718 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '际华集团', 'exists': True}
2025-04-16 16:54:34,983 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601727 -> 输出 601727
2025-04-16 16:54:34,983 - src.data_sources.akshare - INFO - 股票 601727 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海电气', 'exists': True}
2025-04-16 16:54:34,984 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601728 -> 输出 601728
2025-04-16 16:54:34,984 - src.data_sources.akshare - INFO - 股票 601728 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国电信', 'exists': True}
2025-04-16 16:54:34,985 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601766 -> 输出 601766
2025-04-16 16:54:34,985 - src.data_sources.akshare - INFO - 股票 601766 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国中车', 'exists': True}
2025-04-16 16:54:34,986 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601777 -> 输出 601777
2025-04-16 16:54:34,986 - src.data_sources.akshare - INFO - 股票 601777 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '千里科技', 'exists': True}
2025-04-16 16:54:34,987 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601778 -> 输出 601778
2025-04-16 16:54:34,988 - src.data_sources.akshare - INFO - 股票 601778 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '晶科科技', 'exists': True}
2025-04-16 16:54:34,988 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601788 -> 输出 601788
2025-04-16 16:54:34,989 - src.data_sources.akshare - INFO - 股票 601788 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '光大证券', 'exists': True}
2025-04-16 16:54:34,989 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601789 -> 输出 601789
2025-04-16 16:54:34,990 - src.data_sources.akshare - INFO - 股票 601789 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '宁波建工', 'exists': True}
2025-04-16 16:54:34,990 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601798 -> 输出 601798
2025-04-16 16:54:34,991 - src.data_sources.akshare - INFO - 股票 601798 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '蓝科高新', 'exists': True}
2025-04-16 16:54:34,991 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601799 -> 输出 601799
2025-04-16 16:54:34,992 - src.data_sources.akshare - INFO - 股票 601799 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '星宇股份', 'exists': True}
2025-04-16 16:54:34,992 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601800 -> 输出 601800
2025-04-16 16:54:34,993 - src.data_sources.akshare - INFO - 股票 601800 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国交建', 'exists': True}
2025-04-16 16:54:34,993 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601801 -> 输出 601801
2025-04-16 16:54:34,993 - src.data_sources.akshare - INFO - 股票 601801 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '皖新传媒', 'exists': True}
2025-04-16 16:54:34,994 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601808 -> 输出 601808
2025-04-16 16:54:34,994 - src.data_sources.akshare - INFO - 股票 601808 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中海油服', 'exists': True}
2025-04-16 16:54:34,995 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601811 -> 输出 601811
2025-04-16 16:54:34,996 - src.data_sources.akshare - INFO - 股票 601811 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '新华文轩', 'exists': True}
2025-04-16 16:54:34,996 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601816 -> 输出 601816
2025-04-16 16:54:34,997 - src.data_sources.akshare - INFO - 股票 601816 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '京沪高铁', 'exists': True}
2025-04-16 16:54:34,997 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601818 -> 输出 601818
2025-04-16 16:54:34,998 - src.data_sources.akshare - INFO - 股票 601818 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '光大银行', 'exists': True}
2025-04-16 16:54:34,998 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601825 -> 输出 601825
2025-04-16 16:54:34,999 - src.data_sources.akshare - INFO - 股票 601825 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '沪农商行', 'exists': True}
2025-04-16 16:54:34,999 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601827 -> 输出 601827
2025-04-16 16:54:35,000 - src.data_sources.akshare - INFO - 股票 601827 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '三峰环境', 'exists': True}
2025-04-16 16:54:35,000 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601828 -> 输出 601828
2025-04-16 16:54:35,001 - src.data_sources.akshare - INFO - 股票 601828 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '美凯龙', 'exists': True}
2025-04-16 16:54:35,001 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601838 -> 输出 601838
2025-04-16 16:54:35,002 - src.data_sources.akshare - INFO - 股票 601838 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '成都银行', 'exists': True}
2025-04-16 16:54:35,002 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601857 -> 输出 601857
2025-04-16 16:54:35,003 - src.data_sources.akshare - INFO - 股票 601857 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国石油', 'exists': True}
2025-04-16 16:54:35,003 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601858 -> 输出 601858
2025-04-16 16:54:35,004 - src.data_sources.akshare - INFO - 股票 601858 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国科传', 'exists': True}
2025-04-16 16:54:35,004 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601860 -> 输出 601860
2025-04-16 16:54:35,005 - src.data_sources.akshare - INFO - 股票 601860 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '紫金银行', 'exists': True}
2025-04-16 16:54:35,005 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601865 -> 输出 601865
2025-04-16 16:54:35,006 - src.data_sources.akshare - INFO - 股票 601865 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '福莱特', 'exists': True}
2025-04-16 16:54:35,006 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601866 -> 输出 601866
2025-04-16 16:54:35,007 - src.data_sources.akshare - INFO - 股票 601866 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中远海发', 'exists': True}
2025-04-16 16:54:35,007 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601868 -> 输出 601868
2025-04-16 16:54:35,008 - src.data_sources.akshare - INFO - 股票 601868 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国能建', 'exists': True}
2025-04-16 16:54:35,008 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601869 -> 输出 601869
2025-04-16 16:54:35,008 - src.data_sources.akshare - INFO - 股票 601869 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '长飞光纤', 'exists': True}
2025-04-16 16:54:35,009 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601872 -> 输出 601872
2025-04-16 16:54:35,009 - src.data_sources.akshare - INFO - 股票 601872 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商轮船', 'exists': True}
2025-04-16 16:54:35,010 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601877 -> 输出 601877
2025-04-16 16:54:35,010 - src.data_sources.akshare - INFO - 股票 601877 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '正泰电器', 'exists': True}
2025-04-16 16:54:35,011 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601878 -> 输出 601878
2025-04-16 16:54:35,011 - src.data_sources.akshare - INFO - 股票 601878 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '浙商证券', 'exists': True}
2025-04-16 16:54:35,012 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601880 -> 输出 601880
2025-04-16 16:54:35,013 - src.data_sources.akshare - INFO - 股票 601880 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '辽港股份', 'exists': True}
2025-04-16 16:54:35,013 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601881 -> 输出 601881
2025-04-16 16:54:35,014 - src.data_sources.akshare - INFO - 股票 601881 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国银河', 'exists': True}
2025-04-16 16:54:35,014 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601882 -> 输出 601882
2025-04-16 16:54:35,015 - src.data_sources.akshare - INFO - 股票 601882 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海天精工', 'exists': True}
2025-04-16 16:54:35,015 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601886 -> 输出 601886
2025-04-16 16:54:35,016 - src.data_sources.akshare - INFO - 股票 601886 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '江河集团', 'exists': True}
2025-04-16 16:54:35,016 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601888 -> 输出 601888
2025-04-16 16:54:35,017 - src.data_sources.akshare - INFO - 股票 601888 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国中免', 'exists': True}
2025-04-16 16:54:35,017 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601890 -> 输出 601890
2025-04-16 16:54:35,018 - src.data_sources.akshare - INFO - 股票 601890 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '亚星锚链', 'exists': True}
2025-04-16 16:54:35,018 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601898 -> 输出 601898
2025-04-16 16:54:35,019 - src.data_sources.akshare - INFO - 股票 601898 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中煤能源', 'exists': True}
2025-04-16 16:54:35,019 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601899 -> 输出 601899
2025-04-16 16:54:35,019 - src.data_sources.akshare - INFO - 股票 601899 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '紫金矿业', 'exists': True}
2025-04-16 16:54:35,020 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601900 -> 输出 601900
2025-04-16 16:54:35,021 - src.data_sources.akshare - INFO - 股票 601900 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '南方传媒', 'exists': True}
2025-04-16 16:54:35,021 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601901 -> 输出 601901
2025-04-16 16:54:35,022 - src.data_sources.akshare - INFO - 股票 601901 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '方正证券', 'exists': True}
2025-04-16 16:54:35,022 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601908 -> 输出 601908
2025-04-16 16:54:35,023 - src.data_sources.akshare - INFO - 股票 601908 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '京运通', 'exists': True}
2025-04-16 16:54:35,023 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601916 -> 输出 601916
2025-04-16 16:54:35,023 - src.data_sources.akshare - INFO - 股票 601916 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '浙商银行', 'exists': True}
2025-04-16 16:54:35,024 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601918 -> 输出 601918
2025-04-16 16:54:35,024 - src.data_sources.akshare - INFO - 股票 601918 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '新集能源', 'exists': True}
2025-04-16 16:54:35,025 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601919 -> 输出 601919
2025-04-16 16:54:35,025 - src.data_sources.akshare - INFO - 股票 601919 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中远海控', 'exists': True}
2025-04-16 16:54:35,025 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601921 -> 输出 601921
2025-04-16 16:54:35,026 - src.data_sources.akshare - INFO - 股票 601921 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '浙版传媒', 'exists': True}
2025-04-16 16:54:35,026 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601928 -> 输出 601928
2025-04-16 16:54:35,027 - src.data_sources.akshare - INFO - 股票 601928 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '凤凰传媒', 'exists': True}
2025-04-16 16:54:35,027 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601929 -> 输出 601929
2025-04-16 16:54:35,028 - src.data_sources.akshare - INFO - 股票 601929 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '吉视传媒', 'exists': True}
2025-04-16 16:54:35,028 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601933 -> 输出 601933
2025-04-16 16:54:35,029 - src.data_sources.akshare - INFO - 股票 601933 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永辉超市', 'exists': True}
2025-04-16 16:54:35,030 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601939 -> 输出 601939
2025-04-16 16:54:35,030 - src.data_sources.akshare - INFO - 股票 601939 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '建设银行', 'exists': True}
2025-04-16 16:54:35,031 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601949 -> 输出 601949
2025-04-16 16:54:35,031 - src.data_sources.akshare - INFO - 股票 601949 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国出版', 'exists': True}
2025-04-16 16:54:35,032 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601952 -> 输出 601952
2025-04-16 16:54:35,032 - src.data_sources.akshare - INFO - 股票 601952 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '苏垦农发', 'exists': True}
2025-04-16 16:54:35,033 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601956 -> 输出 601956
2025-04-16 16:54:35,033 - src.data_sources.akshare - INFO - 股票 601956 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东贝集团', 'exists': True}
2025-04-16 16:54:35,033 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601958 -> 输出 601958
2025-04-16 16:54:35,034 - src.data_sources.akshare - INFO - 股票 601958 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金钼股份', 'exists': True}
2025-04-16 16:54:35,034 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601963 -> 输出 601963
2025-04-16 16:54:35,035 - src.data_sources.akshare - INFO - 股票 601963 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '重庆银行', 'exists': True}
2025-04-16 16:54:35,035 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601965 -> 输出 601965
2025-04-16 16:54:35,036 - src.data_sources.akshare - INFO - 股票 601965 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国汽研', 'exists': True}
2025-04-16 16:54:35,036 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601966 -> 输出 601966
2025-04-16 16:54:35,037 - src.data_sources.akshare - INFO - 股票 601966 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '玲珑轮胎', 'exists': True}
2025-04-16 16:54:35,038 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601968 -> 输出 601968
2025-04-16 16:54:35,038 - src.data_sources.akshare - INFO - 股票 601968 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '宝钢包装', 'exists': True}
2025-04-16 16:54:35,039 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601969 -> 输出 601969
2025-04-16 16:54:35,039 - src.data_sources.akshare - INFO - 股票 601969 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海南矿业', 'exists': True}
2025-04-16 16:54:35,040 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601975 -> 输出 601975
2025-04-16 16:54:35,040 - src.data_sources.akshare - INFO - 股票 601975 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商南油', 'exists': True}
2025-04-16 16:54:35,041 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601985 -> 输出 601985
2025-04-16 16:54:35,041 - src.data_sources.akshare - INFO - 股票 601985 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国核电', 'exists': True}
2025-04-16 16:54:35,042 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601988 -> 输出 601988
2025-04-16 16:54:35,042 - src.data_sources.akshare - INFO - 股票 601988 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国银行', 'exists': True}
2025-04-16 16:54:35,042 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601989 -> 输出 601989
2025-04-16 16:54:35,043 - src.data_sources.akshare - INFO - 股票 601989 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国重工', 'exists': True}
2025-04-16 16:54:35,043 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601990 -> 输出 601990
2025-04-16 16:54:35,044 - src.data_sources.akshare - INFO - 股票 601990 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '南京证券', 'exists': True}
2025-04-16 16:54:35,044 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601991 -> 输出 601991
2025-04-16 16:54:35,045 - src.data_sources.akshare - INFO - 股票 601991 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '大唐发电', 'exists': True}
2025-04-16 16:54:35,046 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601992 -> 输出 601992
2025-04-16 16:54:35,047 - src.data_sources.akshare - INFO - 股票 601992 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金隅集团', 'exists': True}
2025-04-16 16:54:35,047 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601995 -> 输出 601995
2025-04-16 16:54:35,048 - src.data_sources.akshare - INFO - 股票 601995 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中金公司', 'exists': True}
2025-04-16 16:54:35,048 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601996 -> 输出 601996
2025-04-16 16:54:35,049 - src.data_sources.akshare - INFO - 股票 601996 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '丰林集团', 'exists': True}
2025-04-16 16:54:35,049 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601997 -> 输出 601997
2025-04-16 16:54:35,049 - src.data_sources.akshare - INFO - 股票 601997 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵阳银行', 'exists': True}
2025-04-16 16:54:35,050 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601998 -> 输出 601998
2025-04-16 16:54:35,050 - src.data_sources.akshare - INFO - 股票 601998 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中信银行', 'exists': True}
2025-04-16 16:54:35,051 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601999 -> 输出 601999
2025-04-16 16:54:35,051 - src.data_sources.akshare - INFO - 股票 601999 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '出版传媒', 'exists': True}
2025-04-16 16:54:35,052 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603001 -> 输出 603001
2025-04-16 16:54:35,052 - src.data_sources.akshare - INFO - 股票 603001 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '奥康国际', 'exists': True}
2025-04-16 16:54:35,052 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603010 -> 输出 603010
2025-04-16 16:54:35,053 - src.data_sources.akshare - INFO - 股票 603010 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '万盛股份', 'exists': True}
2025-04-16 16:54:35,054 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603011 -> 输出 603011
2025-04-16 16:54:35,054 - src.data_sources.akshare - INFO - 股票 603011 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '合锻智能', 'exists': True}
2025-04-16 16:54:35,055 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603012 -> 输出 603012
2025-04-16 16:54:35,055 - src.data_sources.akshare - INFO - 股票 603012 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '创力集团', 'exists': True}
2025-04-16 16:54:35,056 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603013 -> 输出 603013
2025-04-16 16:54:35,056 - src.data_sources.akshare - INFO - 股票 603013 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '亚普股份', 'exists': True}
2025-04-16 16:54:35,057 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603015 -> 输出 603015
2025-04-16 16:54:35,057 - src.data_sources.akshare - INFO - 股票 603015 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '弘讯科技', 'exists': True}
2025-04-16 16:54:35,057 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603016 -> 输出 603016
2025-04-16 16:54:35,058 - src.data_sources.akshare - INFO - 股票 603016 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '新宏泰', 'exists': True}
2025-04-16 16:54:35,058 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603017 -> 输出 603017
2025-04-16 16:54:35,059 - src.data_sources.akshare - INFO - 股票 603017 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中衡设计', 'exists': True}
2025-04-16 16:54:35,059 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603018 -> 输出 603018
2025-04-16 16:54:35,060 - src.data_sources.akshare - INFO - 股票 603018 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华设集团', 'exists': True}
2025-04-16 16:54:35,060 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603019 -> 输出 603019
2025-04-16 16:54:35,061 - src.data_sources.akshare - INFO - 股票 603019 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中科曙光', 'exists': True}
2025-04-16 16:54:35,061 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603021 -> 输出 603021
2025-04-16 16:54:35,062 - src.data_sources.akshare - INFO - 股票 603021 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '山东华鹏', 'exists': True}
2025-04-16 16:54:35,063 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603031 -> 输出 603031
2025-04-16 16:54:35,064 - src.data_sources.akshare - INFO - 股票 603031 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '安孚科技', 'exists': True}
2025-04-16 16:54:35,064 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603041 -> 输出 603041
2025-04-16 16:54:35,065 - src.data_sources.akshare - INFO - 股票 603041 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '美思德', 'exists': True}
2025-04-16 16:54:35,065 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603051 -> 输出 603051
2025-04-16 16:54:35,066 - src.data_sources.akshare - INFO - 股票 603051 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '鹿山新材', 'exists': True}
2025-04-16 16:54:35,066 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603061 -> 输出 603061
2025-04-16 16:54:35,067 - src.data_sources.akshare - INFO - 股票 603061 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金海通', 'exists': True}
2025-04-16 16:54:35,067 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603071 -> 输出 603071
2025-04-16 16:54:35,068 - src.data_sources.akshare - INFO - 股票 603071 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '物产环能', 'exists': True}
2025-04-16 16:54:35,068 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603081 -> 输出 603081
2025-04-16 16:54:35,069 - src.data_sources.akshare - INFO - 股票 603081 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '大丰实业', 'exists': True}
2025-04-16 16:54:35,069 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603091 -> 输出 603091
2025-04-16 16:54:35,069 - src.data_sources.akshare - INFO - 股票 603091 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '众鑫股份', 'exists': True}
2025-04-16 16:54:35,070 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603100 -> 输出 603100
2025-04-16 16:54:35,071 - src.data_sources.akshare - INFO - 股票 603100 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '川仪股份', 'exists': True}
2025-04-16 16:54:35,071 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603101 -> 输出 603101
2025-04-16 16:54:35,072 - src.data_sources.akshare - INFO - 股票 603101 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '汇嘉时代', 'exists': True}
2025-04-16 16:54:35,072 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603102 -> 输出 603102
2025-04-16 16:54:35,073 - src.data_sources.akshare - INFO - 股票 603102 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '百合股份', 'exists': True}
2025-04-16 16:54:35,073 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603103 -> 输出 603103
2025-04-16 16:54:35,074 - src.data_sources.akshare - INFO - 股票 603103 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '横店影视', 'exists': True}
2025-04-16 16:54:35,074 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603105 -> 输出 603105
2025-04-16 16:54:35,074 - src.data_sources.akshare - INFO - 股票 603105 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '芯能科技', 'exists': True}
2025-04-16 16:54:35,075 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603106 -> 输出 603106
2025-04-16 16:54:35,075 - src.data_sources.akshare - INFO - 股票 603106 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒银科技', 'exists': True}
2025-04-16 16:54:35,076 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603107 -> 输出 603107
2025-04-16 16:54:35,076 - src.data_sources.akshare - INFO - 股票 603107 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海汽配', 'exists': True}
2025-04-16 16:54:35,077 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603108 -> 输出 603108
2025-04-16 16:54:35,077 - src.data_sources.akshare - INFO - 股票 603108 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '润达医疗', 'exists': True}
2025-04-16 16:54:35,077 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603109 -> 输出 603109
2025-04-16 16:54:35,079 - src.data_sources.akshare - INFO - 股票 603109 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '神驰机电', 'exists': True}
2025-04-16 16:54:35,079 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603110 -> 输出 603110
2025-04-16 16:54:35,080 - src.data_sources.akshare - INFO - 股票 603110 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东方材料', 'exists': True}
2025-04-16 16:54:35,080 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603111 -> 输出 603111
2025-04-16 16:54:35,081 - src.data_sources.akshare - INFO - 股票 603111 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '康尼机电', 'exists': True}
2025-04-16 16:54:35,081 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603112 -> 输出 603112
2025-04-16 16:54:35,082 - src.data_sources.akshare - INFO - 股票 603112 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华翔股份', 'exists': True}
2025-04-16 16:54:35,082 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603113 -> 输出 603113
2025-04-16 16:54:35,082 - src.data_sources.akshare - INFO - 股票 603113 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金能科技', 'exists': True}
2025-04-16 16:54:35,083 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603115 -> 输出 603115
2025-04-16 16:54:35,083 - src.data_sources.akshare - INFO - 股票 603115 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海星股份', 'exists': True}
2025-04-16 16:54:35,084 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603116 -> 输出 603116
2025-04-16 16:54:35,084 - src.data_sources.akshare - INFO - 股票 603116 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '红蜻蜓', 'exists': True}
2025-04-16 16:54:35,085 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603117 -> 输出 603117
2025-04-16 16:54:35,085 - src.data_sources.akshare - INFO - 股票 603117 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '万林物流', 'exists': True}
2025-04-16 16:54:35,085 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603118 -> 输出 603118
2025-04-16 16:54:35,086 - src.data_sources.akshare - INFO - 股票 603118 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '共进股份', 'exists': True}
2025-04-16 16:54:35,087 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603119 -> 输出 603119
2025-04-16 16:54:35,087 - src.data_sources.akshare - INFO - 股票 603119 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '浙江荣泰', 'exists': True}
2025-04-16 16:54:35,088 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603120 -> 输出 603120
2025-04-16 16:54:35,088 - src.data_sources.akshare - INFO - 股票 603120 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '-', 'exists': True}
2025-04-16 16:54:35,089 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603121 -> 输出 603121
2025-04-16 16:54:35,089 - src.data_sources.akshare - INFO - 股票 603121 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华培动力', 'exists': True}
2025-04-16 16:54:35,090 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603122 -> 输出 603122
2025-04-16 16:54:35,091 - src.data_sources.akshare - INFO - 股票 603122 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '合富中国', 'exists': True}
2025-04-16 16:54:35,091 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603123 -> 输出 603123
2025-04-16 16:54:35,092 - src.data_sources.akshare - INFO - 股票 603123 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '翠微股份', 'exists': True}
2025-04-16 16:54:35,092 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603124 -> 输出 603124
2025-04-16 16:54:35,093 - src.data_sources.akshare - INFO - 股票 603124 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '江南新材', 'exists': True}
2025-04-16 16:54:35,093 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603125 -> 输出 603125
2025-04-16 16:54:35,094 - src.data_sources.akshare - INFO - 股票 603125 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '常青科技', 'exists': True}
2025-04-16 16:54:35,094 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603126 -> 输出 603126
2025-04-16 16:54:35,095 - src.data_sources.akshare - INFO - 股票 603126 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中材节能', 'exists': True}
2025-04-16 16:54:35,095 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603127 -> 输出 603127
2025-04-16 16:54:35,096 - src.data_sources.akshare - INFO - 股票 603127 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '昭衍新药', 'exists': True}
2025-04-16 16:54:35,097 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603128 -> 输出 603128
2025-04-16 16:54:35,097 - src.data_sources.akshare - INFO - 股票 603128 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华贸物流', 'exists': True}
2025-04-16 16:54:35,098 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603129 -> 输出 603129
2025-04-16 16:54:35,098 - src.data_sources.akshare - INFO - 股票 603129 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '春风动力', 'exists': True}
2025-04-16 16:54:35,099 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603130 -> 输出 603130
2025-04-16 16:54:35,099 - src.data_sources.akshare - INFO - 股票 603130 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '云中马', 'exists': True}
2025-04-16 16:54:35,100 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603131 -> 输出 603131
2025-04-16 16:54:35,100 - src.data_sources.akshare - INFO - 股票 603131 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海沪工', 'exists': True}
2025-04-16 16:54:35,100 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603132 -> 输出 603132
2025-04-16 16:54:35,101 - src.data_sources.akshare - INFO - 股票 603132 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金徽股份', 'exists': True}
2025-04-16 16:54:35,101 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603135 -> 输出 603135
2025-04-16 16:54:35,102 - src.data_sources.akshare - INFO - 股票 603135 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中重科技', 'exists': True}
2025-04-16 16:54:35,102 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603136 -> 输出 603136
2025-04-16 16:54:35,103 - src.data_sources.akshare - INFO - 股票 603136 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '天目湖', 'exists': True}
2025-04-16 16:54:35,103 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603137 -> 输出 603137
2025-04-16 16:54:35,104 - src.data_sources.akshare - INFO - 股票 603137 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒尚节能', 'exists': True}
2025-04-16 16:54:35,105 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603138 -> 输出 603138
2025-04-16 16:54:35,106 - src.data_sources.akshare - INFO - 股票 603138 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海量数据', 'exists': True}
2025-04-16 16:54:35,106 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603139 -> 输出 603139
2025-04-16 16:54:35,107 - src.data_sources.akshare - INFO - 股票 603139 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '康惠制药', 'exists': True}
2025-04-16 16:54:35,107 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603150 -> 输出 603150
2025-04-16 16:54:35,107 - src.data_sources.akshare - INFO - 股票 603150 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '万朗磁塑', 'exists': True}
2025-04-16 16:54:35,108 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603151 -> 输出 603151
2025-04-16 16:54:35,108 - src.data_sources.akshare - INFO - 股票 603151 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '邦基科技', 'exists': True}
2025-04-16 16:54:35,109 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603153 -> 输出 603153
2025-04-16 16:54:35,109 - src.data_sources.akshare - INFO - 股票 603153 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海建科', 'exists': True}
2025-04-16 16:54:35,110 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603155 -> 输出 603155
2025-04-16 16:54:35,110 - src.data_sources.akshare - INFO - 股票 603155 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '新亚强', 'exists': True}
2025-04-16 16:54:35,110 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603156 -> 输出 603156
2025-04-16 16:54:35,111 - src.data_sources.akshare - INFO - 股票 603156 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '养元饮品', 'exists': True}
2025-04-16 16:54:35,111 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603158 -> 输出 603158
2025-04-16 16:54:35,113 - src.data_sources.akshare - INFO - 股票 603158 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '腾龙股份', 'exists': True}
2025-04-16 16:54:35,113 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603159 -> 输出 603159
2025-04-16 16:54:35,114 - src.data_sources.akshare - INFO - 股票 603159 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海亚虹', 'exists': True}
2025-04-16 16:54:35,114 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603160 -> 输出 603160
2025-04-16 16:54:35,115 - src.data_sources.akshare - INFO - 股票 603160 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '汇顶科技', 'exists': True}
2025-04-16 16:54:35,115 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603161 -> 输出 603161
2025-04-16 16:54:35,116 - src.data_sources.akshare - INFO - 股票 603161 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '科华控股', 'exists': True}
2025-04-16 16:54:35,116 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603162 -> 输出 603162
2025-04-16 16:54:35,117 - src.data_sources.akshare - INFO - 股票 603162 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海通发展', 'exists': True}
2025-04-16 16:54:35,117 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603163 -> 输出 603163
2025-04-16 16:54:35,118 - src.data_sources.akshare - INFO - 股票 603163 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '圣晖集成', 'exists': True}
2025-04-16 16:54:35,118 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603165 -> 输出 603165
2025-04-16 16:54:35,119 - src.data_sources.akshare - INFO - 股票 603165 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '荣晟环保', 'exists': True}
2025-04-16 16:54:35,119 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603166 -> 输出 603166
2025-04-16 16:54:35,120 - src.data_sources.akshare - INFO - 股票 603166 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '福达股份', 'exists': True}
2025-04-16 16:54:35,120 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603167 -> 输出 603167
2025-04-16 16:54:35,121 - src.data_sources.akshare - INFO - 股票 603167 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '渤海轮渡', 'exists': True}
2025-04-16 16:54:35,121 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603168 -> 输出 603168
2025-04-16 16:54:35,122 - src.data_sources.akshare - INFO - 股票 603168 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '莎普爱思', 'exists': True}
2025-04-16 16:54:35,122 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603169 -> 输出 603169
2025-04-16 16:54:35,123 - src.data_sources.akshare - INFO - 股票 603169 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '兰石重装', 'exists': True}
2025-04-16 16:54:35,123 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603170 -> 输出 603170
2025-04-16 16:54:35,124 - src.data_sources.akshare - INFO - 股票 603170 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '宝立食品', 'exists': True}
2025-04-16 16:54:35,124 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603171 -> 输出 603171
2025-04-16 16:54:35,125 - src.data_sources.akshare - INFO - 股票 603171 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '税友股份', 'exists': True}
2025-04-16 16:54:35,125 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603172 -> 输出 603172
2025-04-16 16:54:35,126 - src.data_sources.akshare - INFO - 股票 603172 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '万丰股份', 'exists': True}
2025-04-16 16:54:35,126 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603173 -> 输出 603173
2025-04-16 16:54:35,127 - src.data_sources.akshare - INFO - 股票 603173 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '福斯达', 'exists': True}
2025-04-16 16:54:35,127 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603176 -> 输出 603176
2025-04-16 16:54:35,128 - src.data_sources.akshare - INFO - 股票 603176 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '汇通集团', 'exists': True}
2025-04-16 16:54:35,129 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603177 -> 输出 603177
2025-04-16 16:54:35,129 - src.data_sources.akshare - INFO - 股票 603177 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '德创环保', 'exists': True}
2025-04-16 16:54:35,130 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603178 -> 输出 603178
2025-04-16 16:54:35,131 - src.data_sources.akshare - INFO - 股票 603178 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '圣龙股份', 'exists': True}
2025-04-16 16:54:35,131 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603179 -> 输出 603179
2025-04-16 16:54:35,132 - src.data_sources.akshare - INFO - 股票 603179 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '新泉股份', 'exists': True}
2025-04-16 16:54:35,132 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603180 -> 输出 603180
2025-04-16 16:54:35,133 - src.data_sources.akshare - INFO - 股票 603180 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金牌家居', 'exists': True}
2025-04-16 16:54:35,133 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603181 -> 输出 603181
2025-04-16 16:54:35,134 - src.data_sources.akshare - INFO - 股票 603181 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '皇马科技', 'exists': True}
2025-04-16 16:54:35,134 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603182 -> 输出 603182
2025-04-16 16:54:35,135 - src.data_sources.akshare - INFO - 股票 603182 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '嘉华股份', 'exists': True}
2025-04-16 16:54:35,135 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603183 -> 输出 603183
2025-04-16 16:54:35,136 - src.data_sources.akshare - INFO - 股票 603183 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '建研院', 'exists': True}
2025-04-16 16:54:35,136 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603185 -> 输出 603185
2025-04-16 16:54:35,137 - src.data_sources.akshare - INFO - 股票 603185 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '弘元绿能', 'exists': True}
2025-04-16 16:54:35,137 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603186 -> 输出 603186
2025-04-16 16:54:35,138 - src.data_sources.akshare - INFO - 股票 603186 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华正新材', 'exists': True}
2025-04-16 16:54:35,138 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603187 -> 输出 603187
2025-04-16 16:54:35,139 - src.data_sources.akshare - INFO - 股票 603187 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海容冷链', 'exists': True}
2025-04-16 16:54:35,139 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603188 -> 输出 603188
2025-04-16 16:54:35,140 - src.data_sources.akshare - INFO - 股票 603188 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '亚邦股份', 'exists': True}
2025-04-16 16:54:35,140 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603189 -> 输出 603189
2025-04-16 16:54:35,141 - src.data_sources.akshare - INFO - 股票 603189 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '网达软件', 'exists': True}
2025-04-16 16:54:35,141 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603190 -> 输出 603190
2025-04-16 16:54:35,142 - src.data_sources.akshare - INFO - 股票 603190 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '亚通精工', 'exists': True}
2025-04-16 16:54:35,142 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603191 -> 输出 603191
2025-04-16 16:54:35,143 - src.data_sources.akshare - INFO - 股票 603191 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '望变电气', 'exists': True}
2025-04-16 16:54:35,143 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603192 -> 输出 603192
2025-04-16 16:54:35,144 - src.data_sources.akshare - INFO - 股票 603192 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '汇得科技', 'exists': True}
2025-04-16 16:54:35,144 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603193 -> 输出 603193
2025-04-16 16:54:35,145 - src.data_sources.akshare - INFO - 股票 603193 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '润本股份', 'exists': True}
2025-04-16 16:54:35,146 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603194 -> 输出 603194
2025-04-16 16:54:35,147 - src.data_sources.akshare - INFO - 股票 603194 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中力股份', 'exists': True}
2025-04-16 16:54:35,147 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603195 -> 输出 603195
2025-04-16 16:54:35,148 - src.data_sources.akshare - INFO - 股票 603195 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '公牛集团', 'exists': True}
2025-04-16 16:54:35,148 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603196 -> 输出 603196
2025-04-16 16:54:35,149 - src.data_sources.akshare - INFO - 股票 603196 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '日播时尚', 'exists': True}
2025-04-16 16:54:35,149 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603197 -> 输出 603197
2025-04-16 16:54:35,150 - src.data_sources.akshare - INFO - 股票 603197 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '保隆科技', 'exists': True}
2025-04-16 16:54:35,150 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603198 -> 输出 603198
2025-04-16 16:54:35,151 - src.data_sources.akshare - INFO - 股票 603198 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '迎驾贡酒', 'exists': True}
2025-04-16 16:54:35,151 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603199 -> 输出 603199
2025-04-16 16:54:35,151 - src.data_sources.akshare - INFO - 股票 603199 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '九华旅游', 'exists': True}
2025-04-16 16:54:35,152 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603201 -> 输出 603201
2025-04-16 16:54:35,152 - src.data_sources.akshare - INFO - 股票 603201 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '常润股份', 'exists': True}
2025-04-16 16:54:35,153 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603210 -> 输出 603210
2025-04-16 16:54:35,153 - src.data_sources.akshare - INFO - 股票 603210 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': 'C泰鸿', 'exists': True}
2025-04-16 16:54:35,154 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603211 -> 输出 603211
2025-04-16 16:54:35,155 - src.data_sources.akshare - INFO - 股票 603211 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '晋拓股份', 'exists': True}
2025-04-16 16:54:35,155 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603212 -> 输出 603212
2025-04-16 16:54:35,156 - src.data_sources.akshare - INFO - 股票 603212 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '赛伍技术', 'exists': True}
2025-04-16 16:54:35,156 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603213 -> 输出 603213
2025-04-16 16:54:35,157 - src.data_sources.akshare - INFO - 股票 603213 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '镇洋发展', 'exists': True}
2025-04-16 16:54:35,157 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603214 -> 输出 603214
2025-04-16 16:54:35,158 - src.data_sources.akshare - INFO - 股票 603214 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '爱婴室', 'exists': True}
2025-04-16 16:54:35,158 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603215 -> 输出 603215
2025-04-16 16:54:35,158 - src.data_sources.akshare - INFO - 股票 603215 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '比依股份', 'exists': True}
2025-04-16 16:54:35,159 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603216 -> 输出 603216
2025-04-16 16:54:35,159 - src.data_sources.akshare - INFO - 股票 603216 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '梦天家居', 'exists': True}
2025-04-16 16:54:35,160 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603217 -> 输出 603217
2025-04-16 16:54:35,160 - src.data_sources.akshare - INFO - 股票 603217 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '元利科技', 'exists': True}
2025-04-16 16:54:35,161 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603218 -> 输出 603218
2025-04-16 16:54:35,162 - src.data_sources.akshare - INFO - 股票 603218 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '日月股份', 'exists': True}
2025-04-16 16:54:35,162 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603219 -> 输出 603219
2025-04-16 16:54:35,163 - src.data_sources.akshare - INFO - 股票 603219 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '富佳股份', 'exists': True}
2025-04-16 16:54:35,163 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603221 -> 输出 603221
2025-04-16 16:54:35,164 - src.data_sources.akshare - INFO - 股票 603221 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '爱丽家居', 'exists': True}
2025-04-16 16:54:35,165 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603231 -> 输出 603231
2025-04-16 16:54:35,165 - src.data_sources.akshare - INFO - 股票 603231 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '索宝蛋白', 'exists': True}
2025-04-16 16:54:35,166 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603261 -> 输出 603261
2025-04-16 16:54:35,166 - src.data_sources.akshare - INFO - 股票 603261 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '立航科技', 'exists': True}
2025-04-16 16:54:35,167 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603271 -> 输出 603271
2025-04-16 16:54:35,167 - src.data_sources.akshare - INFO - 股票 603271 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永杰新材', 'exists': True}
2025-04-16 16:54:35,168 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603281 -> 输出 603281
2025-04-16 16:54:35,168 - src.data_sources.akshare - INFO - 股票 603281 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '江瀚新材', 'exists': True}
2025-04-16 16:54:35,169 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603291 -> 输出 603291
2025-04-16 16:54:35,169 - src.data_sources.akshare - INFO - 股票 603291 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '联合水务', 'exists': True}
2025-04-16 16:54:35,170 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603301 -> 输出 603301
2025-04-16 16:54:35,170 - src.data_sources.akshare - INFO - 股票 603301 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '振德医疗', 'exists': True}
2025-04-16 16:54:35,171 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603310 -> 输出 603310
2025-04-16 16:54:35,172 - src.data_sources.akshare - INFO - 股票 603310 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '巍华新材', 'exists': True}
2025-04-16 16:54:35,172 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603311 -> 输出 603311
2025-04-16 16:54:35,173 - src.data_sources.akshare - INFO - 股票 603311 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金海高科', 'exists': True}
2025-04-16 16:54:35,173 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603312 -> 输出 603312
2025-04-16 16:54:35,174 - src.data_sources.akshare - INFO - 股票 603312 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '西典新能', 'exists': True}
2025-04-16 16:54:35,174 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603313 -> 输出 603313
2025-04-16 16:54:35,174 - src.data_sources.akshare - INFO - 股票 603313 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '梦百合', 'exists': True}
2025-04-16 16:54:35,175 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603315 -> 输出 603315
2025-04-16 16:54:35,175 - src.data_sources.akshare - INFO - 股票 603315 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '福鞍股份', 'exists': True}
2025-04-16 16:54:35,176 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603316 -> 输出 603316
2025-04-16 16:54:35,176 - src.data_sources.akshare - INFO - 股票 603316 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '诚邦股份', 'exists': True}
2025-04-16 16:54:35,177 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603317 -> 输出 603317
2025-04-16 16:54:35,177 - src.data_sources.akshare - INFO - 股票 603317 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '天味食品', 'exists': True}
2025-04-16 16:54:35,178 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603318 -> 输出 603318
2025-04-16 16:54:35,178 - src.data_sources.akshare - INFO - 股票 603318 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '水发燃气', 'exists': True}
2025-04-16 16:54:35,179 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603319 -> 输出 603319
2025-04-16 16:54:35,180 - src.data_sources.akshare - INFO - 股票 603319 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '美湖股份', 'exists': True}
2025-04-16 16:54:35,180 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603321 -> 输出 603321
2025-04-16 16:54:35,181 - src.data_sources.akshare - INFO - 股票 603321 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '梅轮电梯', 'exists': True}
2025-04-16 16:54:35,181 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603331 -> 输出 603331
2025-04-16 16:54:35,182 - src.data_sources.akshare - INFO - 股票 603331 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '百达精工', 'exists': True}
2025-04-16 16:54:35,182 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603341 -> 输出 603341
2025-04-16 16:54:35,183 - src.data_sources.akshare - INFO - 股票 603341 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '龙旗科技', 'exists': True}
2025-04-16 16:54:35,183 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603351 -> 输出 603351
2025-04-16 16:54:35,184 - src.data_sources.akshare - INFO - 股票 603351 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '威尔药业', 'exists': True}
2025-04-16 16:54:35,184 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603381 -> 输出 603381
2025-04-16 16:54:35,185 - src.data_sources.akshare - INFO - 股票 603381 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永臻股份', 'exists': True}
2025-04-16 16:54:35,185 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603391 -> 输出 603391
2025-04-16 16:54:35,185 - src.data_sources.akshare - INFO - 股票 603391 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '力聚热能', 'exists': True}
2025-04-16 16:54:35,186 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603416 -> 输出 603416
2025-04-16 16:54:35,186 - src.data_sources.akshare - INFO - 股票 603416 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '信捷电气', 'exists': True}
2025-04-16 16:54:35,187 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603421 -> 输出 603421
2025-04-16 16:54:35,188 - src.data_sources.akshare - INFO - 股票 603421 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '鼎信通讯', 'exists': True}
2025-04-16 16:54:35,188 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603501 -> 输出 603501
2025-04-16 16:54:35,189 - src.data_sources.akshare - INFO - 股票 603501 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '韦尔股份', 'exists': True}
2025-04-16 16:54:35,189 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603511 -> 输出 603511
2025-04-16 16:54:35,190 - src.data_sources.akshare - INFO - 股票 603511 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '爱慕股份', 'exists': True}
2025-04-16 16:54:35,190 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603515 -> 输出 603515
2025-04-16 16:54:35,191 - src.data_sources.akshare - INFO - 股票 603515 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '欧普照明', 'exists': True}
2025-04-16 16:54:35,191 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603516 -> 输出 603516
2025-04-16 16:54:35,192 - src.data_sources.akshare - INFO - 股票 603516 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '淳中科技', 'exists': True}
2025-04-16 16:54:35,192 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603517 -> 输出 603517
2025-04-16 16:54:35,193 - src.data_sources.akshare - INFO - 股票 603517 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '绝味食品', 'exists': True}
2025-04-16 16:54:35,193 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603518 -> 输出 603518
2025-04-16 16:54:35,193 - src.data_sources.akshare - INFO - 股票 603518 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '锦泓集团', 'exists': True}
2025-04-16 16:54:35,194 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603519 -> 输出 603519
2025-04-16 16:54:35,194 - src.data_sources.akshare - INFO - 股票 603519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '立霸股份', 'exists': True}
2025-04-16 16:54:35,195 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603551 -> 输出 603551
2025-04-16 16:54:35,196 - src.data_sources.akshare - INFO - 股票 603551 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '奥普科技', 'exists': True}
2025-04-16 16:54:35,196 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603601 -> 输出 603601
2025-04-16 16:54:35,197 - src.data_sources.akshare - INFO - 股票 603601 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '再升科技', 'exists': True}
2025-04-16 16:54:35,197 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603610 -> 输出 603610
2025-04-16 16:54:35,198 - src.data_sources.akshare - INFO - 股票 603610 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '麒盛科技', 'exists': True}
2025-04-16 16:54:35,198 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603611 -> 输出 603611
2025-04-16 16:54:35,199 - src.data_sources.akshare - INFO - 股票 603611 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '诺力股份', 'exists': True}
2025-04-16 16:54:35,199 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603612 -> 输出 603612
2025-04-16 16:54:35,200 - src.data_sources.akshare - INFO - 股票 603612 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '索通发展', 'exists': True}
2025-04-16 16:54:35,200 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603613 -> 输出 603613
2025-04-16 16:54:35,201 - src.data_sources.akshare - INFO - 股票 603613 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国联股份', 'exists': True}
2025-04-16 16:54:35,201 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603615 -> 输出 603615
2025-04-16 16:54:35,202 - src.data_sources.akshare - INFO - 股票 603615 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '茶花股份', 'exists': True}
2025-04-16 16:54:35,202 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603616 -> 输出 603616
2025-04-16 16:54:35,202 - src.data_sources.akshare - INFO - 股票 603616 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '韩建河山', 'exists': True}
2025-04-16 16:54:35,203 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603617 -> 输出 603617
2025-04-16 16:54:35,204 - src.data_sources.akshare - INFO - 股票 603617 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '君禾股份', 'exists': True}
2025-04-16 16:54:35,204 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603618 -> 输出 603618
2025-04-16 16:54:35,205 - src.data_sources.akshare - INFO - 股票 603618 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '杭电股份', 'exists': True}
2025-04-16 16:54:35,205 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603619 -> 输出 603619
2025-04-16 16:54:35,206 - src.data_sources.akshare - INFO - 股票 603619 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中曼石油', 'exists': True}
2025-04-16 16:54:35,206 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603661 -> 输出 603661
2025-04-16 16:54:35,207 - src.data_sources.akshare - INFO - 股票 603661 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒林股份', 'exists': True}
2025-04-16 16:54:35,207 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603681 -> 输出 603681
2025-04-16 16:54:35,208 - src.data_sources.akshare - INFO - 股票 603681 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永冠新材', 'exists': True}
2025-04-16 16:54:35,208 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603701 -> 输出 603701
2025-04-16 16:54:35,209 - src.data_sources.akshare - INFO - 股票 603701 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '德宏股份', 'exists': True}
2025-04-16 16:54:35,209 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603711 -> 输出 603711
2025-04-16 16:54:35,210 - src.data_sources.akshare - INFO - 股票 603711 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '香飘飘', 'exists': True}
2025-04-16 16:54:35,210 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603712 -> 输出 603712
2025-04-16 16:54:35,211 - src.data_sources.akshare - INFO - 股票 603712 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '七一二', 'exists': True}
2025-04-16 16:54:35,211 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603713 -> 输出 603713
2025-04-16 16:54:35,212 - src.data_sources.akshare - INFO - 股票 603713 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '密尔克卫', 'exists': True}
2025-04-16 16:54:35,212 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603716 -> 输出 603716
2025-04-16 16:54:35,213 - src.data_sources.akshare - INFO - 股票 603716 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '塞力医疗', 'exists': True}
2025-04-16 16:54:35,213 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603717 -> 输出 603717
2025-04-16 16:54:35,214 - src.data_sources.akshare - INFO - 股票 603717 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '天域生物', 'exists': True}
2025-04-16 16:54:35,214 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603718 -> 输出 603718
2025-04-16 16:54:35,215 - src.data_sources.akshare - INFO - 股票 603718 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海利生物', 'exists': True}
2025-04-16 16:54:35,215 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603719 -> 输出 603719
2025-04-16 16:54:35,216 - src.data_sources.akshare - INFO - 股票 603719 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '良品铺子', 'exists': True}
2025-04-16 16:54:35,216 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603721 -> 输出 603721
2025-04-16 16:54:35,217 - src.data_sources.akshare - INFO - 股票 603721 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中广天择', 'exists': True}
2025-04-16 16:54:35,217 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603801 -> 输出 603801
2025-04-16 16:54:35,218 - src.data_sources.akshare - INFO - 股票 603801 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '志邦家居', 'exists': True}
2025-04-16 16:54:35,218 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603810 -> 输出 603810
2025-04-16 16:54:35,218 - src.data_sources.akshare - INFO - 股票 603810 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '丰山集团', 'exists': True}
2025-04-16 16:54:35,219 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603811 -> 输出 603811
2025-04-16 16:54:35,219 - src.data_sources.akshare - INFO - 股票 603811 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '诚意药业', 'exists': True}
2025-04-16 16:54:35,220 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603813 -> 输出 603813
2025-04-16 16:54:35,220 - src.data_sources.akshare - INFO - 股票 603813 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '原尚股份', 'exists': True}
2025-04-16 16:54:35,221 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603815 -> 输出 603815
2025-04-16 16:54:35,222 - src.data_sources.akshare - INFO - 股票 603815 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '交建股份', 'exists': True}
2025-04-16 16:54:35,222 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603816 -> 输出 603816
2025-04-16 16:54:35,223 - src.data_sources.akshare - INFO - 股票 603816 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '顾家家居', 'exists': True}
2025-04-16 16:54:35,223 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603817 -> 输出 603817
2025-04-16 16:54:35,223 - src.data_sources.akshare - INFO - 股票 603817 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海峡环保', 'exists': True}
2025-04-16 16:54:35,224 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603818 -> 输出 603818
2025-04-16 16:54:35,224 - src.data_sources.akshare - INFO - 股票 603818 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '曲美家居', 'exists': True}
2025-04-16 16:54:35,225 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603819 -> 输出 603819
2025-04-16 16:54:35,225 - src.data_sources.akshare - INFO - 股票 603819 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '神力股份', 'exists': True}
2025-04-16 16:54:35,226 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603861 -> 输出 603861
2025-04-16 16:54:35,226 - src.data_sources.akshare - INFO - 股票 603861 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '白云电器', 'exists': True}
2025-04-16 16:54:35,227 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603871 -> 输出 603871
2025-04-16 16:54:35,227 - src.data_sources.akshare - INFO - 股票 603871 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '嘉友国际', 'exists': True}
2025-04-16 16:54:35,228 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603881 -> 输出 603881
2025-04-16 16:54:35,228 - src.data_sources.akshare - INFO - 股票 603881 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '数据港', 'exists': True}
2025-04-16 16:54:35,229 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603901 -> 输出 603901
2025-04-16 16:54:35,230 - src.data_sources.akshare - INFO - 股票 603901 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '永创智能', 'exists': True}
2025-04-16 16:54:35,230 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603912 -> 输出 603912
2025-04-16 16:54:35,231 - src.data_sources.akshare - INFO - 股票 603912 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '佳力图', 'exists': True}
2025-04-16 16:54:35,231 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603915 -> 输出 603915
2025-04-16 16:54:35,232 - src.data_sources.akshare - INFO - 股票 603915 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国茂股份', 'exists': True}
2025-04-16 16:54:35,232 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603916 -> 输出 603916
2025-04-16 16:54:35,232 - src.data_sources.akshare - INFO - 股票 603916 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '苏博特', 'exists': True}
2025-04-16 16:54:35,233 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603917 -> 输出 603917
2025-04-16 16:54:35,233 - src.data_sources.akshare - INFO - 股票 603917 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '合力科技', 'exists': True}
2025-04-16 16:54:35,234 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603918 -> 输出 603918
2025-04-16 16:54:35,234 - src.data_sources.akshare - INFO - 股票 603918 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金桥信息', 'exists': True}
2025-04-16 16:54:35,235 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603919 -> 输出 603919
2025-04-16 16:54:35,235 - src.data_sources.akshare - INFO - 股票 603919 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金徽酒', 'exists': True}
2025-04-16 16:54:35,236 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603931 -> 输出 603931
2025-04-16 16:54:35,236 - src.data_sources.akshare - INFO - 股票 603931 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '格林达', 'exists': True}
2025-04-16 16:54:35,237 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 603991 -> 输出 603991
2025-04-16 16:54:35,238 - src.data_sources.akshare - INFO - 股票 603991 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '至正股份', 'exists': True}
2025-04-16 16:54:35,238 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605001 -> 输出 605001
2025-04-16 16:54:35,239 - src.data_sources.akshare - INFO - 股票 605001 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '威奥股份', 'exists': True}
2025-04-16 16:54:35,239 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605011 -> 输出 605011
2025-04-16 16:54:35,240 - src.data_sources.akshare - INFO - 股票 605011 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '杭州热电', 'exists': True}
2025-04-16 16:54:35,240 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605016 -> 输出 605016
2025-04-16 16:54:35,241 - src.data_sources.akshare - INFO - 股票 605016 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '百龙创园', 'exists': True}
2025-04-16 16:54:35,241 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605018 -> 输出 605018
2025-04-16 16:54:35,241 - src.data_sources.akshare - INFO - 股票 605018 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '长华集团', 'exists': True}
2025-04-16 16:54:35,242 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605081 -> 输出 605081
2025-04-16 16:54:35,242 - src.data_sources.akshare - INFO - 股票 605081 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '太和水', 'exists': True}
2025-04-16 16:54:35,243 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605100 -> 输出 605100
2025-04-16 16:54:35,243 - src.data_sources.akshare - INFO - 股票 605100 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华丰股份', 'exists': True}
2025-04-16 16:54:35,244 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605108 -> 输出 605108
2025-04-16 16:54:35,244 - src.data_sources.akshare - INFO - 股票 605108 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '同庆楼', 'exists': True}
2025-04-16 16:54:35,245 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605111 -> 输出 605111
2025-04-16 16:54:35,245 - src.data_sources.akshare - INFO - 股票 605111 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '新洁能', 'exists': True}
2025-04-16 16:54:35,246 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605116 -> 输出 605116
2025-04-16 16:54:35,247 - src.data_sources.akshare - INFO - 股票 605116 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '奥锐特', 'exists': True}
2025-04-16 16:54:35,247 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605117 -> 输出 605117
2025-04-16 16:54:35,247 - src.data_sources.akshare - INFO - 股票 605117 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '德业股份', 'exists': True}
2025-04-16 16:54:35,248 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605118 -> 输出 605118
2025-04-16 16:54:35,248 - src.data_sources.akshare - INFO - 股票 605118 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '力鼎光电', 'exists': True}
2025-04-16 16:54:35,249 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605122 -> 输出 605122
2025-04-16 16:54:35,249 - src.data_sources.akshare - INFO - 股票 605122 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '四方新材', 'exists': True}
2025-04-16 16:54:35,250 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605123 -> 输出 605123
2025-04-16 16:54:35,250 - src.data_sources.akshare - INFO - 股票 605123 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '派克新材', 'exists': True}
2025-04-16 16:54:35,250 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605128 -> 输出 605128
2025-04-16 16:54:35,251 - src.data_sources.akshare - INFO - 股票 605128 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海沿浦', 'exists': True}
2025-04-16 16:54:35,251 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605133 -> 输出 605133
2025-04-16 16:54:35,252 - src.data_sources.akshare - INFO - 股票 605133 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '嵘泰股份', 'exists': True}
2025-04-16 16:54:35,252 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605136 -> 输出 605136
2025-04-16 16:54:35,253 - src.data_sources.akshare - INFO - 股票 605136 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '丽人丽妆', 'exists': True}
2025-04-16 16:54:35,253 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605138 -> 输出 605138
2025-04-16 16:54:35,254 - src.data_sources.akshare - INFO - 股票 605138 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '盛泰集团', 'exists': True}
2025-04-16 16:54:35,255 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605151 -> 输出 605151
2025-04-16 16:54:35,255 - src.data_sources.akshare - INFO - 股票 605151 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '西上海', 'exists': True}
2025-04-16 16:54:35,256 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605155 -> 输出 605155
2025-04-16 16:54:35,256 - src.data_sources.akshare - INFO - 股票 605155 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '西大门', 'exists': True}
2025-04-16 16:54:35,257 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605158 -> 输出 605158
2025-04-16 16:54:35,257 - src.data_sources.akshare - INFO - 股票 605158 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华达新材', 'exists': True}
2025-04-16 16:54:35,258 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605162 -> 输出 605162
2025-04-16 16:54:35,258 - src.data_sources.akshare - INFO - 股票 605162 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '新中港', 'exists': True}
2025-04-16 16:54:35,259 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605166 -> 输出 605166
2025-04-16 16:54:35,259 - src.data_sources.akshare - INFO - 股票 605166 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '聚合顺', 'exists': True}
2025-04-16 16:54:35,260 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605167 -> 输出 605167
2025-04-16 16:54:35,260 - src.data_sources.akshare - INFO - 股票 605167 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '利柏特', 'exists': True}
2025-04-16 16:54:35,261 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605168 -> 输出 605168
2025-04-16 16:54:35,261 - src.data_sources.akshare - INFO - 股票 605168 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '三人行', 'exists': True}
2025-04-16 16:54:35,262 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605169 -> 输出 605169
2025-04-16 16:54:35,263 - src.data_sources.akshare - INFO - 股票 605169 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '洪通燃气', 'exists': True}
2025-04-16 16:54:35,263 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605177 -> 输出 605177
2025-04-16 16:54:35,264 - src.data_sources.akshare - INFO - 股票 605177 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东亚药业', 'exists': True}
2025-04-16 16:54:35,264 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605178 -> 输出 605178
2025-04-16 16:54:35,264 - src.data_sources.akshare - INFO - 股票 605178 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '时空科技', 'exists': True}
2025-04-16 16:54:35,265 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605179 -> 输出 605179
2025-04-16 16:54:35,265 - src.data_sources.akshare - INFO - 股票 605179 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '一鸣食品', 'exists': True}
2025-04-16 16:54:35,266 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605180 -> 输出 605180
2025-04-16 16:54:35,266 - src.data_sources.akshare - INFO - 股票 605180 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华生科技', 'exists': True}
2025-04-16 16:54:35,267 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605183 -> 输出 605183
2025-04-16 16:54:35,267 - src.data_sources.akshare - INFO - 股票 605183 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '确成股份', 'exists': True}
2025-04-16 16:54:35,268 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605186 -> 输出 605186
2025-04-16 16:54:35,268 - src.data_sources.akshare - INFO - 股票 605186 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '健麾信息', 'exists': True}
2025-04-16 16:54:35,268 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605188 -> 输出 605188
2025-04-16 16:54:35,269 - src.data_sources.akshare - INFO - 股票 605188 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国光连锁', 'exists': True}
2025-04-16 16:54:35,270 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605189 -> 输出 605189
2025-04-16 16:54:35,270 - src.data_sources.akshare - INFO - 股票 605189 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '富春染织', 'exists': True}
2025-04-16 16:54:35,271 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605196 -> 输出 605196
2025-04-16 16:54:35,272 - src.data_sources.akshare - INFO - 股票 605196 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华通线缆', 'exists': True}
2025-04-16 16:54:35,272 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605198 -> 输出 605198
2025-04-16 16:54:35,273 - src.data_sources.akshare - INFO - 股票 605198 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '安德利', 'exists': True}
2025-04-16 16:54:35,273 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605199 -> 输出 605199
2025-04-16 16:54:35,274 - src.data_sources.akshare - INFO - 股票 605199 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '葫芦娃', 'exists': True}
2025-04-16 16:54:35,274 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605218 -> 输出 605218
2025-04-16 16:54:35,275 - src.data_sources.akshare - INFO - 股票 605218 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '伟时电子', 'exists': True}
2025-04-16 16:54:35,275 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605318 -> 输出 605318
2025-04-16 16:54:35,275 - src.data_sources.akshare - INFO - 股票 605318 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '法狮龙', 'exists': True}
2025-04-16 16:54:35,276 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 605319 -> 输出 605319
2025-04-16 16:54:35,276 - src.data_sources.akshare - INFO - 股票 605319 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '无锡振华', 'exists': True}
2025-04-16 16:54:35,277 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 16:54:35,277 - src.data_sources.akshare - INFO - 股票 688001 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华兴源创', 'exists': True}
2025-04-16 16:54:35,278 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688010 -> 输出 688010
2025-04-16 16:54:35,279 - src.data_sources.akshare - INFO - 股票 688010 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '福光股份', 'exists': True}
2025-04-16 16:54:35,279 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688011 -> 输出 688011
2025-04-16 16:54:35,280 - src.data_sources.akshare - INFO - 股票 688011 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '新光光电', 'exists': True}
2025-04-16 16:54:35,281 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688012 -> 输出 688012
2025-04-16 16:54:35,281 - src.data_sources.akshare - INFO - 股票 688012 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中微公司', 'exists': True}
2025-04-16 16:54:35,282 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688013 -> 输出 688013
2025-04-16 16:54:35,282 - src.data_sources.akshare - INFO - 股票 688013 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '天臣医疗', 'exists': True}
2025-04-16 16:54:35,283 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688015 -> 输出 688015
2025-04-16 16:54:35,283 - src.data_sources.akshare - INFO - 股票 688015 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '交控科技', 'exists': True}
2025-04-16 16:54:35,284 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688016 -> 输出 688016
2025-04-16 16:54:35,285 - src.data_sources.akshare - INFO - 股票 688016 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '心脉医疗', 'exists': True}
2025-04-16 16:54:35,285 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688017 -> 输出 688017
2025-04-16 16:54:35,286 - src.data_sources.akshare - INFO - 股票 688017 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '绿的谐波', 'exists': True}
2025-04-16 16:54:35,286 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688018 -> 输出 688018
2025-04-16 16:54:35,287 - src.data_sources.akshare - INFO - 股票 688018 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '乐鑫科技', 'exists': True}
2025-04-16 16:54:35,287 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688019 -> 输出 688019
2025-04-16 16:54:35,288 - src.data_sources.akshare - INFO - 股票 688019 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '安集科技', 'exists': True}
2025-04-16 16:54:35,288 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688021 -> 输出 688021
2025-04-16 16:54:35,289 - src.data_sources.akshare - INFO - 股票 688021 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '奥福环保', 'exists': True}
2025-04-16 16:54:35,289 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688031 -> 输出 688031
2025-04-16 16:54:35,290 - src.data_sources.akshare - INFO - 股票 688031 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '星环科技', 'exists': True}
2025-04-16 16:54:35,290 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688041 -> 输出 688041
2025-04-16 16:54:35,291 - src.data_sources.akshare - INFO - 股票 688041 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海光信息', 'exists': True}
2025-04-16 16:54:35,291 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688051 -> 输出 688051
2025-04-16 16:54:35,292 - src.data_sources.akshare - INFO - 股票 688051 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '佳华科技', 'exists': True}
2025-04-16 16:54:35,292 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688061 -> 输出 688061
2025-04-16 16:54:35,292 - src.data_sources.akshare - INFO - 股票 688061 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '灿瑞科技', 'exists': True}
2025-04-16 16:54:35,293 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688071 -> 输出 688071
2025-04-16 16:54:35,293 - src.data_sources.akshare - INFO - 股票 688071 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华依科技', 'exists': True}
2025-04-16 16:54:35,294 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688081 -> 输出 688081
2025-04-16 16:54:35,294 - src.data_sources.akshare - INFO - 股票 688081 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '兴图新科', 'exists': True}
2025-04-16 16:54:35,295 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688091 -> 输出 688091
2025-04-16 16:54:35,296 - src.data_sources.akshare - INFO - 股票 688091 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '上海谊众', 'exists': True}
2025-04-16 16:54:35,296 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688100 -> 输出 688100
2025-04-16 16:54:35,297 - src.data_sources.akshare - INFO - 股票 688100 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '威胜信息', 'exists': True}
2025-04-16 16:54:35,297 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688101 -> 输出 688101
2025-04-16 16:54:35,298 - src.data_sources.akshare - INFO - 股票 688101 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '三达膜', 'exists': True}
2025-04-16 16:54:35,298 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688102 -> 输出 688102
2025-04-16 16:54:35,299 - src.data_sources.akshare - INFO - 股票 688102 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '斯瑞新材', 'exists': True}
2025-04-16 16:54:35,299 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688103 -> 输出 688103
2025-04-16 16:54:35,300 - src.data_sources.akshare - INFO - 股票 688103 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '国力股份', 'exists': True}
2025-04-16 16:54:35,300 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688105 -> 输出 688105
2025-04-16 16:54:35,301 - src.data_sources.akshare - INFO - 股票 688105 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '诺唯赞', 'exists': True}
2025-04-16 16:54:35,301 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688106 -> 输出 688106
2025-04-16 16:54:35,302 - src.data_sources.akshare - INFO - 股票 688106 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金宏气体', 'exists': True}
2025-04-16 16:54:35,302 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688107 -> 输出 688107
2025-04-16 16:54:35,303 - src.data_sources.akshare - INFO - 股票 688107 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '安路科技', 'exists': True}
2025-04-16 16:54:35,303 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688108 -> 输出 688108
2025-04-16 16:54:35,304 - src.data_sources.akshare - INFO - 股票 688108 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '赛诺医疗', 'exists': True}
2025-04-16 16:54:35,304 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688109 -> 输出 688109
2025-04-16 16:54:35,305 - src.data_sources.akshare - INFO - 股票 688109 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '品茗科技', 'exists': True}
2025-04-16 16:54:35,305 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688110 -> 输出 688110
2025-04-16 16:54:35,306 - src.data_sources.akshare - INFO - 股票 688110 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东芯股份', 'exists': True}
2025-04-16 16:54:35,306 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688111 -> 输出 688111
2025-04-16 16:54:35,307 - src.data_sources.akshare - INFO - 股票 688111 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金山办公', 'exists': True}
2025-04-16 16:54:35,307 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688112 -> 输出 688112
2025-04-16 16:54:35,308 - src.data_sources.akshare - INFO - 股票 688112 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '鼎阳科技', 'exists': True}
2025-04-16 16:54:35,308 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688113 -> 输出 688113
2025-04-16 16:54:35,309 - src.data_sources.akshare - INFO - 股票 688113 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '联测科技', 'exists': True}
2025-04-16 16:54:35,309 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688114 -> 输出 688114
2025-04-16 16:54:35,310 - src.data_sources.akshare - INFO - 股票 688114 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华大智造', 'exists': True}
2025-04-16 16:54:35,310 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688115 -> 输出 688115
2025-04-16 16:54:35,310 - src.data_sources.akshare - INFO - 股票 688115 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '思林杰', 'exists': True}
2025-04-16 16:54:35,311 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688116 -> 输出 688116
2025-04-16 16:54:35,311 - src.data_sources.akshare - INFO - 股票 688116 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '天奈科技', 'exists': True}
2025-04-16 16:54:35,312 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688117 -> 输出 688117
2025-04-16 16:54:35,313 - src.data_sources.akshare - INFO - 股票 688117 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '圣诺生物', 'exists': True}
2025-04-16 16:54:35,313 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688118 -> 输出 688118
2025-04-16 16:54:35,314 - src.data_sources.akshare - INFO - 股票 688118 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '普元信息', 'exists': True}
2025-04-16 16:54:35,314 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688119 -> 输出 688119
2025-04-16 16:54:35,315 - src.data_sources.akshare - INFO - 股票 688119 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中钢洛耐', 'exists': True}
2025-04-16 16:54:35,315 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688120 -> 输出 688120
2025-04-16 16:54:35,315 - src.data_sources.akshare - INFO - 股票 688120 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华海清科', 'exists': True}
2025-04-16 16:54:35,316 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688121 -> 输出 688121
2025-04-16 16:54:35,316 - src.data_sources.akshare - INFO - 股票 688121 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '卓然股份', 'exists': True}
2025-04-16 16:54:35,317 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688122 -> 输出 688122
2025-04-16 16:54:35,317 - src.data_sources.akshare - INFO - 股票 688122 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '西部超导', 'exists': True}
2025-04-16 16:54:35,317 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688123 -> 输出 688123
2025-04-16 16:54:35,318 - src.data_sources.akshare - INFO - 股票 688123 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '聚辰股份', 'exists': True}
2025-04-16 16:54:35,318 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688125 -> 输出 688125
2025-04-16 16:54:35,319 - src.data_sources.akshare - INFO - 股票 688125 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '安达智能', 'exists': True}
2025-04-16 16:54:35,319 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688126 -> 输出 688126
2025-04-16 16:54:35,320 - src.data_sources.akshare - INFO - 股票 688126 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '沪硅产业', 'exists': True}
2025-04-16 16:54:35,320 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688127 -> 输出 688127
2025-04-16 16:54:35,321 - src.data_sources.akshare - INFO - 股票 688127 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '蓝特光学', 'exists': True}
2025-04-16 16:54:35,322 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688128 -> 输出 688128
2025-04-16 16:54:35,322 - src.data_sources.akshare - INFO - 股票 688128 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中国电研', 'exists': True}
2025-04-16 16:54:35,323 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688129 -> 输出 688129
2025-04-16 16:54:35,323 - src.data_sources.akshare - INFO - 股票 688129 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东来技术', 'exists': True}
2025-04-16 16:54:35,324 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688130 -> 输出 688130
2025-04-16 16:54:35,324 - src.data_sources.akshare - INFO - 股票 688130 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '晶华微', 'exists': True}
2025-04-16 16:54:35,325 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688131 -> 输出 688131
2025-04-16 16:54:35,325 - src.data_sources.akshare - INFO - 股票 688131 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '皓元医药', 'exists': True}
2025-04-16 16:54:35,325 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688132 -> 输出 688132
2025-04-16 16:54:35,326 - src.data_sources.akshare - INFO - 股票 688132 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '邦彦技术', 'exists': True}
2025-04-16 16:54:35,326 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688133 -> 输出 688133
2025-04-16 16:54:35,327 - src.data_sources.akshare - INFO - 股票 688133 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '泰坦科技', 'exists': True}
2025-04-16 16:54:35,327 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688135 -> 输出 688135
2025-04-16 16:54:35,328 - src.data_sources.akshare - INFO - 股票 688135 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '利扬芯片', 'exists': True}
2025-04-16 16:54:35,329 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688136 -> 输出 688136
2025-04-16 16:54:35,330 - src.data_sources.akshare - INFO - 股票 688136 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '科兴制药', 'exists': True}
2025-04-16 16:54:35,330 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688137 -> 输出 688137
2025-04-16 16:54:35,331 - src.data_sources.akshare - INFO - 股票 688137 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '近岸蛋白', 'exists': True}
2025-04-16 16:54:35,331 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688138 -> 输出 688138
2025-04-16 16:54:35,332 - src.data_sources.akshare - INFO - 股票 688138 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '清溢光电', 'exists': True}
2025-04-16 16:54:35,332 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688139 -> 输出 688139
2025-04-16 16:54:35,333 - src.data_sources.akshare - INFO - 股票 688139 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海尔生物', 'exists': True}
2025-04-16 16:54:35,334 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688141 -> 输出 688141
2025-04-16 16:54:35,334 - src.data_sources.akshare - INFO - 股票 688141 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '杰华特', 'exists': True}
2025-04-16 16:54:35,335 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688143 -> 输出 688143
2025-04-16 16:54:35,335 - src.data_sources.akshare - INFO - 股票 688143 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '长盈通', 'exists': True}
2025-04-16 16:54:35,336 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688146 -> 输出 688146
2025-04-16 16:54:35,337 - src.data_sources.akshare - INFO - 股票 688146 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中船特气', 'exists': True}
2025-04-16 16:54:35,337 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688147 -> 输出 688147
2025-04-16 16:54:35,338 - src.data_sources.akshare - INFO - 股票 688147 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '微导纳米', 'exists': True}
2025-04-16 16:54:35,338 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688148 -> 输出 688148
2025-04-16 16:54:35,339 - src.data_sources.akshare - INFO - 股票 688148 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '芳源股份', 'exists': True}
2025-04-16 16:54:35,339 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688150 -> 输出 688150
2025-04-16 16:54:35,340 - src.data_sources.akshare - INFO - 股票 688150 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '莱特光电', 'exists': True}
2025-04-16 16:54:35,340 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688151 -> 输出 688151
2025-04-16 16:54:35,341 - src.data_sources.akshare - INFO - 股票 688151 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华强科技', 'exists': True}
2025-04-16 16:54:35,341 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688152 -> 输出 688152
2025-04-16 16:54:35,342 - src.data_sources.akshare - INFO - 股票 688152 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '麒麟信安', 'exists': True}
2025-04-16 16:54:35,342 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688153 -> 输出 688153
2025-04-16 16:54:35,342 - src.data_sources.akshare - INFO - 股票 688153 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '唯捷创芯', 'exists': True}
2025-04-16 16:54:35,343 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688155 -> 输出 688155
2025-04-16 16:54:35,343 - src.data_sources.akshare - INFO - 股票 688155 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '先惠技术', 'exists': True}
2025-04-16 16:54:35,344 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688156 -> 输出 688156
2025-04-16 16:54:35,344 - src.data_sources.akshare - INFO - 股票 688156 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '路德环境', 'exists': True}
2025-04-16 16:54:35,345 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688157 -> 输出 688157
2025-04-16 16:54:35,345 - src.data_sources.akshare - INFO - 股票 688157 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '松井股份', 'exists': True}
2025-04-16 16:54:35,346 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688158 -> 输出 688158
2025-04-16 16:54:35,347 - src.data_sources.akshare - INFO - 股票 688158 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '优刻得', 'exists': True}
2025-04-16 16:54:35,347 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688159 -> 输出 688159
2025-04-16 16:54:35,348 - src.data_sources.akshare - INFO - 股票 688159 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '有方科技', 'exists': True}
2025-04-16 16:54:35,348 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688160 -> 输出 688160
2025-04-16 16:54:35,349 - src.data_sources.akshare - INFO - 股票 688160 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '步科股份', 'exists': True}
2025-04-16 16:54:35,349 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688161 -> 输出 688161
2025-04-16 16:54:35,350 - src.data_sources.akshare - INFO - 股票 688161 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '威高骨科', 'exists': True}
2025-04-16 16:54:35,350 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688162 -> 输出 688162
2025-04-16 16:54:35,351 - src.data_sources.akshare - INFO - 股票 688162 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '巨一科技', 'exists': True}
2025-04-16 16:54:35,351 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688163 -> 输出 688163
2025-04-16 16:54:35,352 - src.data_sources.akshare - INFO - 股票 688163 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '赛伦生物', 'exists': True}
2025-04-16 16:54:35,352 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688165 -> 输出 688165
2025-04-16 16:54:35,353 - src.data_sources.akshare - INFO - 股票 688165 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '埃夫特', 'exists': True}
2025-04-16 16:54:35,353 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688166 -> 输出 688166
2025-04-16 16:54:35,354 - src.data_sources.akshare - INFO - 股票 688166 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '博瑞医药', 'exists': True}
2025-04-16 16:54:35,354 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688167 -> 输出 688167
2025-04-16 16:54:35,355 - src.data_sources.akshare - INFO - 股票 688167 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '炬光科技', 'exists': True}
2025-04-16 16:54:35,355 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688168 -> 输出 688168
2025-04-16 16:54:35,356 - src.data_sources.akshare - INFO - 股票 688168 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '安博通', 'exists': True}
2025-04-16 16:54:35,356 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688169 -> 输出 688169
2025-04-16 16:54:35,357 - src.data_sources.akshare - INFO - 股票 688169 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '石头科技', 'exists': True}
2025-04-16 16:54:35,357 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688170 -> 输出 688170
2025-04-16 16:54:35,357 - src.data_sources.akshare - INFO - 股票 688170 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '德龙激光', 'exists': True}
2025-04-16 16:54:35,358 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688171 -> 输出 688171
2025-04-16 16:54:35,358 - src.data_sources.akshare - INFO - 股票 688171 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '纬德信息', 'exists': True}
2025-04-16 16:54:35,359 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688172 -> 输出 688172
2025-04-16 16:54:35,359 - src.data_sources.akshare - INFO - 股票 688172 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '燕东微', 'exists': True}
2025-04-16 16:54:35,359 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688173 -> 输出 688173
2025-04-16 16:54:35,360 - src.data_sources.akshare - INFO - 股票 688173 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '希荻微', 'exists': True}
2025-04-16 16:54:35,360 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688175 -> 输出 688175
2025-04-16 16:54:35,361 - src.data_sources.akshare - INFO - 股票 688175 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '高凌信息', 'exists': True}
2025-04-16 16:54:35,361 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688176 -> 输出 688176
2025-04-16 16:54:35,362 - src.data_sources.akshare - INFO - 股票 688176 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '亚虹医药', 'exists': True}
2025-04-16 16:54:35,363 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688177 -> 输出 688177
2025-04-16 16:54:35,363 - src.data_sources.akshare - INFO - 股票 688177 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '百奥泰', 'exists': True}
2025-04-16 16:54:35,364 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688178 -> 输出 688178
2025-04-16 16:54:35,364 - src.data_sources.akshare - INFO - 股票 688178 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '万德斯', 'exists': True}
2025-04-16 16:54:35,365 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688179 -> 输出 688179
2025-04-16 16:54:35,365 - src.data_sources.akshare - INFO - 股票 688179 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '阿拉丁', 'exists': True}
2025-04-16 16:54:35,365 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688180 -> 输出 688180
2025-04-16 16:54:35,366 - src.data_sources.akshare - INFO - 股票 688180 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '君实生物', 'exists': True}
2025-04-16 16:54:35,366 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688181 -> 输出 688181
2025-04-16 16:54:35,367 - src.data_sources.akshare - INFO - 股票 688181 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '八亿时空', 'exists': True}
2025-04-16 16:54:35,367 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688182 -> 输出 688182
2025-04-16 16:54:35,368 - src.data_sources.akshare - INFO - 股票 688182 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '灿勤科技', 'exists': True}
2025-04-16 16:54:35,368 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688183 -> 输出 688183
2025-04-16 16:54:35,369 - src.data_sources.akshare - INFO - 股票 688183 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '生益电子', 'exists': True}
2025-04-16 16:54:35,369 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688184 -> 输出 688184
2025-04-16 16:54:35,370 - src.data_sources.akshare - INFO - 股票 688184 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '帕瓦股份', 'exists': True}
2025-04-16 16:54:35,370 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688185 -> 输出 688185
2025-04-16 16:54:35,371 - src.data_sources.akshare - INFO - 股票 688185 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '康希诺', 'exists': True}
2025-04-16 16:54:35,371 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688186 -> 输出 688186
2025-04-16 16:54:35,372 - src.data_sources.akshare - INFO - 股票 688186 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '广大特材', 'exists': True}
2025-04-16 16:54:35,372 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688187 -> 输出 688187
2025-04-16 16:54:35,373 - src.data_sources.akshare - INFO - 股票 688187 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '时代电气', 'exists': True}
2025-04-16 16:54:35,373 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688188 -> 输出 688188
2025-04-16 16:54:35,374 - src.data_sources.akshare - INFO - 股票 688188 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '柏楚电子', 'exists': True}
2025-04-16 16:54:35,374 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688189 -> 输出 688189
2025-04-16 16:54:35,375 - src.data_sources.akshare - INFO - 股票 688189 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '南新制药', 'exists': True}
2025-04-16 16:54:35,375 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688190 -> 输出 688190
2025-04-16 16:54:35,376 - src.data_sources.akshare - INFO - 股票 688190 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '云路股份', 'exists': True}
2025-04-16 16:54:35,376 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688191 -> 输出 688191
2025-04-16 16:54:35,377 - src.data_sources.akshare - INFO - 股票 688191 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '智洋创新', 'exists': True}
2025-04-16 16:54:35,377 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688192 -> 输出 688192
2025-04-16 16:54:35,378 - src.data_sources.akshare - INFO - 股票 688192 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '迪哲医药', 'exists': True}
2025-04-16 16:54:35,379 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688193 -> 输出 688193
2025-04-16 16:54:35,380 - src.data_sources.akshare - INFO - 股票 688193 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '仁度生物', 'exists': True}
2025-04-16 16:54:35,380 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688195 -> 输出 688195
2025-04-16 16:54:35,381 - src.data_sources.akshare - INFO - 股票 688195 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '腾景科技', 'exists': True}
2025-04-16 16:54:35,381 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688196 -> 输出 688196
2025-04-16 16:54:35,382 - src.data_sources.akshare - INFO - 股票 688196 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '卓越新能', 'exists': True}
2025-04-16 16:54:35,382 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688197 -> 输出 688197
2025-04-16 16:54:35,383 - src.data_sources.akshare - INFO - 股票 688197 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '首药控股', 'exists': True}
2025-04-16 16:54:35,383 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688198 -> 输出 688198
2025-04-16 16:54:35,384 - src.data_sources.akshare - INFO - 股票 688198 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '佰仁医疗', 'exists': True}
2025-04-16 16:54:35,384 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688199 -> 输出 688199
2025-04-16 16:54:35,385 - src.data_sources.akshare - INFO - 股票 688199 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '久日新材', 'exists': True}
2025-04-16 16:54:35,385 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688201 -> 输出 688201
2025-04-16 16:54:35,385 - src.data_sources.akshare - INFO - 股票 688201 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '信安世纪', 'exists': True}
2025-04-16 16:54:35,386 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688210 -> 输出 688210
2025-04-16 16:54:35,387 - src.data_sources.akshare - INFO - 股票 688210 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '统联精密', 'exists': True}
2025-04-16 16:54:35,387 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688211 -> 输出 688211
2025-04-16 16:54:35,388 - src.data_sources.akshare - INFO - 股票 688211 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中科微至', 'exists': True}
2025-04-16 16:54:35,389 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688212 -> 输出 688212
2025-04-16 16:54:35,389 - src.data_sources.akshare - INFO - 股票 688212 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '澳华内镜', 'exists': True}
2025-04-16 16:54:35,390 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688213 -> 输出 688213
2025-04-16 16:54:35,390 - src.data_sources.akshare - INFO - 股票 688213 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '思特威', 'exists': True}
2025-04-16 16:54:35,390 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688215 -> 输出 688215
2025-04-16 16:54:35,391 - src.data_sources.akshare - INFO - 股票 688215 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '瑞晟智能', 'exists': True}
2025-04-16 16:54:35,391 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688216 -> 输出 688216
2025-04-16 16:54:35,392 - src.data_sources.akshare - INFO - 股票 688216 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '气派科技', 'exists': True}
2025-04-16 16:54:35,392 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688217 -> 输出 688217
2025-04-16 16:54:35,393 - src.data_sources.akshare - INFO - 股票 688217 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '睿昂基因', 'exists': True}
2025-04-16 16:54:35,393 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688218 -> 输出 688218
2025-04-16 16:54:35,394 - src.data_sources.akshare - INFO - 股票 688218 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '江苏北人', 'exists': True}
2025-04-16 16:54:35,394 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688219 -> 输出 688219
2025-04-16 16:54:35,395 - src.data_sources.akshare - INFO - 股票 688219 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '会通股份', 'exists': True}
2025-04-16 16:54:35,395 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688221 -> 输出 688221
2025-04-16 16:54:35,396 - src.data_sources.akshare - INFO - 股票 688221 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '前沿生物', 'exists': True}
2025-04-16 16:54:35,396 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688231 -> 输出 688231
2025-04-16 16:54:35,397 - src.data_sources.akshare - INFO - 股票 688231 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '隆达股份', 'exists': True}
2025-04-16 16:54:35,397 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688251 -> 输出 688251
2025-04-16 16:54:35,398 - src.data_sources.akshare - INFO - 股票 688251 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '井松智能', 'exists': True}
2025-04-16 16:54:35,398 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688261 -> 输出 688261
2025-04-16 16:54:35,399 - src.data_sources.akshare - INFO - 股票 688261 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '东微半导', 'exists': True}
2025-04-16 16:54:35,399 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688271 -> 输出 688271
2025-04-16 16:54:35,400 - src.data_sources.akshare - INFO - 股票 688271 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '联影医疗', 'exists': True}
2025-04-16 16:54:35,400 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688281 -> 输出 688281
2025-04-16 16:54:35,401 - src.data_sources.akshare - INFO - 股票 688281 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华秦科技', 'exists': True}
2025-04-16 16:54:35,401 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688291 -> 输出 688291
2025-04-16 16:54:35,401 - src.data_sources.akshare - INFO - 股票 688291 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金橙子', 'exists': True}
2025-04-16 16:54:35,402 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688301 -> 输出 688301
2025-04-16 16:54:35,402 - src.data_sources.akshare - INFO - 股票 688301 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '奕瑞科技', 'exists': True}
2025-04-16 16:54:35,403 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688310 -> 输出 688310
2025-04-16 16:54:35,404 - src.data_sources.akshare - INFO - 股票 688310 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '迈得医疗', 'exists': True}
2025-04-16 16:54:35,404 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688311 -> 输出 688311
2025-04-16 16:54:35,405 - src.data_sources.akshare - INFO - 股票 688311 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '盟升电子', 'exists': True}
2025-04-16 16:54:35,405 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688312 -> 输出 688312
2025-04-16 16:54:35,406 - src.data_sources.akshare - INFO - 股票 688312 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '燕麦科技', 'exists': True}
2025-04-16 16:54:35,407 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688313 -> 输出 688313
2025-04-16 16:54:35,407 - src.data_sources.akshare - INFO - 股票 688313 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '仕佳光子', 'exists': True}
2025-04-16 16:54:35,408 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688314 -> 输出 688314
2025-04-16 16:54:35,408 - src.data_sources.akshare - INFO - 股票 688314 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '康拓医疗', 'exists': True}
2025-04-16 16:54:35,409 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688315 -> 输出 688315
2025-04-16 16:54:35,409 - src.data_sources.akshare - INFO - 股票 688315 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '诺禾致源', 'exists': True}
2025-04-16 16:54:35,410 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688316 -> 输出 688316
2025-04-16 16:54:35,410 - src.data_sources.akshare - INFO - 股票 688316 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '青云科技', 'exists': True}
2025-04-16 16:54:35,410 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688317 -> 输出 688317
2025-04-16 16:54:35,411 - src.data_sources.akshare - INFO - 股票 688317 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '之江生物', 'exists': True}
2025-04-16 16:54:35,411 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688318 -> 输出 688318
2025-04-16 16:54:35,412 - src.data_sources.akshare - INFO - 股票 688318 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '财富趋势', 'exists': True}
2025-04-16 16:54:35,413 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688319 -> 输出 688319
2025-04-16 16:54:35,413 - src.data_sources.akshare - INFO - 股票 688319 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '欧林生物', 'exists': True}
2025-04-16 16:54:35,414 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688321 -> 输出 688321
2025-04-16 16:54:35,414 - src.data_sources.akshare - INFO - 股票 688321 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '微芯生物', 'exists': True}
2025-04-16 16:54:35,415 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688331 -> 输出 688331
2025-04-16 16:54:35,415 - src.data_sources.akshare - INFO - 股票 688331 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '荣昌生物', 'exists': True}
2025-04-16 16:54:35,415 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688351 -> 输出 688351
2025-04-16 16:54:35,416 - src.data_sources.akshare - INFO - 股票 688351 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '微电生理', 'exists': True}
2025-04-16 16:54:35,416 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688361 -> 输出 688361
2025-04-16 16:54:35,417 - src.data_sources.akshare - INFO - 股票 688361 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中科飞测', 'exists': True}
2025-04-16 16:54:35,417 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688371 -> 输出 688371
2025-04-16 16:54:35,418 - src.data_sources.akshare - INFO - 股票 688371 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '菲沃泰', 'exists': True}
2025-04-16 16:54:35,418 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688381 -> 输出 688381
2025-04-16 16:54:35,419 - src.data_sources.akshare - INFO - 股票 688381 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '帝奥微', 'exists': True}
2025-04-16 16:54:35,419 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688391 -> 输出 688391
2025-04-16 16:54:35,420 - src.data_sources.akshare - INFO - 股票 688391 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '钜泉科技', 'exists': True}
2025-04-16 16:54:35,421 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688401 -> 输出 688401
2025-04-16 16:54:35,421 - src.data_sources.akshare - INFO - 股票 688401 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '路维光电', 'exists': True}
2025-04-16 16:54:35,422 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688410 -> 输出 688410
2025-04-16 16:54:35,423 - src.data_sources.akshare - INFO - 股票 688410 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '山外山', 'exists': True}
2025-04-16 16:54:35,423 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688411 -> 输出 688411
2025-04-16 16:54:35,424 - src.data_sources.akshare - INFO - 股票 688411 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '海博思创', 'exists': True}
2025-04-16 16:54:35,424 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688416 -> 输出 688416
2025-04-16 16:54:35,425 - src.data_sources.akshare - INFO - 股票 688416 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒烁股份', 'exists': True}
2025-04-16 16:54:35,425 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688418 -> 输出 688418
2025-04-16 16:54:35,426 - src.data_sources.akshare - INFO - 股票 688418 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '震有科技', 'exists': True}
2025-04-16 16:54:35,426 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688419 -> 输出 688419
2025-04-16 16:54:35,427 - src.data_sources.akshare - INFO - 股票 688419 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '耐科装备', 'exists': True}
2025-04-16 16:54:35,427 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688501 -> 输出 688501
2025-04-16 16:54:35,428 - src.data_sources.akshare - INFO - 股票 688501 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '青达环保', 'exists': True}
2025-04-16 16:54:35,428 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688510 -> 输出 688510
2025-04-16 16:54:35,429 - src.data_sources.akshare - INFO - 股票 688510 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '航亚科技', 'exists': True}
2025-04-16 16:54:35,429 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688511 -> 输出 688511
2025-04-16 16:54:35,430 - src.data_sources.akshare - INFO - 股票 688511 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '天微电子', 'exists': True}
2025-04-16 16:54:35,430 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688512 -> 输出 688512
2025-04-16 16:54:35,437 - src.data_sources.akshare - INFO - 股票 688512 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '慧智微', 'exists': True}
2025-04-16 16:54:35,438 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688513 -> 输出 688513
2025-04-16 16:54:35,439 - src.data_sources.akshare - INFO - 股票 688513 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '苑东生物', 'exists': True}
2025-04-16 16:54:35,440 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688515 -> 输出 688515
2025-04-16 16:54:35,441 - src.data_sources.akshare - INFO - 股票 688515 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '裕太微', 'exists': True}
2025-04-16 16:54:35,441 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688516 -> 输出 688516
2025-04-16 16:54:35,442 - src.data_sources.akshare - INFO - 股票 688516 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '奥特维', 'exists': True}
2025-04-16 16:54:35,443 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688517 -> 输出 688517
2025-04-16 16:54:35,444 - src.data_sources.akshare - INFO - 股票 688517 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '金冠电气', 'exists': True}
2025-04-16 16:54:35,444 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688518 -> 输出 688518
2025-04-16 16:54:35,446 - src.data_sources.akshare - INFO - 股票 688518 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '联赢激光', 'exists': True}
2025-04-16 16:54:35,446 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688519 -> 输出 688519
2025-04-16 16:54:35,447 - src.data_sources.akshare - INFO - 股票 688519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '南亚新材', 'exists': True}
2025-04-16 16:54:35,448 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688521 -> 输出 688521
2025-04-16 16:54:35,449 - src.data_sources.akshare - INFO - 股票 688521 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '芯原股份', 'exists': True}
2025-04-16 16:54:35,449 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688531 -> 输出 688531
2025-04-16 16:54:35,450 - src.data_sources.akshare - INFO - 股票 688531 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '日联科技', 'exists': True}
2025-04-16 16:54:35,450 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688551 -> 输出 688551
2025-04-16 16:54:35,451 - src.data_sources.akshare - INFO - 股票 688551 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '科威尔', 'exists': True}
2025-04-16 16:54:35,452 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688561 -> 输出 688561
2025-04-16 16:54:35,454 - src.data_sources.akshare - INFO - 股票 688561 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '奇安信', 'exists': True}
2025-04-16 16:54:35,454 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688571 -> 输出 688571
2025-04-16 16:54:35,455 - src.data_sources.akshare - INFO - 股票 688571 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '杭华股份', 'exists': True}
2025-04-16 16:54:35,456 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688581 -> 输出 688581
2025-04-16 16:54:35,457 - src.data_sources.akshare - INFO - 股票 688581 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '安杰思', 'exists': True}
2025-04-16 16:54:35,457 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688591 -> 输出 688591
2025-04-16 16:54:35,458 - src.data_sources.akshare - INFO - 股票 688591 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '泰凌微', 'exists': True}
2025-04-16 16:54:35,459 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688601 -> 输出 688601
2025-04-16 16:54:35,460 - src.data_sources.akshare - INFO - 股票 688601 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '力芯微', 'exists': True}
2025-04-16 16:54:35,460 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688610 -> 输出 688610
2025-04-16 16:54:35,462 - src.data_sources.akshare - INFO - 股票 688610 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '埃科光电', 'exists': True}
2025-04-16 16:54:35,462 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688611 -> 输出 688611
2025-04-16 16:54:35,463 - src.data_sources.akshare - INFO - 股票 688611 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '杭州柯林', 'exists': True}
2025-04-16 16:54:35,464 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688612 -> 输出 688612
2025-04-16 16:54:35,465 - src.data_sources.akshare - INFO - 股票 688612 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '威迈斯', 'exists': True}
2025-04-16 16:54:35,465 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688613 -> 输出 688613
2025-04-16 16:54:35,466 - src.data_sources.akshare - INFO - 股票 688613 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '奥精医疗', 'exists': True}
2025-04-16 16:54:35,467 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688615 -> 输出 688615
2025-04-16 16:54:35,468 - src.data_sources.akshare - INFO - 股票 688615 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '合合信息', 'exists': True}
2025-04-16 16:54:35,469 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688616 -> 输出 688616
2025-04-16 16:54:35,470 - src.data_sources.akshare - INFO - 股票 688616 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '西力科技', 'exists': True}
2025-04-16 16:54:35,471 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688617 -> 输出 688617
2025-04-16 16:54:35,471 - src.data_sources.akshare - INFO - 股票 688617 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '惠泰医疗', 'exists': True}
2025-04-16 16:54:35,472 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688618 -> 输出 688618
2025-04-16 16:54:35,473 - src.data_sources.akshare - INFO - 股票 688618 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '三旺通信', 'exists': True}
2025-04-16 16:54:35,473 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688619 -> 输出 688619
2025-04-16 16:54:35,474 - src.data_sources.akshare - INFO - 股票 688619 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '罗普特', 'exists': True}
2025-04-16 16:54:35,474 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688621 -> 输出 688621
2025-04-16 16:54:35,475 - src.data_sources.akshare - INFO - 股票 688621 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '阳光诺和', 'exists': True}
2025-04-16 16:54:35,475 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688631 -> 输出 688631
2025-04-16 16:54:35,476 - src.data_sources.akshare - INFO - 股票 688631 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '莱斯信息', 'exists': True}
2025-04-16 16:54:35,476 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688651 -> 输出 688651
2025-04-16 16:54:35,477 - src.data_sources.akshare - INFO - 股票 688651 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '盛邦安全', 'exists': True}
2025-04-16 16:54:35,478 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688661 -> 输出 688661
2025-04-16 16:54:35,479 - src.data_sources.akshare - INFO - 股票 688661 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '和林微纳', 'exists': True}
2025-04-16 16:54:35,479 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688671 -> 输出 688671
2025-04-16 16:54:35,481 - src.data_sources.akshare - INFO - 股票 688671 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '碧兴物联', 'exists': True}
2025-04-16 16:54:35,482 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688681 -> 输出 688681
2025-04-16 16:54:35,483 - src.data_sources.akshare - INFO - 股票 688681 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '科汇股份', 'exists': True}
2025-04-16 16:54:35,483 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688691 -> 输出 688691
2025-04-16 16:54:35,484 - src.data_sources.akshare - INFO - 股票 688691 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '灿芯股份', 'exists': True}
2025-04-16 16:54:35,485 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688701 -> 输出 688701
2025-04-16 16:54:35,486 - src.data_sources.akshare - INFO - 股票 688701 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '卓锦股份', 'exists': True}
2025-04-16 16:54:35,486 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688710 -> 输出 688710
2025-04-16 16:54:35,487 - src.data_sources.akshare - INFO - 股票 688710 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '益诺思', 'exists': True}
2025-04-16 16:54:35,487 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688711 -> 输出 688711
2025-04-16 16:54:35,488 - src.data_sources.akshare - INFO - 股票 688711 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '宏微科技', 'exists': True}
2025-04-16 16:54:35,488 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688716 -> 输出 688716
2025-04-16 16:54:35,489 - src.data_sources.akshare - INFO - 股票 688716 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中研股份', 'exists': True}
2025-04-16 16:54:35,489 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688717 -> 输出 688717
2025-04-16 16:54:35,490 - src.data_sources.akshare - INFO - 股票 688717 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '艾罗能源', 'exists': True}
2025-04-16 16:54:35,490 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688718 -> 输出 688718
2025-04-16 16:54:35,491 - src.data_sources.akshare - INFO - 股票 688718 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '唯赛勃', 'exists': True}
2025-04-16 16:54:35,492 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688719 -> 输出 688719
2025-04-16 16:54:35,492 - src.data_sources.akshare - INFO - 股票 688719 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '爱科赛博', 'exists': True}
2025-04-16 16:54:35,493 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688721 -> 输出 688721
2025-04-16 16:54:35,493 - src.data_sources.akshare - INFO - 股票 688721 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '龙图光罩', 'exists': True}
2025-04-16 16:54:35,494 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688819 -> 输出 688819
2025-04-16 16:54:35,495 - src.data_sources.akshare - INFO - 股票 688819 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '天能股份', 'exists': True}
2025-04-16 16:54:35,495 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688981 -> 输出 688981
2025-04-16 16:54:35,496 - src.data_sources.akshare - INFO - 股票 688981 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '中芯国际', 'exists': True}
2025-04-16 16:54:35,496 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 430017 -> 输出 430017
2025-04-16 16:54:35,497 - src.data_sources.akshare - INFO - 股票 430017 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '星昊医药', 'exists': True}
2025-04-16 16:54:35,497 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 430139 -> 输出 430139
2025-04-16 16:54:35,498 - src.data_sources.akshare - INFO - 股票 430139 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '华岭股份', 'exists': True}
2025-04-16 16:54:35,499 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 430198 -> 输出 430198
2025-04-16 16:54:35,499 - src.data_sources.akshare - INFO - 股票 430198 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '微创光电', 'exists': True}
2025-04-16 16:54:35,500 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 430418 -> 输出 430418
2025-04-16 16:54:35,500 - src.data_sources.akshare - INFO - 股票 430418 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '苏轴股份', 'exists': True}
2025-04-16 16:54:35,501 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 430510 -> 输出 430510
2025-04-16 16:54:35,502 - src.data_sources.akshare - INFO - 股票 430510 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '丰光精密', 'exists': True}
2025-04-16 16:54:35,502 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 430718 -> 输出 430718
2025-04-16 16:54:35,503 - src.data_sources.akshare - INFO - 股票 430718 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '合肥高科', 'exists': True}
2025-04-16 16:54:35,504 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831010 -> 输出 831010
2025-04-16 16:54:35,505 - src.data_sources.akshare - INFO - 股票 831010 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '凯添燃气', 'exists': True}
2025-04-16 16:54:35,506 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831039 -> 输出 831039
2025-04-16 16:54:35,507 - src.data_sources.akshare - INFO - 股票 831039 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '国义招标', 'exists': True}
2025-04-16 16:54:35,508 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831087 -> 输出 831087
2025-04-16 16:54:35,509 - src.data_sources.akshare - INFO - 股票 831087 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '秋乐种业', 'exists': True}
2025-04-16 16:54:35,509 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831152 -> 输出 831152
2025-04-16 16:54:35,511 - src.data_sources.akshare - INFO - 股票 831152 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '昆工科技', 'exists': True}
2025-04-16 16:54:35,511 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831167 -> 输出 831167
2025-04-16 16:54:35,513 - src.data_sources.akshare - INFO - 股票 831167 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '鑫汇科', 'exists': True}
2025-04-16 16:54:35,513 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831175 -> 输出 831175
2025-04-16 16:54:35,514 - src.data_sources.akshare - INFO - 股票 831175 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '派诺科技', 'exists': True}
2025-04-16 16:54:35,515 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831195 -> 输出 831195
2025-04-16 16:54:35,515 - src.data_sources.akshare - INFO - 股票 831195 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '三祥科技', 'exists': True}
2025-04-16 16:54:35,516 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831278 -> 输出 831278
2025-04-16 16:54:35,517 - src.data_sources.akshare - INFO - 股票 831278 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '泰德股份', 'exists': True}
2025-04-16 16:54:35,517 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831304 -> 输出 831304
2025-04-16 16:54:35,518 - src.data_sources.akshare - INFO - 股票 831304 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '迪尔化工', 'exists': True}
2025-04-16 16:54:35,518 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831305 -> 输出 831305
2025-04-16 16:54:35,519 - src.data_sources.akshare - INFO - 股票 831305 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '海希通讯', 'exists': True}
2025-04-16 16:54:35,519 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831370 -> 输出 831370
2025-04-16 16:54:35,520 - src.data_sources.akshare - INFO - 股票 831370 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '新安洁', 'exists': True}
2025-04-16 16:54:35,521 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831396 -> 输出 831396
2025-04-16 16:54:35,521 - src.data_sources.akshare - INFO - 股票 831396 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '许昌智能', 'exists': True}
2025-04-16 16:54:35,522 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831445 -> 输出 831445
2025-04-16 16:54:35,522 - src.data_sources.akshare - INFO - 股票 831445 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '龙竹科技', 'exists': True}
2025-04-16 16:54:35,523 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831526 -> 输出 831526
2025-04-16 16:54:35,523 - src.data_sources.akshare - INFO - 股票 831526 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '凯华材料', 'exists': True}
2025-04-16 16:54:35,524 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831627 -> 输出 831627
2025-04-16 16:54:35,524 - src.data_sources.akshare - INFO - 股票 831627 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '力王股份', 'exists': True}
2025-04-16 16:54:35,525 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831641 -> 输出 831641
2025-04-16 16:54:35,525 - src.data_sources.akshare - INFO - 股票 831641 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '格利尔', 'exists': True}
2025-04-16 16:54:35,526 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831689 -> 输出 831689
2025-04-16 16:54:35,526 - src.data_sources.akshare - INFO - 股票 831689 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '克莱特', 'exists': True}
2025-04-16 16:54:35,526 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831726 -> 输出 831726
2025-04-16 16:54:35,527 - src.data_sources.akshare - INFO - 股票 831726 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '朱老六', 'exists': True}
2025-04-16 16:54:35,528 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831768 -> 输出 831768
2025-04-16 16:54:35,529 - src.data_sources.akshare - INFO - 股票 831768 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '拾比佰', 'exists': True}
2025-04-16 16:54:35,529 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831832 -> 输出 831832
2025-04-16 16:54:35,530 - src.data_sources.akshare - INFO - 股票 831832 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '科达自控', 'exists': True}
2025-04-16 16:54:35,530 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831834 -> 输出 831834
2025-04-16 16:54:35,531 - src.data_sources.akshare - INFO - 股票 831834 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '三维股份', 'exists': True}
2025-04-16 16:54:35,531 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831855 -> 输出 831855
2025-04-16 16:54:35,532 - src.data_sources.akshare - INFO - 股票 831855 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '浙江大农', 'exists': True}
2025-04-16 16:54:35,532 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831856 -> 输出 831856
2025-04-16 16:54:35,533 - src.data_sources.akshare - INFO - 股票 831856 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '浩淼科技', 'exists': True}
2025-04-16 16:54:35,533 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831906 -> 输出 831906
2025-04-16 16:54:35,533 - src.data_sources.akshare - INFO - 股票 831906 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '舜宇精工', 'exists': True}
2025-04-16 16:54:35,534 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 831961 -> 输出 831961
2025-04-16 16:54:35,534 - src.data_sources.akshare - INFO - 股票 831961 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '创远信科', 'exists': True}
2025-04-16 16:54:35,535 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 832110 -> 输出 832110
2025-04-16 16:54:35,535 - src.data_sources.akshare - INFO - 股票 832110 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '雷特科技', 'exists': True}
2025-04-16 16:54:35,536 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 832145 -> 输出 832145
2025-04-16 16:54:35,536 - src.data_sources.akshare - INFO - 股票 832145 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '恒合股份', 'exists': True}
2025-04-16 16:54:35,537 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 832149 -> 输出 832149
2025-04-16 16:54:35,538 - src.data_sources.akshare - INFO - 股票 832149 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '利尔达', 'exists': True}
2025-04-16 16:54:35,538 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 832171 -> 输出 832171
2025-04-16 16:54:35,539 - src.data_sources.akshare - INFO - 股票 832171 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '志晟信息', 'exists': True}
2025-04-16 16:54:35,539 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 832175 -> 输出 832175
2025-04-16 16:54:35,539 - src.data_sources.akshare - INFO - 股票 832175 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '东方碳素', 'exists': True}
2025-04-16 16:54:35,540 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 832419 -> 输出 832419
2025-04-16 16:54:35,540 - src.data_sources.akshare - INFO - 股票 832419 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '路斯股份', 'exists': True}
2025-04-16 16:54:35,541 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 832471 -> 输出 832471
2025-04-16 16:54:35,541 - src.data_sources.akshare - INFO - 股票 832471 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '美邦科技', 'exists': True}
2025-04-16 16:54:35,541 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 832491 -> 输出 832491
2025-04-16 16:54:35,542 - src.data_sources.akshare - INFO - 股票 832491 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '奥迪威', 'exists': True}
2025-04-16 16:54:35,542 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 832651 -> 输出 832651
2025-04-16 16:54:35,543 - src.data_sources.akshare - INFO - 股票 832651 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '天罡股份', 'exists': True}
2025-04-16 16:54:35,543 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 833171 -> 输出 833171
2025-04-16 16:54:35,544 - src.data_sources.akshare - INFO - 股票 833171 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '国航远洋', 'exists': True}
2025-04-16 16:54:35,544 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 833751 -> 输出 833751
2025-04-16 16:54:35,545 - src.data_sources.akshare - INFO - 股票 833751 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '惠同新材', 'exists': True}
2025-04-16 16:54:35,545 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 833781 -> 输出 833781
2025-04-16 16:54:35,546 - src.data_sources.akshare - INFO - 股票 833781 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '瑞奇智造', 'exists': True}
2025-04-16 16:54:35,547 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 833819 -> 输出 833819
2025-04-16 16:54:35,547 - src.data_sources.akshare - INFO - 股票 833819 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '颖泰生物', 'exists': True}
2025-04-16 16:54:35,547 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 833914 -> 输出 833914
2025-04-16 16:54:35,548 - src.data_sources.akshare - INFO - 股票 833914 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '远航精密', 'exists': True}
2025-04-16 16:54:35,548 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 834014 -> 输出 834014
2025-04-16 16:54:35,549 - src.data_sources.akshare - INFO - 股票 834014 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '特瑞斯', 'exists': True}
2025-04-16 16:54:35,549 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 834021 -> 输出 834021
2025-04-16 16:54:35,550 - src.data_sources.akshare - INFO - 股票 834021 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '流金科技', 'exists': True}
2025-04-16 16:54:35,550 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 834261 -> 输出 834261
2025-04-16 16:54:35,551 - src.data_sources.akshare - INFO - 股票 834261 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '一诺威', 'exists': True}
2025-04-16 16:54:35,551 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 834415 -> 输出 834415
2025-04-16 16:54:35,551 - src.data_sources.akshare - INFO - 股票 834415 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '恒拓开源', 'exists': True}
2025-04-16 16:54:35,552 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 835174 -> 输出 835174
2025-04-16 16:54:35,552 - src.data_sources.akshare - INFO - 股票 835174 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '五新隧装', 'exists': True}
2025-04-16 16:54:35,553 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 835179 -> 输出 835179
2025-04-16 16:54:35,554 - src.data_sources.akshare - INFO - 股票 835179 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '凯德石英', 'exists': True}
2025-04-16 16:54:35,554 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 835184 -> 输出 835184
2025-04-16 16:54:35,555 - src.data_sources.akshare - INFO - 股票 835184 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '国源科技', 'exists': True}
2025-04-16 16:54:35,555 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 835185 -> 输出 835185
2025-04-16 16:54:35,556 - src.data_sources.akshare - INFO - 股票 835185 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '贝特瑞', 'exists': True}
2025-04-16 16:54:35,556 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 836149 -> 输出 836149
2025-04-16 16:54:35,556 - src.data_sources.akshare - INFO - 股票 836149 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '旭杰科技', 'exists': True}
2025-04-16 16:54:35,557 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 836221 -> 输出 836221
2025-04-16 16:54:35,557 - src.data_sources.akshare - INFO - 股票 836221 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '易实精密', 'exists': True}
2025-04-16 16:54:35,558 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 836414 -> 输出 836414
2025-04-16 16:54:35,558 - src.data_sources.akshare - INFO - 股票 836414 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '欧普泰', 'exists': True}
2025-04-16 16:54:35,558 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 836419 -> 输出 836419
2025-04-16 16:54:35,559 - src.data_sources.akshare - INFO - 股票 836419 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '万德股份', 'exists': True}
2025-04-16 16:54:35,559 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 836717 -> 输出 836717
2025-04-16 16:54:35,560 - src.data_sources.akshare - INFO - 股票 836717 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '瑞星股份', 'exists': True}
2025-04-16 16:54:35,560 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 836871 -> 输出 836871
2025-04-16 16:54:35,561 - src.data_sources.akshare - INFO - 股票 836871 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '派特尔', 'exists': True}
2025-04-16 16:54:35,562 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 836961 -> 输出 836961
2025-04-16 16:54:35,563 - src.data_sources.akshare - INFO - 股票 836961 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '西磁科技', 'exists': True}
2025-04-16 16:54:35,563 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 837174 -> 输出 837174
2025-04-16 16:54:35,564 - src.data_sources.akshare - INFO - 股票 837174 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '宏裕包材', 'exists': True}
2025-04-16 16:54:35,564 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 837212 -> 输出 837212
2025-04-16 16:54:35,565 - src.data_sources.akshare - INFO - 股票 837212 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '智新电子', 'exists': True}
2025-04-16 16:54:35,565 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 837821 -> 输出 837821
2025-04-16 16:54:35,566 - src.data_sources.akshare - INFO - 股票 837821 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '则成电子', 'exists': True}
2025-04-16 16:54:35,566 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 838163 -> 输出 838163
2025-04-16 16:54:35,567 - src.data_sources.akshare - INFO - 股票 838163 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '方大新材', 'exists': True}
2025-04-16 16:54:35,567 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 838171 -> 输出 838171
2025-04-16 16:54:35,568 - src.data_sources.akshare - INFO - 股票 838171 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '邦德股份', 'exists': True}
2025-04-16 16:54:35,568 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 838701 -> 输出 838701
2025-04-16 16:54:35,568 - src.data_sources.akshare - INFO - 股票 838701 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '豪声电子', 'exists': True}
2025-04-16 16:54:35,569 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 838810 -> 输出 838810
2025-04-16 16:54:35,570 - src.data_sources.akshare - INFO - 股票 838810 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '春光智能', 'exists': True}
2025-04-16 16:54:35,570 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 838971 -> 输出 838971
2025-04-16 16:54:35,571 - src.data_sources.akshare - INFO - 股票 838971 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '天马新材', 'exists': True}
2025-04-16 16:54:35,571 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 839167 -> 输出 839167
2025-04-16 16:54:35,572 - src.data_sources.akshare - INFO - 股票 839167 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '同享科技', 'exists': True}
2025-04-16 16:54:35,572 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 839371 -> 输出 839371
2025-04-16 16:54:35,573 - src.data_sources.akshare - INFO - 股票 839371 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '欧福蛋业', 'exists': True}
2025-04-16 16:54:35,573 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 839719 -> 输出 839719
2025-04-16 16:54:35,574 - src.data_sources.akshare - INFO - 股票 839719 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '宁新新材', 'exists': True}
2025-04-16 16:54:35,574 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 870199 -> 输出 870199
2025-04-16 16:54:35,575 - src.data_sources.akshare - INFO - 股票 870199 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '倍益康', 'exists': True}
2025-04-16 16:54:35,575 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 871245 -> 输出 871245
2025-04-16 16:54:35,576 - src.data_sources.akshare - INFO - 股票 871245 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '威博液压', 'exists': True}
2025-04-16 16:54:35,576 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 871263 -> 输出 871263
2025-04-16 16:54:35,577 - src.data_sources.akshare - INFO - 股票 871263 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '莱赛激光', 'exists': True}
2025-04-16 16:54:35,577 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 871396 -> 输出 871396
2025-04-16 16:54:35,578 - src.data_sources.akshare - INFO - 股票 871396 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '常辅股份', 'exists': True}
2025-04-16 16:54:35,578 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 871478 -> 输出 871478
2025-04-16 16:54:35,579 - src.data_sources.akshare - INFO - 股票 871478 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '巨能股份', 'exists': True}
2025-04-16 16:54:35,579 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 871553 -> 输出 871553
2025-04-16 16:54:35,580 - src.data_sources.akshare - INFO - 股票 871553 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '凯腾精工', 'exists': True}
2025-04-16 16:54:35,580 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 871634 -> 输出 871634
2025-04-16 16:54:35,581 - src.data_sources.akshare - INFO - 股票 871634 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '新威凌', 'exists': True}
2025-04-16 16:54:35,581 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 871642 -> 输出 871642
2025-04-16 16:54:35,582 - src.data_sources.akshare - INFO - 股票 871642 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '通易航天', 'exists': True}
2025-04-16 16:54:35,582 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 871694 -> 输出 871694
2025-04-16 16:54:35,583 - src.data_sources.akshare - INFO - 股票 871694 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '中裕科技', 'exists': True}
2025-04-16 16:54:35,583 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 871753 -> 输出 871753
2025-04-16 16:54:35,584 - src.data_sources.akshare - INFO - 股票 871753 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '天纺标', 'exists': True}
2025-04-16 16:54:35,584 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 871857 -> 输出 871857
2025-04-16 16:54:35,585 - src.data_sources.akshare - INFO - 股票 871857 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '泓禧科技', 'exists': True}
2025-04-16 16:54:35,585 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 871970 -> 输出 871970
2025-04-16 16:54:35,586 - src.data_sources.akshare - INFO - 股票 871970 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '大禹生物', 'exists': True}
2025-04-16 16:54:35,586 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 871981 -> 输出 871981
2025-04-16 16:54:35,587 - src.data_sources.akshare - INFO - 股票 871981 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '晶赛科技', 'exists': True}
2025-04-16 16:54:35,587 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 872190 -> 输出 872190
2025-04-16 16:54:35,588 - src.data_sources.akshare - INFO - 股票 872190 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '雷神科技', 'exists': True}
2025-04-16 16:54:35,588 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 872351 -> 输出 872351
2025-04-16 16:54:35,589 - src.data_sources.akshare - INFO - 股票 872351 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '华光源海', 'exists': True}
2025-04-16 16:54:35,589 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 872541 -> 输出 872541
2025-04-16 16:54:35,590 - src.data_sources.akshare - INFO - 股票 872541 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '铁大科技', 'exists': True}
2025-04-16 16:54:35,590 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 872931 -> 输出 872931
2025-04-16 16:54:35,591 - src.data_sources.akshare - INFO - 股票 872931 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '无锡鼎邦', 'exists': True}
2025-04-16 16:54:35,591 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 873001 -> 输出 873001
2025-04-16 16:54:35,592 - src.data_sources.akshare - INFO - 股票 873001 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '纬达光电', 'exists': True}
2025-04-16 16:54:35,592 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 873122 -> 输出 873122
2025-04-16 16:54:35,593 - src.data_sources.akshare - INFO - 股票 873122 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '中纺标', 'exists': True}
2025-04-16 16:54:35,593 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 873132 -> 输出 873132
2025-04-16 16:54:35,593 - src.data_sources.akshare - INFO - 股票 873132 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '泰鹏智能', 'exists': True}
2025-04-16 16:54:35,594 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 873152 -> 输出 873152
2025-04-16 16:54:35,595 - src.data_sources.akshare - INFO - 股票 873152 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '天宏锂电', 'exists': True}
2025-04-16 16:54:35,595 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 873167 -> 输出 873167
2025-04-16 16:54:35,596 - src.data_sources.akshare - INFO - 股票 873167 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '新赣江', 'exists': True}
2025-04-16 16:54:35,596 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 873169 -> 输出 873169
2025-04-16 16:54:35,597 - src.data_sources.akshare - INFO - 股票 873169 分析结果: {'market': 'A股', 'exchange': '北京证券交易所', 'board': '主板', 'prefix': 'bj', 'name': '七丰精工', 'exists': True}
2025-04-16 16:54:35,597 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 920016 -> 输出 920016
2025-04-16 16:54:35,598 - src.data_sources.akshare - INFO - 股票 920016 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '中草香料', 'exists': True}
2025-04-16 16:54:35,598 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 920019 -> 输出 920019
2025-04-16 16:54:35,599 - src.data_sources.akshare - INFO - 股票 920019 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '铜冠矿建', 'exists': True}
2025-04-16 16:54:35,599 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 920106 -> 输出 920106
2025-04-16 16:54:35,600 - src.data_sources.akshare - INFO - 股票 920106 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '林泰新材', 'exists': True}
2025-04-16 16:54:35,600 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 920108 -> 输出 920108
2025-04-16 16:54:35,601 - src.data_sources.akshare - INFO - 股票 920108 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '宏海科技', 'exists': True}
2025-04-16 16:54:35,601 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 920111 -> 输出 920111
2025-04-16 16:54:35,602 - src.data_sources.akshare - INFO - 股票 920111 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '聚星科技', 'exists': True}
2025-04-16 16:54:35,602 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 920116 -> 输出 920116
2025-04-16 16:54:35,603 - src.data_sources.akshare - INFO - 股票 920116 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '星图测控', 'exists': True}
2025-04-16 16:54:35,603 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 920118 -> 输出 920118
2025-04-16 16:54:35,604 - src.data_sources.akshare - INFO - 股票 920118 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '太湖远大', 'exists': True}
2025-04-16 16:54:35,604 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 920128 -> 输出 920128
2025-04-16 16:54:35,605 - src.data_sources.akshare - INFO - 股票 920128 分析结果: {'market': '未知', 'exchange': '未知', 'board': '未知', 'prefix': '', 'name': '胜业电气', 'exists': True}
2025-04-16 16:54:35,606 - __main__ - ERROR - 加载股票 1 数据时出错: 'list' object has no attribute 'iloc'
2025-04-16 16:54:35,606 - __main__ - INFO - 所有数据集共有的列: ['index', 'symbol', 'volume', 'source', 'open', 'turnover_rate', 'change_percent', '股票代码', 'high', 'code', 'date', 'low', 'close', 'stock_id', 'change']
2025-04-16 16:54:35,609 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:54:35,610 - src.analysis.clustering - INFO - 进行KMeans聚类分析，聚类数: 3，特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 16:54:35,611 - src.analysis.clustering - INFO - 预处理数据...
2025-04-16 16:54:35,612 - src.analysis.clustering - INFO - 各特征的缺失值比例: 
{'open': 0.0, 'close': 0.0, 'high': 0.0, 'low': 0.0, 'volume': 0.0, 'change_percent': 0.8130081300813009}
2025-04-16 16:54:35,614 - src.analysis.clustering - INFO - 列 'change_percent' 的 0 个NaN值已用均值 -0.06 填充
2025-04-16 16:54:35,616 - src.analysis.clustering - INFO - 列 'change_percent' 中检测到 4 个异常值，将替换为均值
2025-04-16 16:54:35,616 - src.analysis.clustering - INFO - 标准化特征...
2025-04-16 16:54:35,619 - src.analysis.clustering - INFO - 执行KMeans聚类，聚类数: 3，最大迭代次数: 300，初始化次数: 10
2025-04-16 16:54:35,701 - src.analysis.clustering - INFO - KMeans聚类完成，结果: {'Cluster 0': {'count': 22, 'percentage': np.float64(17.88617886178862)}, 'Cluster 1': {'count': 57, 'percentage': np.float64(46.34146341463415)}, 'Cluster 2': {'count': 44, 'percentage': np.float64(35.77235772357724)}}
2025-04-16 16:54:35,702 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 16:54:35,702 - __main__ - INFO -   Cluster 0: 22个样本 (17.89%)
2025-04-16 16:54:35,702 - __main__ - INFO -   Cluster 1: 57个样本 (46.34%)
2025-04-16 16:54:35,702 - __main__ - INFO -   Cluster 2: 44个样本 (35.77%)
2025-04-16 16:54:35,702 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 16:54:35,703 - __main__ - ERROR - 生成clusters类型的可视化图表时出错: Expected 2D array, got scalar array instead:
array=nan.
Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.
2025-04-16 16:54:35,703 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 16:54:35,708 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 16:54:35,720 - src.analysis.clustering - INFO - 聚类数 1: inertia = 738.00
2025-04-16 16:54:35,734 - src.analysis.clustering - INFO - 聚类数 2: inertia = 192.52
2025-04-16 16:54:35,749 - src.analysis.clustering - INFO - 聚类数 3: inertia = 128.56
2025-04-16 16:54:35,766 - src.analysis.clustering - INFO - 聚类数 4: inertia = 79.19
2025-04-16 16:54:35,783 - src.analysis.clustering - INFO - 聚类数 5: inertia = 61.72
2025-04-16 16:54:35,804 - src.analysis.clustering - INFO - 聚类数 6: inertia = 47.44
2025-04-16 16:54:35,825 - src.analysis.clustering - INFO - 聚类数 7: inertia = 37.05
2025-04-16 16:54:35,847 - src.analysis.clustering - INFO - 聚类数 8: inertia = 26.80
2025-04-16 16:54:35,870 - src.analysis.clustering - INFO - 聚类数 9: inertia = 22.57
2025-04-16 16:54:35,894 - src.analysis.clustering - INFO - 聚类数 10: inertia = 18.81
2025-04-16 16:54:35,928 - src.analysis.clustering - INFO - 确定的最佳聚类数: 4
2025-04-16 16:54:36,231 - __main__ - INFO - 图表已保存到 results\clustering_elbow_3clusters.png
2025-04-16 16:54:36,244 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 16:54:36,245 - src.analysis.clustering - WARNING - 特征 change_percent 存在NaN值，将使用均值填充
2025-04-16 16:54:37,579 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_3clusters.png
2025-04-16 16:54:37,588 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 16:54:37,589 - __main__ - ERROR - 生成centroids类型的可视化图表时出错: (slice(None, None, None), [0, 1, 2, 3, 4, 5])
2025-04-16 16:54:37,594 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 16:54:37,594 - __main__ - INFO - 聚类分析完成
2025-04-16 16:54:37,595 - __main__ - INFO - 程序执行完毕
2025-04-16 16:58:39,215 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:58:39,215 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:58:39,216 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:58:47,769 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 16:58:47,769 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 16:58:47,770 - __main__ - INFO - 初始化CSV存储
2025-04-16 16:58:47,770 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 16:58:47,771 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 16:58:47,783 - __main__ - INFO - 从 akshare 获取指数 000001 的数据...
2025-04-16 16:58:47,783 - src.data_sources.akshare - INFO - 获取指数 000001 的历史数据
2025-04-16 16:58:47,784 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 16:58:47,785 - src.data_sources.akshare - INFO - 检测到指数代码 000001，使用指数接口获取数据
2025-04-16 16:58:48,111 - __main__ - INFO - 成功获取 242 条指数数据
2025-04-16 16:58:48,112 - __main__ - INFO - 将指数数据保存到 csv 存储...
2025-04-16 16:58:48,121 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\index/000001.csv，总行数: 242
2025-04-16 16:58:48,121 - __main__ - INFO - 成功保存指数 000001 的数据
2025-04-16 16:58:48,122 - __main__ - INFO - 程序执行完毕
2025-04-16 16:59:33,171 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 16:59:33,171 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 16:59:33,172 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 16:59:43,804 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 16:59:43,805 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 16:59:43,805 - __main__ - INFO - 初始化CSV存储
2025-04-16 16:59:43,805 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 16:59:43,806 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 17:02:17,402 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 17:02:17,402 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 17:02:17,403 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 17:02:26,629 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 17:02:26,630 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 17:02:26,631 - __main__ - INFO - 初始化CSV存储
2025-04-16 17:02:26,632 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 17:02:26,633 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 17:02:26,651 - __main__ - INFO - 从 akshare 获取 600036 的历史数据...
2025-04-16 17:02:26,651 - __main__ - INFO - 数据时间范围: 2023-12-01 至 2025-04-16
2025-04-16 17:02:26,652 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 17:02:26,652 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 17:02:26,654 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 17:02:26,654 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 17:02:26,655 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 17:02:26,656 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 17:02:26,899 - src.data_sources.akshare - ERROR - 获取600036的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 17:02:26,902 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 17:02:26,903 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 17:02:26,907 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 17:02:26,908 - src.data_sources.akshare - INFO - 获取 600036 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 17:02:26,909 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 17:02:26,910 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 17:02:26,914 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 17:02:26,916 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600036 历史数据
2025-04-16 17:02:27,175 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 600036 历史数据
2025-04-16 17:02:27,176 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600036 历史数据
2025-04-16 17:02:27,272 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 600036 历史数据
2025-04-16 17:02:27,273 - __main__ - INFO - 成功获取 331 条历史数据
2025-04-16 17:02:27,274 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 17:02:27,290 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600036.csv，总行数: 595
2025-04-16 17:02:27,291 - __main__ - INFO - 成功保存 600036 的历史数据
2025-04-16 17:02:27,291 - __main__ - INFO - 程序执行完毕
2025-04-16 17:02:40,231 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 17:02:40,232 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 17:02:40,232 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 17:02:48,873 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 17:02:48,873 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 17:02:48,873 - __main__ - INFO - 初始化CSV存储
2025-04-16 17:02:48,874 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 17:02:48,874 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 17:02:48,880 - __main__ - INFO - 从 akshare 获取 600519 的历史数据...
2025-04-16 17:02:48,881 - __main__ - INFO - 数据时间范围: 2023-01-01 至 2025-04-16
2025-04-16 17:02:48,881 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:02:48,881 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:02:48,882 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 17:02:48,882 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:02:48,883 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:02:48,883 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 17:02:48,983 - src.data_sources.akshare - ERROR - 获取600519的详细信息失败: If using all scalar values, you must pass an index
2025-04-16 17:02:48,986 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:02:48,987 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:02:48,991 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 17:02:48,992 - src.data_sources.akshare - INFO - 获取 600519 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 17:02:48,993 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:02:48,994 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:02:48,998 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 17:02:49,000 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600519 历史数据
2025-04-16 17:02:49,085 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 600519 历史数据
2025-04-16 17:02:49,086 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600519 历史数据
2025-04-16 17:02:49,181 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 600519 历史数据
2025-04-16 17:02:49,183 - __main__ - INFO - 成功获取 552 条历史数据
2025-04-16 17:02:49,183 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 17:02:49,205 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600519.csv，总行数: 574
2025-04-16 17:02:49,205 - __main__ - INFO - 成功保存 600519 的历史数据
2025-04-16 17:02:49,206 - __main__ - INFO - 程序执行完毕
2025-04-16 17:08:49,398 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 17:08:49,398 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 17:08:49,399 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 17:08:58,931 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 17:08:58,931 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 17:08:58,932 - __main__ - INFO - 初始化CSV存储
2025-04-16 17:08:58,933 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 17:08:58,933 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 17:08:58,949 - __main__ - INFO - 从 akshare 获取 600519 的历史数据...
2025-04-16 17:08:58,949 - __main__ - INFO - 数据时间范围: 2023-01-01 至 2025-04-16
2025-04-16 17:08:58,950 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:08:58,951 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:08:58,953 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 17:08:58,954 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:08:58,955 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:08:58,957 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 17:08:59,123 - src.data_sources.akshare - WARNING - 解析600519的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 17:08:59,127 - __main__ - INFO - 股票确认: 600519 - 贵州茅台, 交易所: 上海证券交易所
2025-04-16 17:08:59,128 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:08:59,129 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:08:59,131 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 17:08:59,132 - src.data_sources.akshare - INFO - 获取 600519 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 17:08:59,133 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:08:59,133 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 17:08:59,137 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 17:08:59,138 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600519 历史数据
2025-04-16 17:08:59,269 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 600519 历史数据
2025-04-16 17:08:59,270 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600519 历史数据
2025-04-16 17:08:59,384 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 600519 历史数据
2025-04-16 17:08:59,387 - __main__ - INFO - 成功获取 552 条历史数据
2025-04-16 17:08:59,388 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 17:08:59,446 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600519.csv，总行数: 1126
2025-04-16 17:08:59,447 - __main__ - INFO - 成功保存 600519 的历史数据
2025-04-16 17:08:59,447 - __main__ - INFO - 程序执行完毕
2025-04-16 17:09:50,943 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 17:09:50,943 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 17:09:50,944 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 17:10:00,427 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 17:10:00,428 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 17:10:00,428 - __main__ - INFO - 初始化CSV存储
2025-04-16 17:10:00,429 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 17:10:00,430 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 17:23:35,826 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 17:23:35,826 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 17:23:35,827 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 17:23:45,818 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 17:23:45,819 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 17:23:45,820 - __main__ - INFO - 初始化CSV存储
2025-04-16 17:23:45,820 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 17:23:45,821 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 17:23:45,834 - __main__ - INFO - 从 akshare 获取指数 000001 的数据...
2025-04-16 17:23:45,834 - __main__ - INFO - 数据时间范围: 2023-01-01 至 2025-04-16
2025-04-16 17:23:45,834 - src.data_sources.akshare - INFO - 获取指数 000001 的历史数据
2025-04-16 17:23:45,836 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 17:23:45,837 - src.data_sources.akshare - INFO - 检测到指数代码 000001，使用指数接口获取数据
2025-04-16 17:23:46,224 - __main__ - INFO - 成功获取 551 条指数数据
2025-04-16 17:23:46,224 - __main__ - INFO - 将指数数据保存到 csv 存储...
2025-04-16 17:23:46,236 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\index/000001.csv，总行数: 551
2025-04-16 17:23:46,237 - __main__ - INFO - 成功保存指数 000001 的数据
2025-04-16 17:23:46,237 - __main__ - INFO - 程序执行完毕
2025-04-16 17:24:08,342 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 17:24:08,343 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 17:24:08,343 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 17:24:17,732 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 17:24:17,733 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 17:24:17,734 - __main__ - INFO - 初始化CSV存储
2025-04-16 17:24:17,735 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 17:24:17,736 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 17:24:17,749 - __main__ - INFO - 从 akshare 获取指数 399001 的数据...
2025-04-16 17:24:17,749 - __main__ - INFO - 数据时间范围: 2023-01-01 至 2025-04-16
2025-04-16 17:24:17,750 - src.data_sources.akshare - INFO - 获取指数 399001 的历史数据
2025-04-16 17:24:17,751 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 399001 -> 输出 399001
2025-04-16 17:24:17,751 - src.data_sources.akshare - INFO - 检测到指数代码 399001，使用指数接口获取数据
2025-04-16 17:24:18,185 - __main__ - INFO - 成功获取 551 条指数数据
2025-04-16 17:24:18,186 - __main__ - INFO - 将指数数据保存到 csv 存储...
2025-04-16 17:24:18,193 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\index/399001.csv，行数: 551
2025-04-16 17:24:18,194 - __main__ - INFO - 成功保存指数 399001 的数据
2025-04-16 17:24:18,194 - __main__ - INFO - 程序执行完毕
2025-04-16 17:24:27,905 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 17:24:27,905 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 17:24:27,906 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 17:24:36,453 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 17:24:36,454 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 17:24:36,455 - __main__ - INFO - 初始化CSV存储
2025-04-16 17:24:36,456 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 17:24:36,456 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 18:00:40,716 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 18:00:40,717 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 18:00:40,717 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 18:00:48,776 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 18:00:48,776 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 18:00:48,776 - __main__ - INFO - 初始化CSV存储
2025-04-16 18:00:48,777 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 18:00:48,777 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 18:00:48,782 - __main__ - INFO - 从 akshare 获取指数 000300 的数据...
2025-04-16 18:00:48,783 - __main__ - INFO - 数据时间范围: 2023-01-01 至 2025-04-16
2025-04-16 18:00:48,783 - src.data_sources.akshare - INFO - 获取指数 000300 的历史数据
2025-04-16 18:00:48,783 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000300 -> 输出 000300
2025-04-16 18:00:48,783 - src.data_sources.akshare - INFO - 检测到指数代码 000300，使用指数接口获取数据
2025-04-16 18:00:49,071 - __main__ - INFO - 成功获取 552 条指数数据
2025-04-16 18:00:49,072 - __main__ - INFO - 将指数数据保存到 csv 存储...
2025-04-16 18:00:49,079 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\index/000300.csv，行数: 552
2025-04-16 18:00:49,079 - __main__ - INFO - 成功保存指数 000300 的数据
2025-04-16 18:00:49,079 - __main__ - INFO - 程序执行完毕
2025-04-16 18:01:24,301 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 18:01:24,301 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 18:01:24,301 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 18:01:31,806 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 18:01:31,806 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 18:01:31,807 - __main__ - INFO - 初始化CSV存储
2025-04-16 18:01:31,807 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 18:01:31,808 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 18:01:31,815 - __main__ - INFO - 识别股票代码 600519 的信息...
2025-04-16 18:01:31,815 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:01:31,816 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 18:01:31,816 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:01:31,817 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:01:31,817 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 18:01:31,818 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:01:31,818 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:01:31,819 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 18:01:32,044 - src.data_sources.akshare - WARNING - 解析600519的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 18:01:32,046 - __main__ - INFO - 识别股票代码 1279 的信息...
2025-04-16 18:01:32,046 - src.data_sources.akshare - INFO - 股票代码修正: 添加前导零 -> 001279
2025-04-16 18:01:32,046 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 18:01:32,048 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 18:01:32,048 - src.data_sources.akshare - INFO - 股票代码修正: 添加前导零 -> 001279
2025-04-16 18:01:32,048 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 18:01:32,049 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 18:01:32,050 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 18:01:32,050 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 18:01:32,051 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 18:01:32,052 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 18:01:32,134 - src.data_sources.akshare - WARNING - 解析1279的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 18:01:32,135 - __main__ - INFO - 识别股票代码 300059 的信息...
2025-04-16 18:01:32,136 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 18:01:32,136 - src.data_sources.akshare - INFO - 股票 300059 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东方财富', 'exists': True}
2025-04-16 18:01:32,137 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 18:01:32,137 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 18:01:32,138 - src.data_sources.akshare - INFO - 股票 300059 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东方财富', 'exists': True}
2025-04-16 18:01:32,138 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 18:01:32,138 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 300059 -> 输出 300059
2025-04-16 18:01:32,139 - src.data_sources.akshare - INFO - 股票 300059 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '创业板', 'prefix': 'sz', 'name': '东方财富', 'exists': True}
2025-04-16 18:01:32,207 - src.data_sources.akshare - WARNING - 解析300059的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 18:01:32,209 - __main__ - INFO - 识别股票代码 688001 的信息...
2025-04-16 18:01:32,209 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 18:01:32,210 - src.data_sources.akshare - INFO - 股票 688001 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华兴源创', 'exists': True}
2025-04-16 18:01:32,210 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 18:01:32,211 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 18:01:32,211 - src.data_sources.akshare - INFO - 股票 688001 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华兴源创', 'exists': True}
2025-04-16 18:01:32,212 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 18:01:32,212 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 688001 -> 输出 688001
2025-04-16 18:01:32,213 - src.data_sources.akshare - INFO - 股票 688001 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '华兴源创', 'exists': True}
2025-04-16 18:01:32,307 - src.data_sources.akshare - WARNING - 解析688001的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 18:01:32,308 - __main__ - INFO - 成功识别 4 只股票的信息:
2025-04-16 18:01:32,317 - __main__ - INFO - 程序执行完毕
2025-04-16 18:01:47,063 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 18:01:47,063 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 18:01:47,064 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 18:01:55,663 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 18:01:55,664 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 18:01:55,664 - __main__ - INFO - 初始化CSV存储
2025-04-16 18:01:55,665 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 18:01:55,666 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 18:01:55,680 - __main__ - INFO - 从 akshare 获取 1 只股票的实时数据...
2025-04-16 18:01:55,680 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 18:02:26,263 - src.data_sources.akshare - INFO - 成功获取A股实时行情，共 5410 只股票
2025-04-16 18:02:26,264 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 18:02:26,264 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 18:02:26,265 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 18:02:26,265 - src.data_sources.akshare - INFO - 获取 001279 实时数据，市场: 深圳证券交易所, 板块: 主板
2025-04-16 18:02:26,266 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 18:02:26,266 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 001279 -> 输出 001279
2025-04-16 18:02:26,267 - src.data_sources.akshare - INFO - 股票 001279 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '强邦新材', 'exists': True}
2025-04-16 18:02:26,268 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 001279 的实时数据...
2025-04-16 18:02:26,268 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 001279 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 18:02:26,269 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 001279 的当日数据...
2025-04-16 18:02:26,555 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 001279 的当日数据
2025-04-16 18:02:26,556 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 001279 的行情数据...
2025-04-16 18:02:29,367 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 001279 的行情数据
2025-04-16 18:02:29,367 - src.data_sources.akshare - INFO - 成功获取 2 只股票的实时数据
2025-04-16 18:02:29,369 - __main__ - INFO - 成功获取 2 条实时数据
2025-04-16 18:02:29,369 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 18:02:29,371 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\realtime/all.csv，行数: 2
2025-04-16 18:02:29,372 - __main__ - INFO - 成功保存实时数据
2025-04-16 18:02:29,372 - __main__ - INFO - 程序执行完毕
2025-04-16 18:02:53,801 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 18:02:53,801 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 18:02:53,802 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 18:03:03,501 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 18:03:03,501 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 18:03:03,502 - __main__ - INFO - 初始化CSV存储
2025-04-16 18:03:03,502 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 18:03:03,503 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 18:03:04,434 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 18:03:04,435 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 18:03:04,435 - __main__ - INFO - 分析股票: ['600036', '601398', '601288', '601328', '600000', '601818']
2025-04-16 18:03:04,435 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 18:03:04,448 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:03:04,449 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 18:03:04,449 - __main__ - ERROR - 加载股票 600036 数据时出错: 'list' object has no attribute 'iloc'
2025-04-16 18:03:04,450 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 18:03:04,460 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:03:04,461 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 18:03:04,461 - __main__ - ERROR - 加载股票 601398 数据时出错: 'list' object has no attribute 'iloc'
2025-04-16 18:03:04,462 - __main__ - INFO - 加载股票 601288 的数据...
2025-04-16 18:03:04,462 - src.storage.csv_storage - WARNING - 文件 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/601288.csv 不存在
2025-04-16 18:03:04,462 - __main__ - INFO - 本地没有股票 601288 的数据，从网络获取...
2025-04-16 18:03:04,463 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 18:03:04,463 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 18:03:04,464 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 18:03:04,464 - src.data_sources.akshare - INFO - 获取 601288 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 18:03:04,465 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 18:03:04,465 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 18:03:04,465 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 18:03:04,466 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 601288 历史数据
2025-04-16 18:03:04,559 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 601288 历史数据
2025-04-16 18:03:04,560 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 601288 历史数据
2025-04-16 18:03:04,660 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 601288 历史数据
2025-04-16 18:03:04,663 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/601288.csv，行数: 58
2025-04-16 18:03:04,663 - __main__ - WARNING - 股票 601288 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:03:04,664 - __main__ - INFO - 加载股票 601328 的数据...
2025-04-16 18:03:04,664 - src.storage.csv_storage - WARNING - 文件 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/601328.csv 不存在
2025-04-16 18:03:04,665 - __main__ - INFO - 本地没有股票 601328 的数据，从网络获取...
2025-04-16 18:03:04,665 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601328 -> 输出 601328
2025-04-16 18:03:04,665 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601328 -> 输出 601328
2025-04-16 18:03:04,667 - src.data_sources.akshare - INFO - 股票 601328 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '交通银行', 'exists': True}
2025-04-16 18:03:04,667 - src.data_sources.akshare - INFO - 获取 601328 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 18:03:04,667 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601328 -> 输出 601328
2025-04-16 18:03:04,667 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601328 -> 输出 601328
2025-04-16 18:03:04,668 - src.data_sources.akshare - INFO - 股票 601328 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '交通银行', 'exists': True}
2025-04-16 18:03:04,669 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 601328 历史数据
2025-04-16 18:03:04,789 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 601328 历史数据
2025-04-16 18:03:04,790 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 601328 历史数据
2025-04-16 18:03:04,909 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 601328 历史数据
2025-04-16 18:03:04,911 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/601328.csv，行数: 58
2025-04-16 18:03:04,912 - __main__ - WARNING - 股票 601328 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:03:04,912 - __main__ - INFO - 加载股票 600000 的数据...
2025-04-16 18:03:04,913 - src.storage.csv_storage - WARNING - 文件 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600000.csv 不存在
2025-04-16 18:03:04,913 - __main__ - INFO - 本地没有股票 600000 的数据，从网络获取...
2025-04-16 18:03:04,914 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600000 -> 输出 600000
2025-04-16 18:03:04,914 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600000 -> 输出 600000
2025-04-16 18:03:04,915 - src.data_sources.akshare - INFO - 股票 600000 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '浦发银行', 'exists': True}
2025-04-16 18:03:04,915 - src.data_sources.akshare - INFO - 获取 600000 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 18:03:04,915 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600000 -> 输出 600000
2025-04-16 18:03:04,915 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600000 -> 输出 600000
2025-04-16 18:03:04,917 - src.data_sources.akshare - INFO - 股票 600000 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '浦发银行', 'exists': True}
2025-04-16 18:03:04,917 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600000 历史数据
2025-04-16 18:03:05,015 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 600000 历史数据
2025-04-16 18:03:05,015 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600000 历史数据
2025-04-16 18:03:05,093 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 600000 历史数据
2025-04-16 18:03:05,096 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600000.csv，行数: 58
2025-04-16 18:03:05,096 - __main__ - WARNING - 股票 600000 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:03:05,096 - __main__ - INFO - 加载股票 601818 的数据...
2025-04-16 18:03:05,097 - src.storage.csv_storage - WARNING - 文件 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/601818.csv 不存在
2025-04-16 18:03:05,097 - __main__ - INFO - 本地没有股票 601818 的数据，从网络获取...
2025-04-16 18:03:05,098 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601818 -> 输出 601818
2025-04-16 18:03:05,098 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601818 -> 输出 601818
2025-04-16 18:03:05,099 - src.data_sources.akshare - INFO - 股票 601818 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '光大银行', 'exists': True}
2025-04-16 18:03:05,100 - src.data_sources.akshare - INFO - 获取 601818 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 18:03:05,100 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601818 -> 输出 601818
2025-04-16 18:03:05,100 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601818 -> 输出 601818
2025-04-16 18:03:05,101 - src.data_sources.akshare - INFO - 股票 601818 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '光大银行', 'exists': True}
2025-04-16 18:03:05,102 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 601818 历史数据
2025-04-16 18:03:05,180 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 601818 历史数据
2025-04-16 18:03:05,180 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 601818 历史数据
2025-04-16 18:03:05,258 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 601818 历史数据
2025-04-16 18:03:05,260 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/601818.csv，行数: 58
2025-04-16 18:03:05,260 - __main__ - WARNING - 股票 601818 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:03:05,261 - __main__ - INFO - 所有数据集共有的列: ['source', 'high', 'close', '振幅', '涨跌额', 'amount', 'open', 'change_percent', 'index', 'volume', 'turnover_rate', 'date', '成交量', '涨跌幅', 'low', 'code', '股票代码', 'symbol', '开盘', '最低', 'amplitude', '成交额', '换手率', '日期', 'stock_id', '收盘', '最高', 'change']
2025-04-16 18:03:05,263 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 18:03:05,263 - __main__ - INFO - 寻找最佳聚类数（最大尝试5个簇）...
2025-04-16 18:03:05,267 - src.analysis.clustering - INFO - 计算1到5个聚类的inertia值...
2025-04-16 18:03:05,351 - src.analysis.clustering - INFO - 聚类数 1: inertia = 264.00
2025-04-16 18:03:05,365 - src.analysis.clustering - INFO - 聚类数 2: inertia = 58.91
2025-04-16 18:03:05,383 - src.analysis.clustering - INFO - 聚类数 3: inertia = 35.12
2025-04-16 18:03:05,402 - src.analysis.clustering - INFO - 聚类数 4: inertia = 23.73
2025-04-16 18:03:05,422 - src.analysis.clustering - INFO - 聚类数 5: inertia = 16.09
2025-04-16 18:03:05,440 - src.analysis.clustering - INFO - 未找到明显的肘部点，使用简单方法确定最佳聚类数
2025-04-16 18:03:05,441 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 18:03:05,441 - __main__ - INFO - 确定的最佳聚类数: 5
2025-04-16 18:03:05,441 - src.analysis.clustering - INFO - 进行KMeans聚类分析，聚类数: 5，特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 18:03:05,442 - src.analysis.clustering - INFO - 预处理数据...
2025-04-16 18:03:05,443 - src.analysis.clustering - INFO - 各特征的缺失值比例: 
{'open': 0.0, 'close': 0.0, 'high': 0.0, 'low': 0.0, 'volume': 0.0, 'change_percent': 0.0}
2025-04-16 18:03:05,447 - src.analysis.clustering - INFO - 列 'volume' 中检测到 1 个异常值，将替换为均值
2025-04-16 18:03:05,448 - src.analysis.clustering - INFO - 列 'change_percent' 中检测到 1 个异常值，将替换为均值
2025-04-16 18:03:05,448 - src.analysis.clustering - INFO - 标准化特征...
2025-04-16 18:03:05,451 - src.analysis.clustering - INFO - 执行KMeans聚类，聚类数: 5，最大迭代次数: 300，初始化次数: 10
2025-04-16 18:03:05,469 - src.analysis.clustering - INFO - KMeans聚类完成，结果: {'Cluster 0': {'count': 14, 'percentage': np.float64(31.818181818181817)}, 'Cluster 1': {'count': 14, 'percentage': np.float64(31.818181818181817)}, 'Cluster 2': {'count': 7, 'percentage': np.float64(15.909090909090908)}, 'Cluster 3': {'count': 8, 'percentage': np.float64(18.181818181818183)}, 'Cluster 4': {'count': 1, 'percentage': np.float64(2.272727272727273)}}
2025-04-16 18:03:05,469 - __main__ - INFO - 聚类结果（5个簇）:
2025-04-16 18:03:05,469 - __main__ - INFO -   Cluster 0: 14个样本 (31.82%)
2025-04-16 18:03:05,470 - __main__ - INFO -   Cluster 1: 14个样本 (31.82%)
2025-04-16 18:03:05,470 - __main__ - INFO -   Cluster 2: 7个样本 (15.91%)
2025-04-16 18:03:05,470 - __main__ - INFO -   Cluster 3: 8个样本 (18.18%)
2025-04-16 18:03:05,470 - __main__ - INFO -   Cluster 4: 1个样本 (2.27%)
2025-04-16 18:03:05,470 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 18:03:05,998 - __main__ - INFO - 图表已保存到 results\clustering_clusters_5clusters.png
2025-04-16 18:03:06,007 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 18:03:06,011 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 18:03:06,024 - src.analysis.clustering - INFO - 聚类数 1: inertia = 264.00
2025-04-16 18:03:06,038 - src.analysis.clustering - INFO - 聚类数 2: inertia = 58.91
2025-04-16 18:03:06,054 - src.analysis.clustering - INFO - 聚类数 3: inertia = 35.12
2025-04-16 18:03:06,071 - src.analysis.clustering - INFO - 聚类数 4: inertia = 23.73
2025-04-16 18:03:06,090 - src.analysis.clustering - INFO - 聚类数 5: inertia = 16.09
2025-04-16 18:03:06,110 - src.analysis.clustering - INFO - 聚类数 6: inertia = 12.70
2025-04-16 18:03:06,131 - src.analysis.clustering - INFO - 聚类数 7: inertia = 9.20
2025-04-16 18:03:06,154 - src.analysis.clustering - INFO - 聚类数 8: inertia = 7.01
2025-04-16 18:03:06,177 - src.analysis.clustering - INFO - 聚类数 9: inertia = 5.09
2025-04-16 18:03:06,203 - src.analysis.clustering - INFO - 聚类数 10: inertia = 4.59
2025-04-16 18:03:06,203 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 18:03:06,465 - __main__ - INFO - 图表已保存到 results\clustering_elbow_5clusters.png
2025-04-16 18:03:06,471 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 18:03:07,860 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_5clusters.png
2025-04-16 18:03:07,871 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 18:03:07,871 - __main__ - ERROR - 生成centroids类型的可视化图表时出错: (slice(None, None, None), [0, 1, 2, 3, 4, 5])
2025-04-16 18:03:07,874 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_5clusters.csv
2025-04-16 18:03:07,875 - __main__ - INFO - 聚类分析完成
2025-04-16 18:03:07,875 - __main__ - INFO - 程序执行完毕
2025-04-16 18:06:05,757 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 18:06:05,758 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 18:06:05,758 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 18:06:13,100 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 18:06:13,101 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 18:06:13,101 - __main__ - INFO - 初始化CSV存储
2025-04-16 18:06:13,101 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 18:06:13,102 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 18:06:14,034 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 18:06:14,035 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 18:06:14,035 - __main__ - INFO - 分析股票: ['600036', '601398', '601288', '601328', '600000', '601818']
2025-04-16 18:06:14,035 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 18:06:14,049 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:06:14,050 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 18:06:14,050 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 18:06:14,063 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:06:14,064 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 18:06:14,065 - __main__ - INFO - 加载股票 601288 的数据...
2025-04-16 18:06:14,066 - __main__ - WARNING - 股票 601288 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:06:14,067 - __main__ - INFO - 加载股票 601328 的数据...
2025-04-16 18:06:14,069 - __main__ - WARNING - 股票 601328 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:06:14,069 - __main__ - INFO - 加载股票 600000 的数据...
2025-04-16 18:06:14,071 - __main__ - WARNING - 股票 600000 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:06:14,071 - __main__ - INFO - 加载股票 601818 的数据...
2025-04-16 18:06:14,072 - __main__ - WARNING - 股票 601818 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:06:14,073 - __main__ - INFO - 所有数据集共有的列: ['stock_id', 'turnover_rate', '开盘', '成交额', 'source', 'open', 'high', '换手率', 'change', 'low', 'volume', '涨跌幅', 'amount', '日期', '成交量', '最高', 'close', 'change_percent', '振幅', 'symbol', '涨跌额', 'amplitude', 'date', 'index', '股票代码', '最低', '收盘', 'code']
2025-04-16 18:06:14,075 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 18:06:14,075 - __main__ - INFO - 寻找最佳聚类数（最大尝试5个簇）...
2025-04-16 18:06:14,080 - src.analysis.clustering - INFO - 计算1到5个聚类的inertia值...
2025-04-16 18:06:14,162 - src.analysis.clustering - INFO - 聚类数 1: inertia = 264.00
2025-04-16 18:06:14,174 - src.analysis.clustering - INFO - 聚类数 2: inertia = 58.91
2025-04-16 18:06:14,189 - src.analysis.clustering - INFO - 聚类数 3: inertia = 35.12
2025-04-16 18:06:14,206 - src.analysis.clustering - INFO - 聚类数 4: inertia = 23.73
2025-04-16 18:06:14,225 - src.analysis.clustering - INFO - 聚类数 5: inertia = 16.09
2025-04-16 18:06:14,240 - src.analysis.clustering - INFO - 未找到明显的肘部点，使用简单方法确定最佳聚类数
2025-04-16 18:06:14,241 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 18:06:14,241 - __main__ - INFO - 确定的最佳聚类数: 5
2025-04-16 18:06:14,241 - src.analysis.clustering - INFO - 进行KMeans聚类分析，聚类数: 5，特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 18:06:14,242 - src.analysis.clustering - INFO - 预处理数据...
2025-04-16 18:06:14,243 - src.analysis.clustering - INFO - 各特征的缺失值比例: 
{'open': 0.0, 'close': 0.0, 'high': 0.0, 'low': 0.0, 'volume': 0.0, 'change_percent': 0.0}
2025-04-16 18:06:14,247 - src.analysis.clustering - INFO - 列 'volume' 中检测到 1 个异常值，将替换为均值
2025-04-16 18:06:14,248 - src.analysis.clustering - INFO - 列 'change_percent' 中检测到 1 个异常值，将替换为均值
2025-04-16 18:06:14,248 - src.analysis.clustering - INFO - 标准化特征...
2025-04-16 18:06:14,250 - src.analysis.clustering - INFO - 执行KMeans聚类，聚类数: 5，最大迭代次数: 300，初始化次数: 10
2025-04-16 18:06:14,269 - src.analysis.clustering - INFO - KMeans聚类完成，结果: {'Cluster 0': {'count': 14, 'percentage': np.float64(31.818181818181817)}, 'Cluster 1': {'count': 14, 'percentage': np.float64(31.818181818181817)}, 'Cluster 2': {'count': 7, 'percentage': np.float64(15.909090909090908)}, 'Cluster 3': {'count': 8, 'percentage': np.float64(18.181818181818183)}, 'Cluster 4': {'count': 1, 'percentage': np.float64(2.272727272727273)}}
2025-04-16 18:06:14,270 - __main__ - INFO - 聚类结果（5个簇）:
2025-04-16 18:06:14,270 - __main__ - INFO -   Cluster 0: 14个样本 (31.82%)
2025-04-16 18:06:14,270 - __main__ - INFO -   Cluster 1: 14个样本 (31.82%)
2025-04-16 18:06:14,270 - __main__ - INFO -   Cluster 2: 7个样本 (15.91%)
2025-04-16 18:06:14,270 - __main__ - INFO -   Cluster 3: 8个样本 (18.18%)
2025-04-16 18:06:14,270 - __main__ - INFO -   Cluster 4: 1个样本 (2.27%)
2025-04-16 18:06:14,271 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 18:06:14,801 - __main__ - INFO - 图表已保存到 results\clustering_clusters_5clusters.png
2025-04-16 18:06:14,815 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 18:06:14,821 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 18:06:14,833 - src.analysis.clustering - INFO - 聚类数 1: inertia = 264.00
2025-04-16 18:06:14,846 - src.analysis.clustering - INFO - 聚类数 2: inertia = 58.91
2025-04-16 18:06:14,861 - src.analysis.clustering - INFO - 聚类数 3: inertia = 35.12
2025-04-16 18:06:14,878 - src.analysis.clustering - INFO - 聚类数 4: inertia = 23.73
2025-04-16 18:06:14,897 - src.analysis.clustering - INFO - 聚类数 5: inertia = 16.09
2025-04-16 18:06:14,918 - src.analysis.clustering - INFO - 聚类数 6: inertia = 12.70
2025-04-16 18:06:14,940 - src.analysis.clustering - INFO - 聚类数 7: inertia = 9.20
2025-04-16 18:06:14,962 - src.analysis.clustering - INFO - 聚类数 8: inertia = 7.01
2025-04-16 18:06:14,983 - src.analysis.clustering - INFO - 聚类数 9: inertia = 5.09
2025-04-16 18:06:15,004 - src.analysis.clustering - INFO - 聚类数 10: inertia = 4.59
2025-04-16 18:06:15,005 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 18:06:15,276 - __main__ - INFO - 图表已保存到 results\clustering_elbow_5clusters.png
2025-04-16 18:06:15,286 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 18:06:16,712 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_5clusters.png
2025-04-16 18:06:16,723 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 18:06:16,723 - __main__ - ERROR - 生成centroids类型的可视化图表时出错: (slice(None, None, None), 0)
2025-04-16 18:06:16,727 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_5clusters.csv
2025-04-16 18:06:16,727 - __main__ - INFO - 聚类分析完成
2025-04-16 18:06:16,728 - __main__ - INFO - 程序执行完毕
2025-04-16 18:09:53,978 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 18:09:53,979 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 18:09:53,979 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 18:10:01,934 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 18:10:01,936 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 18:10:01,937 - __main__ - INFO - 初始化CSV存储
2025-04-16 18:10:01,938 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 18:10:01,939 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 18:10:02,864 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 18:10:02,864 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 18:10:02,865 - __main__ - INFO - 分析股票: ['600036', '601398', '601288', '601328', '600000', '601818']
2025-04-16 18:10:02,865 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 18:10:02,878 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:10:02,879 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 18:10:02,880 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 18:10:02,890 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:10:02,891 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 18:10:02,892 - __main__ - INFO - 加载股票 601288 的数据...
2025-04-16 18:10:02,894 - __main__ - WARNING - 股票 601288 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:10:02,894 - __main__ - INFO - 加载股票 601328 的数据...
2025-04-16 18:10:02,896 - __main__ - WARNING - 股票 601328 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:10:02,896 - __main__ - INFO - 加载股票 600000 的数据...
2025-04-16 18:10:02,898 - __main__ - WARNING - 股票 600000 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:10:02,898 - __main__ - INFO - 加载股票 601818 的数据...
2025-04-16 18:10:02,899 - __main__ - WARNING - 股票 601818 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:10:02,900 - __main__ - INFO - 所有数据集共有的列: ['涨跌幅', 'volume', 'change', 'close', '日期', 'low', '开盘', '涨跌额', '最低', 'code', 'amount', 'date', '收盘', 'turnover_rate', '最高', '振幅', 'open', 'amplitude', 'symbol', 'change_percent', 'stock_id', '成交额', '换手率', 'source', '成交量', 'index', '股票代码', 'high']
2025-04-16 18:10:02,902 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 18:10:02,903 - __main__ - INFO - 寻找最佳聚类数（最大尝试5个簇）...
2025-04-16 18:10:02,907 - src.analysis.clustering - INFO - 计算1到5个聚类的inertia值...
2025-04-16 18:10:02,985 - src.analysis.clustering - INFO - 聚类数 1: inertia = 264.00
2025-04-16 18:10:02,998 - src.analysis.clustering - INFO - 聚类数 2: inertia = 58.91
2025-04-16 18:10:03,013 - src.analysis.clustering - INFO - 聚类数 3: inertia = 35.12
2025-04-16 18:10:03,030 - src.analysis.clustering - INFO - 聚类数 4: inertia = 23.73
2025-04-16 18:10:03,049 - src.analysis.clustering - INFO - 聚类数 5: inertia = 16.09
2025-04-16 18:10:03,068 - src.analysis.clustering - INFO - 未找到明显的肘部点，使用简单方法确定最佳聚类数
2025-04-16 18:10:03,068 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 18:10:03,068 - __main__ - INFO - 确定的最佳聚类数: 5
2025-04-16 18:10:03,069 - src.analysis.clustering - INFO - 进行KMeans聚类分析，聚类数: 5，特征: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 18:10:03,069 - src.analysis.clustering - INFO - 预处理数据...
2025-04-16 18:10:03,070 - src.analysis.clustering - INFO - 各特征的缺失值比例: 
{'open': 0.0, 'close': 0.0, 'high': 0.0, 'low': 0.0, 'volume': 0.0, 'change_percent': 0.0}
2025-04-16 18:10:03,073 - src.analysis.clustering - INFO - 列 'volume' 中检测到 1 个异常值，将替换为均值
2025-04-16 18:10:03,074 - src.analysis.clustering - INFO - 列 'change_percent' 中检测到 1 个异常值，将替换为均值
2025-04-16 18:10:03,075 - src.analysis.clustering - INFO - 标准化特征...
2025-04-16 18:10:03,077 - src.analysis.clustering - INFO - 执行KMeans聚类，聚类数: 5，最大迭代次数: 300，初始化次数: 10
2025-04-16 18:10:03,097 - src.analysis.clustering - INFO - KMeans聚类完成，结果: {'Cluster 0': {'count': 14, 'percentage': np.float64(31.818181818181817)}, 'Cluster 1': {'count': 14, 'percentage': np.float64(31.818181818181817)}, 'Cluster 2': {'count': 7, 'percentage': np.float64(15.909090909090908)}, 'Cluster 3': {'count': 8, 'percentage': np.float64(18.181818181818183)}, 'Cluster 4': {'count': 1, 'percentage': np.float64(2.272727272727273)}}
2025-04-16 18:10:03,098 - __main__ - INFO - 聚类结果（5个簇）:
2025-04-16 18:10:03,098 - __main__ - INFO -   Cluster 0: 14个样本 (31.82%)
2025-04-16 18:10:03,098 - __main__ - INFO -   Cluster 1: 14个样本 (31.82%)
2025-04-16 18:10:03,099 - __main__ - INFO -   Cluster 2: 7个样本 (15.91%)
2025-04-16 18:10:03,099 - __main__ - INFO -   Cluster 3: 8个样本 (18.18%)
2025-04-16 18:10:03,099 - __main__ - INFO -   Cluster 4: 1个样本 (2.27%)
2025-04-16 18:10:03,099 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 18:10:03,619 - __main__ - INFO - 图表已保存到 results\clustering_clusters_5clusters.png
2025-04-16 18:10:03,632 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 18:10:03,637 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 18:10:03,650 - src.analysis.clustering - INFO - 聚类数 1: inertia = 264.00
2025-04-16 18:10:03,667 - src.analysis.clustering - INFO - 聚类数 2: inertia = 58.91
2025-04-16 18:10:03,684 - src.analysis.clustering - INFO - 聚类数 3: inertia = 35.12
2025-04-16 18:10:03,725 - src.analysis.clustering - INFO - 聚类数 4: inertia = 23.73
2025-04-16 18:10:03,766 - src.analysis.clustering - INFO - 聚类数 5: inertia = 16.09
2025-04-16 18:10:03,782 - src.analysis.clustering - INFO - 聚类数 6: inertia = 12.70
2025-04-16 18:10:03,801 - src.analysis.clustering - INFO - 聚类数 7: inertia = 9.20
2025-04-16 18:10:03,820 - src.analysis.clustering - INFO - 聚类数 8: inertia = 7.01
2025-04-16 18:10:03,841 - src.analysis.clustering - INFO - 聚类数 9: inertia = 5.09
2025-04-16 18:10:03,862 - src.analysis.clustering - INFO - 聚类数 10: inertia = 4.59
2025-04-16 18:10:03,862 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 18:10:04,126 - __main__ - INFO - 图表已保存到 results\clustering_elbow_5clusters.png
2025-04-16 18:10:04,134 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 18:10:05,550 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_5clusters.png
2025-04-16 18:10:05,564 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 18:10:05,564 - src.analysis.clustering - INFO - 聚类中心数据形状: (5, 6), 类型: <class 'numpy.ndarray'>
2025-04-16 18:10:05,967 - __main__ - INFO - 图表已保存到 results\clustering_centroids_5clusters.png
2025-04-16 18:10:05,977 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_5clusters.csv
2025-04-16 18:10:05,977 - __main__ - INFO - 聚类分析完成
2025-04-16 18:10:05,978 - __main__ - INFO - 程序执行完毕
2025-04-16 18:13:44,358 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 18:13:44,359 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 18:13:44,359 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 18:13:54,623 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 18:13:54,625 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 18:13:54,626 - __main__ - INFO - 初始化CSV存储
2025-04-16 18:13:54,627 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 18:13:54,628 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 18:13:55,549 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 18:13:55,550 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 18:13:55,550 - __main__ - INFO - 分析股票: ['600036', '601398', '601288', '601328', '600000', '601818']
2025-04-16 18:13:55,551 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 18:13:55,563 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:13:55,564 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 18:13:55,565 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 18:13:55,576 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:13:55,577 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 18:13:55,577 - __main__ - INFO - 加载股票 601288 的数据...
2025-04-16 18:13:55,579 - __main__ - WARNING - 股票 601288 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:13:55,579 - __main__ - INFO - 加载股票 601328 的数据...
2025-04-16 18:13:55,582 - __main__ - WARNING - 股票 601328 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:13:55,582 - __main__ - INFO - 加载股票 600000 的数据...
2025-04-16 18:13:55,584 - __main__ - WARNING - 股票 600000 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:13:55,584 - __main__ - INFO - 加载股票 601818 的数据...
2025-04-16 18:13:55,586 - __main__ - WARNING - 股票 601818 的数据缺少必要的列: ['open', 'close', 'high', 'low', 'volume']
2025-04-16 18:13:55,586 - __main__ - INFO - 所有数据集共有的列: ['date', 'open', 'amplitude', 'turnover_rate', 'close', 'index', '股票代码', 'change_percent', '涨跌额', '最高', '最低', 'code', '收盘', 'symbol', 'amount', 'change', '日期', '换手率', '开盘', '成交量', '涨跌幅', 'source', 'stock_id', 'volume', 'high', 'low', '成交额', '振幅']
2025-04-16 18:13:55,588 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 18:13:55,588 - __main__ - INFO - 寻找最佳聚类数（最大尝试5个簇）...
2025-04-16 18:13:55,593 - src.analysis.clustering - INFO - 计算1到5个聚类的inertia值...
2025-04-16 18:13:55,673 - src.analysis.clustering - INFO - 聚类数 1: inertia = 264.00
2025-04-16 18:13:55,687 - src.analysis.clustering - INFO - 聚类数 2: inertia = 58.91
2025-04-16 18:13:55,703 - src.analysis.clustering - INFO - 聚类数 3: inertia = 35.12
2025-04-16 18:13:55,721 - src.analysis.clustering - INFO - 聚类数 4: inertia = 23.73
2025-04-16 18:13:55,740 - src.analysis.clustering - INFO - 聚类数 5: inertia = 16.09
2025-04-16 18:13:55,756 - src.analysis.clustering - INFO - 未找到明显的肘部点，使用简单方法确定最佳聚类数
2025-04-16 18:13:55,756 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 18:13:55,756 - __main__ - INFO - 确定的最佳聚类数: 5
2025-04-16 18:13:55,757 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 18:13:56,089 - src.analysis.clustering - INFO - KMeans聚类完成，分为 5 个簇
2025-04-16 18:13:56,089 - src.analysis.clustering - INFO - 簇 0: 19 个样本 (43.18%)
2025-04-16 18:13:56,089 - src.analysis.clustering - INFO - 簇 1: 7 个样本 (15.91%)
2025-04-16 18:13:56,090 - src.analysis.clustering - INFO - 簇 2: 2 个样本 (4.55%)
2025-04-16 18:13:56,090 - src.analysis.clustering - INFO - 簇 3: 3 个样本 (6.82%)
2025-04-16 18:13:56,090 - src.analysis.clustering - INFO - 簇 4: 13 个样本 (29.55%)
2025-04-16 18:13:56,091 - __main__ - INFO - 聚类结果（5个簇）:
2025-04-16 18:13:56,091 - __main__ - INFO -   0: 19个样本 (43.18%)
2025-04-16 18:13:56,091 - __main__ - INFO -   1: 7个样本 (15.91%)
2025-04-16 18:13:56,091 - __main__ - INFO -   2: 2个样本 (4.55%)
2025-04-16 18:13:56,091 - __main__ - INFO -   3: 3个样本 (6.82%)
2025-04-16 18:13:56,091 - __main__ - INFO -   4: 13个样本 (29.55%)
2025-04-16 18:13:56,092 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 18:13:56,619 - __main__ - INFO - 图表已保存到 results\clustering_clusters_5clusters.png
2025-04-16 18:13:56,634 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 18:13:56,641 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 18:13:56,653 - src.analysis.clustering - INFO - 聚类数 1: inertia = 264.00
2025-04-16 18:13:56,669 - src.analysis.clustering - INFO - 聚类数 2: inertia = 58.91
2025-04-16 18:13:56,688 - src.analysis.clustering - INFO - 聚类数 3: inertia = 35.12
2025-04-16 18:13:56,725 - src.analysis.clustering - INFO - 聚类数 4: inertia = 23.73
2025-04-16 18:13:56,760 - src.analysis.clustering - INFO - 聚类数 5: inertia = 16.09
2025-04-16 18:13:56,778 - src.analysis.clustering - INFO - 聚类数 6: inertia = 12.70
2025-04-16 18:13:56,796 - src.analysis.clustering - INFO - 聚类数 7: inertia = 9.20
2025-04-16 18:13:56,816 - src.analysis.clustering - INFO - 聚类数 8: inertia = 7.01
2025-04-16 18:13:56,837 - src.analysis.clustering - INFO - 聚类数 9: inertia = 5.09
2025-04-16 18:13:56,858 - src.analysis.clustering - INFO - 聚类数 10: inertia = 4.59
2025-04-16 18:13:56,858 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 18:13:57,134 - __main__ - INFO - 图表已保存到 results\clustering_elbow_5clusters.png
2025-04-16 18:13:57,144 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 18:13:58,585 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_5clusters.png
2025-04-16 18:13:58,603 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 18:13:58,604 - src.analysis.clustering - INFO - 聚类中心数据形状: (5, 6), 类型: <class 'numpy.ndarray'>
2025-04-16 18:13:59,023 - __main__ - INFO - 图表已保存到 results\clustering_centroids_5clusters.png
2025-04-16 18:13:59,038 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_5clusters.csv
2025-04-16 18:13:59,038 - __main__ - INFO - 聚类分析完成
2025-04-16 18:13:59,039 - __main__ - INFO - 程序执行完毕
2025-04-16 18:16:36,148 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 18:16:36,148 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 18:16:36,149 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 18:16:45,321 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 18:16:45,322 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 18:16:45,323 - __main__ - INFO - 初始化CSV存储
2025-04-16 18:16:45,325 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 18:16:45,326 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 18:16:46,265 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 18:16:46,266 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 18:16:46,266 - __main__ - INFO - 分析股票: ['600036', '601398', '601288', '601328', '600000', '601818']
2025-04-16 18:16:46,266 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 18:16:46,275 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 18:16:46,281 - __main__ - INFO - 加载股票 601288 的数据...
2025-04-16 18:16:46,287 - __main__ - INFO - 加载股票 601328 的数据...
2025-04-16 18:16:46,292 - __main__ - INFO - 加载股票 600000 的数据...
2025-04-16 18:16:46,297 - __main__ - INFO - 加载股票 601818 的数据...
2025-04-16 18:16:46,303 - __main__ - INFO - 所有数据集共有的列: ['source', 'symbol', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 18:16:46,306 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 18:16:46,307 - __main__ - INFO - 寻找最佳聚类数（最大尝试5个簇）...
2025-04-16 18:16:46,311 - src.analysis.clustering - INFO - 计算1到5个聚类的inertia值...
2025-04-16 18:16:46,391 - src.analysis.clustering - INFO - 聚类数 1: inertia = 1656.00
2025-04-16 18:16:46,406 - src.analysis.clustering - INFO - 聚类数 2: inertia = 593.99
2025-04-16 18:16:46,424 - src.analysis.clustering - INFO - 聚类数 3: inertia = 396.63
2025-04-16 18:16:46,445 - src.analysis.clustering - INFO - 聚类数 4: inertia = 316.19
2025-04-16 18:16:46,469 - src.analysis.clustering - INFO - 聚类数 5: inertia = 260.95
2025-04-16 18:16:46,484 - src.analysis.clustering - INFO - 未找到明显的肘部点，使用简单方法确定最佳聚类数
2025-04-16 18:16:46,485 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 18:16:46,485 - __main__ - INFO - 确定的最佳聚类数: 5
2025-04-16 18:16:46,485 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 18:16:46,677 - src.analysis.clustering - INFO - KMeans聚类完成，分为 5 个簇
2025-04-16 18:16:46,678 - src.analysis.clustering - INFO - 簇 0: 121 个样本 (43.84%)
2025-04-16 18:16:46,678 - src.analysis.clustering - INFO - 簇 1: 22 个样本 (7.97%)
2025-04-16 18:16:46,678 - src.analysis.clustering - INFO - 簇 2: 73 个样本 (26.45%)
2025-04-16 18:16:46,679 - src.analysis.clustering - INFO - 簇 3: 56 个样本 (20.29%)
2025-04-16 18:16:46,679 - src.analysis.clustering - INFO - 簇 4: 4 个样本 (1.45%)
2025-04-16 18:16:46,680 - __main__ - INFO - 聚类结果（5个簇）:
2025-04-16 18:16:46,680 - __main__ - INFO -   0: 121个样本 (43.84%)
2025-04-16 18:16:46,680 - __main__ - INFO -   1: 22个样本 (7.97%)
2025-04-16 18:16:46,680 - __main__ - INFO -   2: 73个样本 (26.45%)
2025-04-16 18:16:46,681 - __main__ - INFO -   3: 56个样本 (20.29%)
2025-04-16 18:16:46,681 - __main__ - INFO -   4: 4个样本 (1.45%)
2025-04-16 18:16:46,681 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 18:16:47,210 - __main__ - INFO - 图表已保存到 results\clustering_clusters_5clusters.png
2025-04-16 18:16:47,225 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 18:16:47,231 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 18:16:47,246 - src.analysis.clustering - INFO - 聚类数 1: inertia = 1656.00
2025-04-16 18:16:47,267 - src.analysis.clustering - INFO - 聚类数 2: inertia = 593.99
2025-04-16 18:16:47,299 - src.analysis.clustering - INFO - 聚类数 3: inertia = 396.63
2025-04-16 18:16:47,345 - src.analysis.clustering - INFO - 聚类数 4: inertia = 316.19
2025-04-16 18:16:47,367 - src.analysis.clustering - INFO - 聚类数 5: inertia = 260.95
2025-04-16 18:16:47,393 - src.analysis.clustering - INFO - 聚类数 6: inertia = 227.74
2025-04-16 18:16:47,418 - src.analysis.clustering - INFO - 聚类数 7: inertia = 200.34
2025-04-16 18:16:47,444 - src.analysis.clustering - INFO - 聚类数 8: inertia = 179.33
2025-04-16 18:16:47,472 - src.analysis.clustering - INFO - 聚类数 9: inertia = 156.29
2025-04-16 18:16:47,502 - src.analysis.clustering - INFO - 聚类数 10: inertia = 133.17
2025-04-16 18:16:47,502 - src.analysis.clustering - INFO - 确定的最佳聚类数: 7
2025-04-16 18:16:47,794 - __main__ - INFO - 图表已保存到 results\clustering_elbow_5clusters.png
2025-04-16 18:16:47,802 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 18:16:49,240 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_5clusters.png
2025-04-16 18:16:49,250 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 18:16:49,251 - src.analysis.clustering - INFO - 聚类中心数据形状: (5, 6), 类型: <class 'numpy.ndarray'>
2025-04-16 18:16:49,653 - __main__ - INFO - 图表已保存到 results\clustering_centroids_5clusters.png
2025-04-16 18:16:49,666 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_5clusters.csv
2025-04-16 18:16:49,666 - __main__ - INFO - 聚类分析完成
2025-04-16 18:16:49,667 - __main__ - INFO - 程序执行完毕
2025-04-16 18:19:38,849 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 18:19:38,849 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 18:19:38,850 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 18:19:47,478 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 18:19:47,478 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 18:19:47,479 - __main__ - INFO - 初始化CSV存储
2025-04-16 18:19:47,479 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 18:19:47,480 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 18:19:48,390 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 18:19:48,391 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 18:19:48,391 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 18:19:48,391 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 18:19:48,401 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 18:19:48,408 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 18:19:48,415 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 18:19:48,419 - __main__ - INFO - 所有数据集共有的列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 18:19:48,421 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 18:19:48,422 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 18:19:48,423 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 18:19:48,662 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 18:19:48,662 - src.analysis.clustering - INFO - 簇 0: 57 个样本 (46.34%)
2025-04-16 18:19:48,662 - src.analysis.clustering - INFO - 簇 1: 44 个样本 (35.77%)
2025-04-16 18:19:48,663 - src.analysis.clustering - INFO - 簇 2: 22 个样本 (17.89%)
2025-04-16 18:19:48,663 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 18:19:48,663 - __main__ - INFO -   0: 57个样本 (46.34%)
2025-04-16 18:19:48,664 - __main__ - INFO -   1: 44个样本 (35.77%)
2025-04-16 18:19:48,664 - __main__ - INFO -   2: 22个样本 (17.89%)
2025-04-16 18:19:48,664 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 18:19:48,665 - src.analysis.clustering - WARNING - 特征数据包含NaN值，尝试填充...
2025-04-16 18:19:49,163 - __main__ - INFO - 图表已保存到 results\clustering_clusters_3clusters.png
2025-04-16 18:19:49,177 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 18:19:49,184 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 18:19:49,199 - src.analysis.clustering - INFO - 聚类数 1: inertia = 738.00
2025-04-16 18:19:49,215 - src.analysis.clustering - INFO - 聚类数 2: inertia = 192.52
2025-04-16 18:19:49,227 - src.analysis.clustering - INFO - 聚类数 3: inertia = 128.56
2025-04-16 18:19:49,242 - src.analysis.clustering - INFO - 聚类数 4: inertia = 79.19
2025-04-16 18:19:49,260 - src.analysis.clustering - INFO - 聚类数 5: inertia = 61.72
2025-04-16 18:19:49,280 - src.analysis.clustering - INFO - 聚类数 6: inertia = 47.44
2025-04-16 18:19:49,299 - src.analysis.clustering - INFO - 聚类数 7: inertia = 37.05
2025-04-16 18:19:49,345 - src.analysis.clustering - INFO - 聚类数 8: inertia = 26.80
2025-04-16 18:19:49,373 - src.analysis.clustering - INFO - 聚类数 9: inertia = 22.57
2025-04-16 18:19:49,396 - src.analysis.clustering - INFO - 聚类数 10: inertia = 18.81
2025-04-16 18:19:49,412 - src.analysis.clustering - INFO - 确定的最佳聚类数: 4
2025-04-16 18:19:49,688 - __main__ - INFO - 图表已保存到 results\clustering_elbow_3clusters.png
2025-04-16 18:19:49,699 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 18:19:50,972 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_3clusters.png
2025-04-16 18:19:50,980 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 18:19:50,981 - src.analysis.clustering - INFO - 聚类中心数据形状: (3, 6), 类型: <class 'numpy.ndarray'>
2025-04-16 18:19:51,347 - __main__ - INFO - 图表已保存到 results\clustering_centroids_3clusters.png
2025-04-16 18:19:51,359 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 18:19:51,359 - __main__ - INFO - 聚类分析完成
2025-04-16 18:19:51,360 - __main__ - INFO - 程序执行完毕
2025-04-16 18:20:00,292 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 18:20:00,292 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 18:20:00,293 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 18:20:08,648 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 18:20:08,649 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 18:20:08,650 - __main__ - INFO - 初始化CSV存储
2025-04-16 18:20:08,650 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 18:20:08,651 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 18:20:09,557 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 18:20:09,557 - __main__ - INFO - 分析时间范围: 2023-01-01 至 2023-12-31
2025-04-16 18:20:09,557 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 18:20:09,558 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 18:20:09,566 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:20:09,566 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:20:09,567 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 18:20:09,568 - src.data_sources.akshare - INFO - 获取 600519 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 18:20:09,568 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:20:09,568 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:20:09,570 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 18:20:09,570 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600519 历史数据
2025-04-16 18:20:09,727 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 600519 历史数据
2025-04-16 18:20:09,728 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600519 历史数据
2025-04-16 18:20:09,838 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 600519 历史数据
2025-04-16 18:20:09,874 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600519.csv，总行数: 816
2025-04-16 18:20:09,880 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 18:20:09,886 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:20:09,886 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:20:09,887 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 18:20:09,887 - src.data_sources.akshare - INFO - 获取 601398 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 18:20:09,888 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:20:09,888 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:20:09,889 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 18:20:09,889 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 601398 历史数据
2025-04-16 18:20:09,985 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 601398 历史数据
2025-04-16 18:20:09,985 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 601398 历史数据
2025-04-16 18:20:10,088 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 601398 历史数据
2025-04-16 18:20:10,128 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/601398.csv，总行数: 506
2025-04-16 18:20:10,136 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 18:20:10,144 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:20:10,145 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:20:10,146 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 18:20:10,146 - src.data_sources.akshare - INFO - 获取 600036 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 18:20:10,146 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:20:10,147 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:20:10,148 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 18:20:10,148 - src.data_sources.akshare - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600036 历史数据
2025-04-16 18:20:10,224 - src.data_sources.akshare - WARNING - 使用stock_zh_a_hist未能获取到 600036 历史数据
2025-04-16 18:20:10,225 - src.data_sources.akshare - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600036 历史数据
2025-04-16 18:20:10,343 - src.data_sources.akshare - INFO - 使用stock_zh_a_hist(无前缀)成功获取 600036 历史数据
2025-04-16 18:20:10,361 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600036.csv，总行数: 816
2025-04-16 18:20:10,365 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 18:20:10,369 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 18:20:10,369 - src.data_sources.akshare - INFO - 检测到指数代码 000001，使用指数接口获取数据
2025-04-16 18:20:10,619 - src.storage.csv_storage - INFO - 已将数据追加到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/1.csv，总行数: 299
2025-04-16 18:20:10,622 - __main__ - INFO - 所有数据集共有的列: ['source', 'symbol', '股票代码']
2025-04-16 18:20:10,625 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 18:20:10,626 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 18:20:10,628 - src.analysis.clustering - WARNING - 数据中存在缺失值，将使用均值填充
2025-04-16 18:20:10,930 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 18:20:10,931 - src.analysis.clustering - INFO - 簇 0: 484 个样本 (50.00%)
2025-04-16 18:20:10,931 - src.analysis.clustering - INFO - 簇 1: 242 个样本 (25.00%)
2025-04-16 18:20:10,931 - src.analysis.clustering - INFO - 簇 2: 242 个样本 (25.00%)
2025-04-16 18:20:10,932 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 18:20:10,932 - __main__ - INFO -   0: 484个样本 (50.00%)
2025-04-16 18:20:10,932 - __main__ - INFO -   1: 242个样本 (25.00%)
2025-04-16 18:20:10,932 - __main__ - INFO -   2: 242个样本 (25.00%)
2025-04-16 18:20:10,933 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 18:20:10,934 - src.analysis.clustering - WARNING - 特征数据包含NaN值，尝试填充...
2025-04-16 18:20:11,459 - __main__ - INFO - 图表已保存到 results\clustering_clusters_3clusters.png
2025-04-16 18:20:11,475 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 18:20:11,482 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 18:20:11,500 - src.analysis.clustering - INFO - 聚类数 1: inertia = 5808.00
2025-04-16 18:20:11,518 - src.analysis.clustering - INFO - 聚类数 2: inertia = 2050.96
2025-04-16 18:20:11,538 - src.analysis.clustering - INFO - 聚类数 3: inertia = 1019.94
2025-04-16 18:20:11,585 - src.analysis.clustering - INFO - 聚类数 4: inertia = 704.83
2025-04-16 18:20:11,627 - src.analysis.clustering - INFO - 聚类数 5: inertia = 530.66
2025-04-16 18:20:11,661 - src.analysis.clustering - INFO - 聚类数 6: inertia = 422.13
2025-04-16 18:20:11,692 - src.analysis.clustering - INFO - 聚类数 7: inertia = 361.21
2025-04-16 18:20:11,727 - src.analysis.clustering - INFO - 聚类数 8: inertia = 307.97
2025-04-16 18:20:11,762 - src.analysis.clustering - INFO - 聚类数 9: inertia = 256.33
2025-04-16 18:20:11,796 - src.analysis.clustering - INFO - 聚类数 10: inertia = 219.90
2025-04-16 18:20:11,814 - src.analysis.clustering - INFO - 未找到明显的肘部点，使用简单方法确定最佳聚类数
2025-04-16 18:20:11,814 - src.analysis.clustering - INFO - 确定的最佳聚类数: 10
2025-04-16 18:20:12,094 - __main__ - INFO - 图表已保存到 results\clustering_elbow_3clusters.png
2025-04-16 18:20:12,101 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 18:20:13,420 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_3clusters.png
2025-04-16 18:20:13,430 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 18:20:13,430 - src.analysis.clustering - INFO - 聚类中心数据形状: (3, 6), 类型: <class 'numpy.ndarray'>
2025-04-16 18:20:13,792 - __main__ - INFO - 图表已保存到 results\clustering_centroids_3clusters.png
2025-04-16 18:20:13,814 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 18:20:13,814 - __main__ - INFO - 聚类分析完成
2025-04-16 18:20:13,815 - __main__ - INFO - 程序执行完毕
2025-04-16 18:29:43,854 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 18:29:43,854 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 18:29:43,854 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 18:29:52,346 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 18:29:52,348 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 18:29:52,349 - __main__ - INFO - 初始化CSV存储
2025-04-16 18:29:52,350 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 18:29:52,351 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 18:29:53,290 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 18:29:53,290 - __main__ - INFO - 分析时间范围: 2023-01-01 至 2023-12-31
2025-04-16 18:29:53,290 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 18:29:53,291 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 18:29:53,298 - __main__ - ERROR - 获取股票 600519 数据时出错: 'AKShareDS' object has no attribute 'check_date_format'
2025-04-16 18:29:53,298 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 18:29:53,303 - __main__ - ERROR - 获取股票 601398 数据时出错: 'AKShareDS' object has no attribute 'check_date_format'
2025-04-16 18:29:53,304 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 18:29:53,310 - __main__ - ERROR - 获取股票 600036 数据时出错: 'AKShareDS' object has no attribute 'check_date_format'
2025-04-16 18:29:53,310 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 18:29:53,310 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 18:29:53,313 - __main__ - INFO - 强制以股票代码模式获取 000001
2025-04-16 18:29:53,313 - __main__ - ERROR - 强制获取股票 000001 数据时出错: 'AKShareDS' object has no attribute 'check_date_format'
2025-04-16 18:29:53,313 - __main__ - WARNING - 无法获取股票 000001 的数据
2025-04-16 18:29:53,314 - __main__ - ERROR - 没有有效的股票数据进行聚类分析
2025-04-16 18:29:53,314 - __main__ - INFO - 程序执行完毕
2025-04-16 18:33:13,933 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 18:33:13,933 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 18:33:13,934 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 18:33:23,818 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 18:33:23,819 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 18:33:23,819 - __main__ - INFO - 初始化CSV存储
2025-04-16 18:33:23,820 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 18:33:23,821 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 18:33:24,732 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 18:33:24,733 - __main__ - INFO - 分析时间范围: 2023-01-01 至 2023-12-31
2025-04-16 18:33:24,733 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 18:33:24,733 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 18:33:24,740 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:33:24,740 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:33:24,740 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:33:24,741 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 18:33:24,742 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:33:24,742 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:33:24,743 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 18:33:24,875 - src.data_sources.akshare - WARNING - 解析600519的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 18:33:24,880 - root - INFO - 获取 600519 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 18:33:24,880 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:33:24,881 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:33:24,882 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:33:24,885 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 18:33:24,886 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:33:24,887 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 18:33:24,890 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 18:33:24,959 - src.data_sources.akshare - WARNING - 解析600519的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 18:33:24,961 - root - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600519 历史数据
2025-04-16 18:33:25,114 - root - WARNING - 使用stock_zh_a_hist未能获取到 600519 历史数据
2025-04-16 18:33:25,115 - root - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600519 历史数据
2025-04-16 18:33:25,254 - root - WARNING - 使用stock_zh_a_hist(无前缀)未能获取到 600519 历史数据
2025-04-16 18:33:25,254 - root - INFO - 方法3: 根据市场和板块信息获取 600519 历史数据
2025-04-16 18:33:25,255 - root - INFO - 600519 是上交所主板股票
2025-04-16 18:33:25,255 - root - WARNING - 使用方法3获取 600519 数据时出错: 'AKShareDS' object has no attribute 'get_sh_hist'
2025-04-16 18:33:25,256 - root - ERROR - 无法获取股票 600519 的历史数据
2025-04-16 18:33:25,256 - __main__ - WARNING - 无法获取股票 600519 的数据
2025-04-16 18:33:25,257 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 18:33:25,267 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:33:25,267 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:33:25,268 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:33:25,270 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 18:33:25,271 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:33:25,271 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:33:25,273 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 18:33:25,341 - src.data_sources.akshare - WARNING - 解析601398的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 18:33:25,342 - root - INFO - 获取 601398 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 18:33:25,343 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:33:25,343 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:33:25,343 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:33:25,344 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 18:33:25,345 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:33:25,345 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 18:33:25,346 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 18:33:25,406 - src.data_sources.akshare - WARNING - 解析601398的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 18:33:25,408 - root - INFO - 方法1: 尝试使用stock_zh_a_hist获取 601398 历史数据
2025-04-16 18:33:25,541 - root - WARNING - 使用stock_zh_a_hist未能获取到 601398 历史数据
2025-04-16 18:33:25,542 - root - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 601398 历史数据
2025-04-16 18:33:25,676 - root - WARNING - 使用stock_zh_a_hist(无前缀)未能获取到 601398 历史数据
2025-04-16 18:33:25,677 - root - INFO - 方法3: 根据市场和板块信息获取 601398 历史数据
2025-04-16 18:33:25,678 - root - INFO - 601398 是上交所主板股票
2025-04-16 18:33:25,679 - root - WARNING - 使用方法3获取 601398 数据时出错: 'AKShareDS' object has no attribute 'get_sh_hist'
2025-04-16 18:33:25,680 - root - ERROR - 无法获取股票 601398 的历史数据
2025-04-16 18:33:25,681 - __main__ - WARNING - 无法获取股票 601398 的数据
2025-04-16 18:33:25,681 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 18:33:25,701 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:33:25,702 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:33:25,703 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:33:25,706 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 18:33:25,708 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:33:25,709 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:33:25,711 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 18:33:25,780 - src.data_sources.akshare - WARNING - 解析600036的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 18:33:25,782 - root - INFO - 获取 600036 历史数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 18:33:25,783 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:33:25,783 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:33:25,784 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:33:25,785 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 18:33:25,786 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:33:25,786 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 18:33:25,788 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 18:33:25,858 - src.data_sources.akshare - WARNING - 解析600036的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 18:33:25,860 - root - INFO - 方法1: 尝试使用stock_zh_a_hist获取 600036 历史数据
2025-04-16 18:33:25,984 - root - WARNING - 使用stock_zh_a_hist未能获取到 600036 历史数据
2025-04-16 18:33:25,984 - root - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 600036 历史数据
2025-04-16 18:33:26,114 - root - WARNING - 使用stock_zh_a_hist(无前缀)未能获取到 600036 历史数据
2025-04-16 18:33:26,115 - root - INFO - 方法3: 根据市场和板块信息获取 600036 历史数据
2025-04-16 18:33:26,116 - root - INFO - 600036 是上交所主板股票
2025-04-16 18:33:26,117 - root - WARNING - 使用方法3获取 600036 数据时出错: 'AKShareDS' object has no attribute 'get_sh_hist'
2025-04-16 18:33:26,117 - root - ERROR - 无法获取股票 600036 的历史数据
2025-04-16 18:33:26,118 - __main__ - WARNING - 无法获取股票 600036 的数据
2025-04-16 18:33:26,119 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 18:33:26,120 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 18:33:26,130 - __main__ - INFO - 强制以股票代码模式获取 000001
2025-04-16 18:33:26,131 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 18:33:26,132 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 18:33:26,133 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 18:33:26,136 - src.data_sources.akshare - INFO - 股票 000001 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '平安银行', 'exists': True}
2025-04-16 18:33:26,138 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 18:33:26,139 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 18:33:26,142 - src.data_sources.akshare - INFO - 股票 000001 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '平安银行', 'exists': True}
2025-04-16 18:33:26,211 - src.data_sources.akshare - WARNING - 解析000001的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 18:33:26,214 - root - INFO - 获取 000001 历史数据，市场: 深圳证券交易所, 板块: 主板
2025-04-16 18:33:26,215 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 18:33:26,215 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 18:33:26,216 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 18:33:26,217 - src.data_sources.akshare - INFO - 股票 000001 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '平安银行', 'exists': True}
2025-04-16 18:33:26,218 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 18:33:26,219 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 18:33:26,220 - src.data_sources.akshare - INFO - 股票 000001 分析结果: {'market': 'A股', 'exchange': '深圳证券交易所', 'board': '主板', 'prefix': 'sz', 'name': '平安银行', 'exists': True}
2025-04-16 18:33:26,290 - src.data_sources.akshare - WARNING - 解析000001的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 18:33:26,293 - root - INFO - 方法1: 尝试使用stock_zh_a_hist获取 000001 历史数据
2025-04-16 18:33:26,384 - root - WARNING - 使用stock_zh_a_hist未能获取到 000001 历史数据
2025-04-16 18:33:26,384 - root - INFO - 方法2: 尝试使用stock_zh_a_hist(无前缀)获取 000001 历史数据
2025-04-16 18:33:26,480 - root - WARNING - 使用stock_zh_a_hist(无前缀)未能获取到 000001 历史数据
2025-04-16 18:33:26,480 - root - INFO - 方法3: 根据市场和板块信息获取 000001 历史数据
2025-04-16 18:33:26,481 - root - INFO - 000001 是深交所股票(主板/中小板)
2025-04-16 18:33:26,481 - root - WARNING - 使用方法3获取 000001 数据时出错: 'AKShareDS' object has no attribute 'get_sz_hist'
2025-04-16 18:33:26,482 - root - ERROR - 无法获取股票 000001 的历史数据
2025-04-16 18:33:26,482 - __main__ - WARNING - 无法获取股票 000001 的数据
2025-04-16 18:33:26,482 - __main__ - ERROR - 没有有效的股票数据进行聚类分析
2025-04-16 18:33:26,483 - __main__ - INFO - 程序执行完毕
2025-04-16 19:07:13,099 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 19:07:13,099 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 19:07:13,099 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 19:07:18,101 - src.data_sources.akshare - WARNING - 连接AKShare超时
2025-04-16 19:07:18,103 - src.data_sources.akshare - INFO - 从本地缓存加载 30 只A股股票信息
2025-04-16 19:07:18,104 - src.data_sources.akshare - WARNING - AKShare连接失败，但已启用部分功能
2025-04-16 19:07:18,104 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 19:07:18,105 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 19:07:18,105 - __main__ - WARNING - AKShare数据源初始化失败，将不可用
2025-04-16 19:07:18,106 - __main__ - INFO - 初始化CSV存储
2025-04-16 19:07:18,106 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 19:07:18,107 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 19:07:18,107 - __main__ - ERROR - 没有可用的数据源，程序退出
2025-04-16 19:07:33,896 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 19:07:33,896 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 19:07:33,896 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 19:07:38,897 - src.data_sources.akshare - WARNING - 连接AKShare超时
2025-04-16 19:07:38,901 - src.data_sources.akshare - INFO - 从本地缓存加载 30 只A股股票信息
2025-04-16 19:07:38,902 - src.data_sources.akshare - WARNING - AKShare连接失败，但已启用部分功能
2025-04-16 19:07:38,903 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 19:07:38,904 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 19:07:38,905 - __main__ - WARNING - AKShare数据源初始化失败，将不可用
2025-04-16 19:07:38,906 - __main__ - INFO - 初始化CSV存储
2025-04-16 19:07:38,907 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 19:07:38,908 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 19:07:38,909 - __main__ - ERROR - 没有可用的数据源，程序退出
2025-04-16 19:42:42,182 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 19:42:42,182 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 19:42:42,183 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 19:42:47,184 - src.data_sources.akshare - WARNING - 连接AKShare超时
2025-04-16 19:42:47,226 - src.data_sources.akshare - INFO - 从本地缓存加载 30 只A股股票信息
2025-04-16 19:42:47,232 - src.data_sources.akshare - WARNING - AKShare连接失败，但已启用部分功能
2025-04-16 19:42:47,241 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 19:42:47,244 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 19:42:47,253 - __main__ - WARNING - AKShare数据源初始化失败，将不可用
2025-04-16 19:42:47,260 - __main__ - INFO - 初始化CSV存储
2025-04-16 19:42:47,266 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 19:42:47,280 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 19:42:47,284 - __main__ - ERROR - 没有可用的数据源，程序退出
2025-04-16 20:07:18,512 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 20:07:18,513 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 20:07:18,513 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 20:07:18,514 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 20:07:18,514 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 20:07:18,685 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 20:07:18,686 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 20:07:18,686 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 20:07:27,634 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 20:07:27,635 - __main__ - INFO - 初始化CSV存储
2025-04-16 20:07:27,636 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 20:07:27,637 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 20:07:27,649 - __main__ - INFO - 从 akshare 获取 2 只股票的实时数据...
2025-04-16 20:07:27,650 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 20:08:07,733 - src.data_sources.akshare - INFO - 成功获取A股实时行情，共 5410 只股票
2025-04-16 20:08:07,734 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 20:08:07,734 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 20:08:07,735 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 20:08:07,736 - src.data_sources.akshare - INFO - 获取 600519 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 20:08:07,736 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 20:08:07,736 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 20:08:07,737 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 20:08:07,738 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600519 的实时数据...
2025-04-16 20:08:07,739 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600519 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 20:08:07,739 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600519 的当日数据...
2025-04-16 20:08:07,917 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600519 的当日数据
2025-04-16 20:08:07,918 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600519 的行情数据...
2025-04-16 20:08:26,829 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600519 的行情数据
2025-04-16 20:08:26,829 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 20:08:26,830 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 20:08:26,830 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 20:08:26,831 - src.data_sources.akshare - INFO - 获取 601398 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 20:08:26,831 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 20:08:26,831 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 20:08:26,832 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 20:08:26,833 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601398 的实时数据...
2025-04-16 20:08:26,834 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 601398 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 20:08:26,834 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 601398 的当日数据...
2025-04-16 20:08:26,933 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 601398 的当日数据
2025-04-16 20:08:26,933 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 601398 的行情数据...
2025-04-16 20:08:33,099 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 601398 的行情数据
2025-04-16 20:08:33,099 - src.data_sources.akshare - INFO - 成功获取 4 只股票的实时数据
2025-04-16 20:08:33,101 - __main__ - INFO - 成功获取 4 条实时数据
2025-04-16 20:08:33,101 - __main__ - INFO - 将数据保存到 csv 存储...
2025-04-16 20:08:33,103 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\realtime/all.csv，行数: 4
2025-04-16 20:08:33,104 - __main__ - INFO - 成功保存实时数据
2025-04-16 20:08:33,104 - __main__ - INFO - 程序执行完毕
2025-04-16 20:14:40,107 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 20:14:40,107 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 20:14:40,107 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 20:14:40,108 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 20:14:40,110 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 20:14:40,294 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 20:14:40,295 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 20:14:40,296 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 20:14:50,460 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 20:14:50,461 - __main__ - INFO - 初始化CSV存储
2025-04-16 20:14:50,462 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 20:14:50,462 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 20:14:56,371 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 20:14:56,372 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 20:14:56,372 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1', '2', '600000', '601288', '651']
2025-04-16 20:14:56,372 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 20:14:56,394 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 20:14:56,409 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 20:14:56,423 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 20:14:56,424 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 20:14:56,436 - __main__ - INFO - 加载股票 2 的数据...
2025-04-16 20:14:56,436 - __main__ - INFO - 股票代码标准化: 2 -> 000002 (假设为深市股票)
2025-04-16 20:14:56,448 - __main__ - INFO - 加载股票 600000 的数据...
2025-04-16 20:14:56,461 - __main__ - INFO - 加载股票 601288 的数据...
2025-04-16 20:14:56,473 - __main__ - INFO - 加载股票 651 的数据...
2025-04-16 20:14:56,474 - __main__ - INFO - 股票代码标准化: 651 -> 000651 (上市股票)
2025-04-16 20:14:56,474 - src.storage.csv_storage - WARNING - 文件 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/000651.csv 不存在
2025-04-16 20:14:56,475 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000651 -> 输出 000651
2025-04-16 20:14:56,475 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 20:14:56,475 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 000651 的历史数据
2025-04-16 20:14:56,477 - src.data_sources.akshare - INFO - 已生成 91 条 000651 的模拟历史数据
2025-04-16 20:14:56,481 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/000651.csv，行数: 91
2025-04-16 20:14:56,484 - __main__ - INFO - 股票 600519 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:14:56,484 - __main__ - INFO - 股票 601398 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:14:56,485 - __main__ - INFO - 股票 600036 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:14:56,486 - __main__ - INFO - 股票 1 数据列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:14:56,486 - __main__ - INFO - 股票 2 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:14:56,486 - __main__ - INFO - 股票 600000 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:14:56,487 - __main__ - INFO - 股票 601288 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:14:56,487 - __main__ - INFO - 股票 651 数据列: ['change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'volume']
2025-04-16 20:14:56,488 - __main__ - INFO - 所有数据集共有的列: ['change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'volume']
2025-04-16 20:14:56,493 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:14:56,493 - __main__ - INFO - 合并后的数据大小: 316 行 x 26 列
2025-04-16 20:14:56,493 - __main__ - INFO - 最终数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:14:56,494 - __main__ - INFO - 寻找最佳聚类数（最大尝试8个簇）...
2025-04-16 20:14:56,499 - src.analysis.clustering - INFO - 计算1到8个聚类的inertia值...
2025-04-16 20:14:56,624 - src.analysis.clustering - INFO - 聚类数 1: inertia = 1896.00
2025-04-16 20:14:56,640 - src.analysis.clustering - INFO - 聚类数 2: inertia = 610.97
2025-04-16 20:14:56,672 - src.analysis.clustering - INFO - 聚类数 3: inertia = 391.97
2025-04-16 20:14:56,693 - src.analysis.clustering - INFO - 聚类数 4: inertia = 259.89
2025-04-16 20:14:56,715 - src.analysis.clustering - INFO - 聚类数 5: inertia = 198.69
2025-04-16 20:14:56,740 - src.analysis.clustering - INFO - 聚类数 6: inertia = 160.70
2025-04-16 20:14:56,766 - src.analysis.clustering - INFO - 聚类数 7: inertia = 132.67
2025-04-16 20:14:56,793 - src.analysis.clustering - INFO - 聚类数 8: inertia = 106.52
2025-04-16 20:14:56,979 - src.analysis.clustering - INFO - 未找到明显的肘部点，使用简单方法确定最佳聚类数
2025-04-16 20:14:56,980 - src.analysis.clustering - INFO - 确定的最佳聚类数: 7
2025-04-16 20:14:56,980 - __main__ - INFO - 确定的最佳聚类数: 7
2025-04-16 20:14:56,981 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:14:57,356 - src.analysis.clustering - INFO - KMeans聚类完成，分为 7 个簇
2025-04-16 20:14:57,356 - src.analysis.clustering - INFO - 簇 0: 107 个样本 (33.86%)
2025-04-16 20:14:57,357 - src.analysis.clustering - INFO - 簇 1: 20 个样本 (6.33%)
2025-04-16 20:14:57,357 - src.analysis.clustering - INFO - 簇 2: 22 个样本 (6.96%)
2025-04-16 20:14:57,357 - src.analysis.clustering - INFO - 簇 3: 62 个样本 (19.62%)
2025-04-16 20:14:57,358 - src.analysis.clustering - INFO - 簇 4: 98 个样本 (31.01%)
2025-04-16 20:14:57,358 - src.analysis.clustering - INFO - 簇 5: 6 个样本 (1.90%)
2025-04-16 20:14:57,359 - src.analysis.clustering - INFO - 簇 6: 1 个样本 (0.32%)
2025-04-16 20:14:57,359 - __main__ - INFO - 聚类结果（7个簇）:
2025-04-16 20:14:57,359 - __main__ - INFO -   0: 107个样本 (33.86%)
2025-04-16 20:14:57,359 - __main__ - INFO -   1: 20个样本 (6.33%)
2025-04-16 20:14:57,360 - __main__ - INFO -   2: 22个样本 (6.96%)
2025-04-16 20:14:57,360 - __main__ - INFO -   3: 62个样本 (19.62%)
2025-04-16 20:14:57,360 - __main__ - INFO -   4: 98个样本 (31.01%)
2025-04-16 20:14:57,361 - __main__ - INFO -   5: 6个样本 (1.90%)
2025-04-16 20:14:57,361 - __main__ - INFO -   6: 1个样本 (0.32%)
2025-04-16 20:14:57,361 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 20:14:58,507 - __main__ - INFO - 图表已保存到 results\clustering_clusters_7clusters.png
2025-04-16 20:14:58,522 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 20:14:58,529 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 20:14:58,547 - src.analysis.clustering - INFO - 聚类数 1: inertia = 1896.00
2025-04-16 20:14:58,566 - src.analysis.clustering - INFO - 聚类数 2: inertia = 610.97
2025-04-16 20:14:58,586 - src.analysis.clustering - INFO - 聚类数 3: inertia = 391.97
2025-04-16 20:14:58,610 - src.analysis.clustering - INFO - 聚类数 4: inertia = 259.89
2025-04-16 20:14:58,632 - src.analysis.clustering - INFO - 聚类数 5: inertia = 198.69
2025-04-16 20:14:58,658 - src.analysis.clustering - INFO - 聚类数 6: inertia = 160.70
2025-04-16 20:14:58,686 - src.analysis.clustering - INFO - 聚类数 7: inertia = 132.67
2025-04-16 20:14:58,715 - src.analysis.clustering - INFO - 聚类数 8: inertia = 106.52
2025-04-16 20:14:58,746 - src.analysis.clustering - INFO - 聚类数 9: inertia = 91.58
2025-04-16 20:14:58,778 - src.analysis.clustering - INFO - 聚类数 10: inertia = 75.72
2025-04-16 20:14:58,778 - src.analysis.clustering - INFO - 确定的最佳聚类数: 8
2025-04-16 20:14:59,048 - __main__ - INFO - 图表已保存到 results\clustering_elbow_7clusters.png
2025-04-16 20:14:59,059 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 20:14:59,174 - src.analysis.clustering - WARNING - 特征 'open' 在聚类 6 中的方差为零或数据点不足，绘制条形图
2025-04-16 20:14:59,239 - src.analysis.clustering - WARNING - 特征 'close' 在聚类 6 中的方差为零或数据点不足，绘制条形图
2025-04-16 20:14:59,303 - src.analysis.clustering - WARNING - 特征 'high' 在聚类 6 中的方差为零或数据点不足，绘制条形图
2025-04-16 20:14:59,369 - src.analysis.clustering - WARNING - 特征 'low' 在聚类 6 中的方差为零或数据点不足，绘制条形图
2025-04-16 20:14:59,435 - src.analysis.clustering - WARNING - 特征 'volume' 在聚类 6 中的方差为零或数据点不足，绘制条形图
2025-04-16 20:14:59,497 - src.analysis.clustering - WARNING - 特征 'change_percent' 在聚类 6 中的方差为零或数据点不足，绘制条形图
2025-04-16 20:15:00,476 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_7clusters.png
2025-04-16 20:15:00,484 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 20:15:00,551 - src.analysis.clustering - INFO - 原始聚类中心数据类型: <class 'numpy.ndarray'>
2025-04-16 20:15:00,551 - src.analysis.clustering - INFO - 原始聚类中心数据形状: (7, 6)
2025-04-16 20:15:00,552 - src.analysis.clustering - INFO - 处理后的聚类中心数据形状: (7, 6)
2025-04-16 20:15:00,552 - src.analysis.clustering - INFO - 有效特征数量: 6, 特征名称: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:15:00,553 - src.analysis.clustering - INFO - 成功创建聚类中心特征筛选数据，形状: (7, 6)
2025-04-16 20:15:00,553 - src.analysis.clustering - INFO - 所有特征列已成功标准化
2025-04-16 20:15:00,554 - src.analysis.clustering - INFO - 标准化后的数据形状: (7, 6)
2025-04-16 20:15:00,554 - src.analysis.clustering - INFO - 创建角度数组，长度: 6
2025-04-16 20:15:00,555 - src.analysis.clustering - INFO - 闭合角度数组，最终长度: 7
2025-04-16 20:15:00,555 - src.analysis.clustering - INFO - 将绘制 7 个簇的雷达图
2025-04-16 20:15:00,555 - src.analysis.clustering - INFO - 聚类 0 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:15:00,556 - src.analysis.clustering - INFO - 成功绘制聚类 0 的雷达图
2025-04-16 20:15:00,556 - src.analysis.clustering - INFO - 聚类 1 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:15:00,557 - src.analysis.clustering - INFO - 成功绘制聚类 1 的雷达图
2025-04-16 20:15:00,558 - src.analysis.clustering - INFO - 聚类 2 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:15:00,559 - src.analysis.clustering - INFO - 成功绘制聚类 2 的雷达图
2025-04-16 20:15:00,559 - src.analysis.clustering - INFO - 聚类 3 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:15:00,560 - src.analysis.clustering - INFO - 成功绘制聚类 3 的雷达图
2025-04-16 20:15:00,560 - src.analysis.clustering - INFO - 聚类 4 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:15:00,562 - src.analysis.clustering - INFO - 成功绘制聚类 4 的雷达图
2025-04-16 20:15:00,562 - src.analysis.clustering - INFO - 聚类 5 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:15:00,565 - src.analysis.clustering - INFO - 成功绘制聚类 5 的雷达图
2025-04-16 20:15:00,566 - src.analysis.clustering - INFO - 聚类 6 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:15:00,567 - src.analysis.clustering - INFO - 成功绘制聚类 6 的雷达图
2025-04-16 20:15:00,567 - src.analysis.clustering - INFO - 成功绘制了 7 个聚类的雷达图
2025-04-16 20:15:00,929 - __main__ - INFO - 图表已保存到 results\clustering_centroids_7clusters.png
2025-04-16 20:15:00,942 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_7clusters.csv
2025-04-16 20:15:00,943 - __main__ - INFO - 聚类分析完成
2025-04-16 20:15:00,944 - __main__ - INFO - 程序执行完毕
2025-04-16 20:15:41,249 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 20:15:41,250 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 20:15:41,250 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 20:15:41,250 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 20:15:41,251 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 20:15:41,391 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 20:15:41,393 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 20:15:41,394 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 20:15:50,236 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 20:15:50,237 - __main__ - INFO - 初始化CSV存储
2025-04-16 20:15:50,238 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 20:15:50,239 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 20:15:51,300 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 20:15:51,300 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 20:15:51,300 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 20:15:51,301 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 20:15:51,311 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 20:15:51,318 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 20:15:51,326 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 20:15:51,326 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 20:15:51,330 - __main__ - WARNING - 股票 000001 的 turnover_rate 列全为NaN，将使用默认值填充
2025-04-16 20:15:51,331 - __main__ - INFO - 股票 600519 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:15:51,332 - __main__ - INFO - 股票 601398 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:15:51,333 - __main__ - INFO - 股票 600036 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:15:51,333 - __main__ - INFO - 股票 1 数据列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:15:51,334 - __main__ - INFO - 所有数据集共有的列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:15:51,334 - __main__ - WARNING - 特征 'amplitude' 在以下股票数据中缺失: ['1']
2025-04-16 20:15:51,338 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amplitude', 'turnover_rate']
2025-04-16 20:15:51,338 - __main__ - INFO - 合并后的数据大小: 87 行 x 26 列
2025-04-16 20:15:51,339 - __main__ - INFO - 最终数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:15:51,339 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amplitude', 'turnover_rate']
2025-04-16 20:15:51,603 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 20:15:51,604 - src.analysis.clustering - INFO - 簇 0: 3 个样本 (3.45%)
2025-04-16 20:15:51,604 - src.analysis.clustering - INFO - 簇 1: 63 个样本 (72.41%)
2025-04-16 20:15:51,605 - src.analysis.clustering - INFO - 簇 2: 21 个样本 (24.14%)
2025-04-16 20:15:51,605 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 20:15:51,605 - __main__ - INFO -   0: 3个样本 (3.45%)
2025-04-16 20:15:51,606 - __main__ - INFO -   1: 63个样本 (72.41%)
2025-04-16 20:15:51,606 - __main__ - INFO -   2: 21个样本 (24.14%)
2025-04-16 20:15:51,607 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 20:15:52,111 - __main__ - INFO - 图表已保存到 results\clustering_clusters_3clusters.png
2025-04-16 20:15:52,127 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 20:15:52,135 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 20:15:52,153 - src.analysis.clustering - INFO - 聚类数 1: inertia = 522.00
2025-04-16 20:15:52,165 - src.analysis.clustering - INFO - 聚类数 2: inertia = 168.62
2025-04-16 20:15:52,177 - src.analysis.clustering - INFO - 聚类数 3: inertia = 91.10
2025-04-16 20:15:52,192 - src.analysis.clustering - INFO - 聚类数 4: inertia = 64.96
2025-04-16 20:15:52,211 - src.analysis.clustering - INFO - 聚类数 5: inertia = 40.25
2025-04-16 20:15:52,232 - src.analysis.clustering - INFO - 聚类数 6: inertia = 29.05
2025-04-16 20:15:52,255 - src.analysis.clustering - INFO - 聚类数 7: inertia = 20.90
2025-04-16 20:15:52,277 - src.analysis.clustering - INFO - 聚类数 8: inertia = 16.14
2025-04-16 20:15:52,301 - src.analysis.clustering - INFO - 聚类数 9: inertia = 12.81
2025-04-16 20:15:52,326 - src.analysis.clustering - INFO - 聚类数 10: inertia = 9.63
2025-04-16 20:15:52,347 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 20:15:52,607 - __main__ - INFO - 图表已保存到 results\clustering_elbow_3clusters.png
2025-04-16 20:15:52,617 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 20:15:52,962 - src.analysis.clustering - WARNING - 特征 'turnover_rate' 在聚类 2 中的方差为零或数据点不足，绘制条形图
2025-04-16 20:15:53,975 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_3clusters.png
2025-04-16 20:15:53,987 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 20:15:54,054 - src.analysis.clustering - INFO - 原始聚类中心数据类型: <class 'numpy.ndarray'>
2025-04-16 20:15:54,055 - src.analysis.clustering - INFO - 原始聚类中心数据形状: (3, 8)
2025-04-16 20:15:54,055 - src.analysis.clustering - INFO - 处理后的聚类中心数据形状: (3, 8)
2025-04-16 20:15:54,055 - src.analysis.clustering - INFO - 有效特征数量: 8, 特征名称: ['open', 'close', 'high', 'low', 'volume', 'change_percent', 'amplitude', 'turnover_rate']
2025-04-16 20:15:54,055 - src.analysis.clustering - INFO - 成功创建聚类中心特征筛选数据，形状: (3, 8)
2025-04-16 20:15:54,056 - src.analysis.clustering - INFO - 所有特征列已成功标准化
2025-04-16 20:15:54,056 - src.analysis.clustering - INFO - 标准化后的数据形状: (3, 8)
2025-04-16 20:15:54,057 - src.analysis.clustering - INFO - 创建角度数组，长度: 8
2025-04-16 20:15:54,057 - src.analysis.clustering - INFO - 闭合角度数组，最终长度: 9
2025-04-16 20:15:54,057 - src.analysis.clustering - INFO - 将绘制 3 个簇的雷达图
2025-04-16 20:15:54,057 - src.analysis.clustering - INFO - 聚类 0 最终值数组长度: 9, 角度数组长度: 9
2025-04-16 20:15:54,059 - src.analysis.clustering - INFO - 成功绘制聚类 0 的雷达图
2025-04-16 20:15:54,059 - src.analysis.clustering - INFO - 聚类 1 最终值数组长度: 9, 角度数组长度: 9
2025-04-16 20:15:54,060 - src.analysis.clustering - INFO - 成功绘制聚类 1 的雷达图
2025-04-16 20:15:54,060 - src.analysis.clustering - INFO - 聚类 2 最终值数组长度: 9, 角度数组长度: 9
2025-04-16 20:15:54,061 - src.analysis.clustering - INFO - 成功绘制聚类 2 的雷达图
2025-04-16 20:15:54,061 - src.analysis.clustering - INFO - 成功绘制了 3 个聚类的雷达图
2025-04-16 20:15:54,372 - __main__ - INFO - 图表已保存到 results\clustering_centroids_3clusters.png
2025-04-16 20:15:54,387 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 20:15:54,388 - __main__ - INFO - 聚类分析完成
2025-04-16 20:15:54,388 - __main__ - INFO - 程序执行完毕
2025-04-16 20:16:06,998 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 20:16:06,998 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 20:16:06,998 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 20:16:06,999 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 20:16:06,999 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 20:16:07,151 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 20:16:07,152 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 20:16:07,153 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 20:16:15,539 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 20:16:15,540 - __main__ - INFO - 初始化CSV存储
2025-04-16 20:16:15,541 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 20:16:15,542 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 20:16:16,558 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 20:16:16,558 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 20:16:16,558 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 20:16:16,558 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 20:16:16,568 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 20:16:16,576 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 20:16:16,584 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 20:16:16,584 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 20:16:16,589 - __main__ - INFO - 股票 600519 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:16:16,589 - __main__ - INFO - 股票 601398 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:16:16,590 - __main__ - INFO - 股票 600036 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:16:16,590 - __main__ - INFO - 股票 1 数据列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:16:16,590 - __main__ - INFO - 所有数据集共有的列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:16:16,594 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:16:16,594 - __main__ - INFO - 合并后的数据大小: 87 行 x 26 列
2025-04-16 20:16:16,595 - __main__ - INFO - 最终数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:16:16,595 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:16:16,862 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 20:16:16,863 - src.analysis.clustering - INFO - 簇 0: 44 个样本 (50.57%)
2025-04-16 20:16:16,863 - src.analysis.clustering - INFO - 簇 1: 21 个样本 (24.14%)
2025-04-16 20:16:16,863 - src.analysis.clustering - INFO - 簇 2: 22 个样本 (25.29%)
2025-04-16 20:16:16,864 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 20:16:16,864 - __main__ - INFO -   0: 44个样本 (50.57%)
2025-04-16 20:16:16,865 - __main__ - INFO -   1: 21个样本 (24.14%)
2025-04-16 20:16:16,865 - __main__ - INFO -   2: 22个样本 (25.29%)
2025-04-16 20:16:16,865 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 20:16:17,367 - __main__ - INFO - 图表已保存到 results/cluster_analysis\clustering_clusters_3clusters.png
2025-04-16 20:16:17,381 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 20:16:17,389 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 20:16:17,402 - src.analysis.clustering - INFO - 聚类数 1: inertia = 522.00
2025-04-16 20:16:17,421 - src.analysis.clustering - INFO - 聚类数 2: inertia = 168.62
2025-04-16 20:16:17,439 - src.analysis.clustering - INFO - 聚类数 3: inertia = 91.10
2025-04-16 20:16:17,459 - src.analysis.clustering - INFO - 聚类数 4: inertia = 64.96
2025-04-16 20:16:17,478 - src.analysis.clustering - INFO - 聚类数 5: inertia = 40.25
2025-04-16 20:16:17,498 - src.analysis.clustering - INFO - 聚类数 6: inertia = 29.05
2025-04-16 20:16:17,518 - src.analysis.clustering - INFO - 聚类数 7: inertia = 20.90
2025-04-16 20:16:17,541 - src.analysis.clustering - INFO - 聚类数 8: inertia = 16.14
2025-04-16 20:16:17,565 - src.analysis.clustering - INFO - 聚类数 9: inertia = 12.81
2025-04-16 20:16:17,589 - src.analysis.clustering - INFO - 聚类数 10: inertia = 9.63
2025-04-16 20:16:17,609 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 20:16:17,873 - __main__ - INFO - 图表已保存到 results/cluster_analysis\clustering_elbow_3clusters.png
2025-04-16 20:16:17,885 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 20:16:19,107 - __main__ - INFO - 图表已保存到 results/cluster_analysis\clustering_feature_distribution_3clusters.png
2025-04-16 20:16:19,117 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 20:16:19,185 - src.analysis.clustering - INFO - 原始聚类中心数据类型: <class 'numpy.ndarray'>
2025-04-16 20:16:19,185 - src.analysis.clustering - INFO - 原始聚类中心数据形状: (3, 6)
2025-04-16 20:16:19,185 - src.analysis.clustering - INFO - 处理后的聚类中心数据形状: (3, 6)
2025-04-16 20:16:19,186 - src.analysis.clustering - INFO - 有效特征数量: 6, 特征名称: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:16:19,186 - src.analysis.clustering - INFO - 成功创建聚类中心特征筛选数据，形状: (3, 6)
2025-04-16 20:16:19,187 - src.analysis.clustering - INFO - 所有特征列已成功标准化
2025-04-16 20:16:19,187 - src.analysis.clustering - INFO - 标准化后的数据形状: (3, 6)
2025-04-16 20:16:19,187 - src.analysis.clustering - INFO - 创建角度数组，长度: 6
2025-04-16 20:16:19,188 - src.analysis.clustering - INFO - 闭合角度数组，最终长度: 7
2025-04-16 20:16:19,188 - src.analysis.clustering - INFO - 将绘制 3 个簇的雷达图
2025-04-16 20:16:19,188 - src.analysis.clustering - INFO - 聚类 0 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:16:19,189 - src.analysis.clustering - INFO - 成功绘制聚类 0 的雷达图
2025-04-16 20:16:19,189 - src.analysis.clustering - INFO - 聚类 1 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:16:19,190 - src.analysis.clustering - INFO - 成功绘制聚类 1 的雷达图
2025-04-16 20:16:19,190 - src.analysis.clustering - INFO - 聚类 2 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:16:19,192 - src.analysis.clustering - INFO - 成功绘制聚类 2 的雷达图
2025-04-16 20:16:19,192 - src.analysis.clustering - INFO - 成功绘制了 3 个聚类的雷达图
2025-04-16 20:16:19,470 - __main__ - INFO - 图表已保存到 results/cluster_analysis\clustering_centroids_3clusters.png
2025-04-16 20:16:19,481 - __main__ - INFO - 聚类结果已保存到 results/cluster_analysis\clustering_result_3clusters.csv
2025-04-16 20:16:19,482 - __main__ - INFO - 聚类分析完成
2025-04-16 20:16:19,482 - __main__ - INFO - 程序执行完毕
2025-04-16 20:16:39,669 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 20:16:39,669 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 20:16:39,669 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 20:16:39,670 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 20:16:39,670 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 20:16:39,814 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 20:16:39,815 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 20:16:39,816 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 20:16:48,696 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 20:16:48,697 - __main__ - INFO - 初始化CSV存储
2025-04-16 20:16:48,698 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 20:16:48,699 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 20:16:49,705 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 20:16:49,705 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 20:16:49,706 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 20:16:49,706 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 20:16:49,716 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 20:16:49,723 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 20:16:49,731 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 20:16:49,732 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 20:16:49,738 - __main__ - INFO - 股票 600519 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:16:49,738 - __main__ - INFO - 股票 601398 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:16:49,739 - __main__ - INFO - 股票 600036 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:16:49,740 - __main__ - INFO - 股票 1 数据列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:16:49,740 - __main__ - INFO - 所有数据集共有的列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:16:49,744 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:16:49,745 - __main__ - INFO - 合并后的数据大小: 87 行 x 26 列
2025-04-16 20:16:49,745 - __main__ - INFO - 最终数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:16:49,746 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:16:49,989 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 20:16:49,989 - src.analysis.clustering - INFO - 簇 0: 44 个样本 (50.57%)
2025-04-16 20:16:49,989 - src.analysis.clustering - INFO - 簇 1: 21 个样本 (24.14%)
2025-04-16 20:16:49,990 - src.analysis.clustering - INFO - 簇 2: 22 个样本 (25.29%)
2025-04-16 20:16:49,991 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 20:16:49,991 - __main__ - INFO -   0: 44个样本 (50.57%)
2025-04-16 20:16:49,991 - __main__ - INFO -   1: 21个样本 (24.14%)
2025-04-16 20:16:49,992 - __main__ - INFO -   2: 22个样本 (25.29%)
2025-04-16 20:16:49,992 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 20:16:50,495 - __main__ - INFO - 图表已保存到 results\clustering_clusters_3clusters.png
2025-04-16 20:16:50,517 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 20:16:50,517 - __main__ - INFO - 聚类分析完成
2025-04-16 20:16:50,517 - __main__ - INFO - 程序执行完毕
2025-04-16 20:17:06,755 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 20:17:06,755 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 20:17:06,755 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 20:17:06,756 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 20:17:06,757 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 20:17:06,844 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 20:17:06,844 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 20:17:06,845 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 20:17:15,384 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 20:17:15,385 - __main__ - INFO - 初始化CSV存储
2025-04-16 20:17:15,386 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 20:17:15,388 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 20:17:16,405 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 20:17:16,405 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 20:17:16,406 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 20:17:16,406 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 20:17:16,416 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 20:17:16,423 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 20:17:16,430 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 20:17:16,431 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 20:17:16,436 - __main__ - INFO - 股票 600519 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:17:16,437 - __main__ - INFO - 股票 601398 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:17:16,438 - __main__ - INFO - 股票 600036 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:17:16,438 - __main__ - INFO - 股票 1 数据列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:17:16,439 - __main__ - INFO - 所有数据集共有的列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:17:16,443 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:17:16,443 - __main__ - INFO - 合并后的数据大小: 87 行 x 26 列
2025-04-16 20:17:16,444 - __main__ - INFO - 最终数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:17:16,444 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:17:16,699 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 20:17:16,699 - src.analysis.clustering - INFO - 簇 0: 44 个样本 (50.57%)
2025-04-16 20:17:16,700 - src.analysis.clustering - INFO - 簇 1: 21 个样本 (24.14%)
2025-04-16 20:17:16,700 - src.analysis.clustering - INFO - 簇 2: 22 个样本 (25.29%)
2025-04-16 20:17:16,701 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 20:17:16,701 - __main__ - INFO -   0: 44个样本 (50.57%)
2025-04-16 20:17:16,701 - __main__ - INFO -   1: 21个样本 (24.14%)
2025-04-16 20:17:16,701 - __main__ - INFO -   2: 22个样本 (25.29%)
2025-04-16 20:17:16,702 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 20:17:16,705 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 20:17:16,718 - src.analysis.clustering - INFO - 聚类数 1: inertia = 522.00
2025-04-16 20:17:16,735 - src.analysis.clustering - INFO - 聚类数 2: inertia = 168.62
2025-04-16 20:17:16,752 - src.analysis.clustering - INFO - 聚类数 3: inertia = 91.10
2025-04-16 20:17:16,770 - src.analysis.clustering - INFO - 聚类数 4: inertia = 64.96
2025-04-16 20:17:16,788 - src.analysis.clustering - INFO - 聚类数 5: inertia = 40.25
2025-04-16 20:17:16,808 - src.analysis.clustering - INFO - 聚类数 6: inertia = 29.05
2025-04-16 20:17:16,828 - src.analysis.clustering - INFO - 聚类数 7: inertia = 20.90
2025-04-16 20:17:16,851 - src.analysis.clustering - INFO - 聚类数 8: inertia = 16.14
2025-04-16 20:17:16,876 - src.analysis.clustering - INFO - 聚类数 9: inertia = 12.81
2025-04-16 20:17:16,900 - src.analysis.clustering - INFO - 聚类数 10: inertia = 9.63
2025-04-16 20:17:16,919 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 20:17:17,216 - __main__ - INFO - 图表已保存到 results\clustering_elbow_3clusters.png
2025-04-16 20:17:17,235 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 20:17:17,235 - __main__ - INFO - 聚类分析完成
2025-04-16 20:17:17,236 - __main__ - INFO - 程序执行完毕
2025-04-16 20:17:25,876 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 20:17:25,876 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 20:17:25,876 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 20:17:25,877 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 20:17:25,877 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 20:17:26,985 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 20:17:26,986 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 20:17:26,987 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 20:17:35,140 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 20:17:35,141 - __main__ - INFO - 初始化CSV存储
2025-04-16 20:17:35,142 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 20:17:35,144 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 20:17:36,181 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 20:17:36,181 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 20:17:36,182 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 20:17:36,182 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 20:17:36,192 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 20:17:36,198 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 20:17:36,205 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 20:17:36,206 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 20:17:36,210 - __main__ - INFO - 股票 600519 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:17:36,211 - __main__ - INFO - 股票 601398 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:17:36,212 - __main__ - INFO - 股票 600036 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:17:36,212 - __main__ - INFO - 股票 1 数据列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:17:36,213 - __main__ - INFO - 所有数据集共有的列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:17:36,216 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:17:36,217 - __main__ - INFO - 合并后的数据大小: 87 行 x 26 列
2025-04-16 20:17:36,217 - __main__ - INFO - 最终数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:17:36,218 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:17:36,462 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 20:17:36,463 - src.analysis.clustering - INFO - 簇 0: 44 个样本 (50.57%)
2025-04-16 20:17:36,463 - src.analysis.clustering - INFO - 簇 1: 21 个样本 (24.14%)
2025-04-16 20:17:36,463 - src.analysis.clustering - INFO - 簇 2: 22 个样本 (25.29%)
2025-04-16 20:17:36,464 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 20:17:36,464 - __main__ - INFO -   0: 44个样本 (50.57%)
2025-04-16 20:17:36,464 - __main__ - INFO -   1: 21个样本 (24.14%)
2025-04-16 20:17:36,465 - __main__ - INFO -   2: 22个样本 (25.29%)
2025-04-16 20:17:36,465 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 20:17:37,713 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_3clusters.png
2025-04-16 20:17:37,734 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 20:17:37,735 - __main__ - INFO - 聚类分析完成
2025-04-16 20:17:37,735 - __main__ - INFO - 程序执行完毕
2025-04-16 20:17:55,186 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 20:17:55,187 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 20:17:55,187 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 20:17:55,187 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 20:17:55,188 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 20:17:55,270 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 20:17:55,270 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 20:17:55,271 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 20:18:03,118 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 20:18:03,119 - __main__ - INFO - 初始化CSV存储
2025-04-16 20:18:03,120 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 20:18:03,121 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 20:18:04,203 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 20:18:04,204 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 20:18:04,204 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 20:18:04,205 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 20:18:04,216 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 20:18:04,224 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 20:18:04,231 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 20:18:04,232 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 20:18:04,236 - __main__ - INFO - 股票 600519 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:18:04,237 - __main__ - INFO - 股票 601398 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:18:04,237 - __main__ - INFO - 股票 600036 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:18:04,238 - __main__ - INFO - 股票 1 数据列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:18:04,238 - __main__ - INFO - 所有数据集共有的列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:18:04,242 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:18:04,242 - __main__ - INFO - 合并后的数据大小: 87 行 x 26 列
2025-04-16 20:18:04,242 - __main__ - INFO - 最终数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:18:04,243 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:18:04,491 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 20:18:04,491 - src.analysis.clustering - INFO - 簇 0: 44 个样本 (50.57%)
2025-04-16 20:18:04,492 - src.analysis.clustering - INFO - 簇 1: 21 个样本 (24.14%)
2025-04-16 20:18:04,492 - src.analysis.clustering - INFO - 簇 2: 22 个样本 (25.29%)
2025-04-16 20:18:04,492 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 20:18:04,492 - __main__ - INFO -   0: 44个样本 (50.57%)
2025-04-16 20:18:04,493 - __main__ - INFO -   1: 21个样本 (24.14%)
2025-04-16 20:18:04,493 - __main__ - INFO -   2: 22个样本 (25.29%)
2025-04-16 20:18:04,493 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 20:18:04,595 - src.analysis.clustering - INFO - 原始聚类中心数据类型: <class 'numpy.ndarray'>
2025-04-16 20:18:04,595 - src.analysis.clustering - INFO - 原始聚类中心数据形状: (3, 6)
2025-04-16 20:18:04,596 - src.analysis.clustering - INFO - 处理后的聚类中心数据形状: (3, 6)
2025-04-16 20:18:04,596 - src.analysis.clustering - INFO - 有效特征数量: 6, 特征名称: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:18:04,596 - src.analysis.clustering - INFO - 成功创建聚类中心特征筛选数据，形状: (3, 6)
2025-04-16 20:18:04,597 - src.analysis.clustering - INFO - 所有特征列已成功标准化
2025-04-16 20:18:04,597 - src.analysis.clustering - INFO - 标准化后的数据形状: (3, 6)
2025-04-16 20:18:04,598 - src.analysis.clustering - INFO - 创建角度数组，长度: 6
2025-04-16 20:18:04,598 - src.analysis.clustering - INFO - 闭合角度数组，最终长度: 7
2025-04-16 20:18:04,598 - src.analysis.clustering - INFO - 将绘制 3 个簇的雷达图
2025-04-16 20:18:04,598 - src.analysis.clustering - INFO - 聚类 0 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:18:04,600 - src.analysis.clustering - INFO - 成功绘制聚类 0 的雷达图
2025-04-16 20:18:04,600 - src.analysis.clustering - INFO - 聚类 1 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:18:04,601 - src.analysis.clustering - INFO - 成功绘制聚类 1 的雷达图
2025-04-16 20:18:04,601 - src.analysis.clustering - INFO - 聚类 2 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:18:04,602 - src.analysis.clustering - INFO - 成功绘制聚类 2 的雷达图
2025-04-16 20:18:04,603 - src.analysis.clustering - INFO - 成功绘制了 3 个聚类的雷达图
2025-04-16 20:18:04,888 - __main__ - INFO - 图表已保存到 results\clustering_centroids_3clusters.png
2025-04-16 20:18:04,899 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 20:18:04,900 - __main__ - INFO - 聚类分析完成
2025-04-16 20:18:04,901 - __main__ - INFO - 程序执行完毕
2025-04-16 20:18:32,201 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 20:18:32,201 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 20:18:32,202 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 20:18:32,202 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 20:18:32,203 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 20:18:32,598 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 20:18:32,599 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 20:18:32,600 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 20:18:40,873 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 20:18:40,873 - __main__ - INFO - 初始化CSV存储
2025-04-16 20:18:40,874 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 20:18:40,874 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 20:18:41,879 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 20:18:41,880 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 20:18:41,880 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 20:18:41,881 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 20:18:41,890 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 20:18:41,897 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 20:18:41,904 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 20:18:41,904 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 20:18:41,908 - __main__ - WARNING - 股票 000001 的 turnover_rate 列全为NaN，将使用默认值填充
2025-04-16 20:18:41,909 - __main__ - INFO - 股票 600519 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:18:41,909 - __main__ - INFO - 股票 601398 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:18:41,910 - __main__ - INFO - 股票 600036 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:18:41,911 - __main__ - INFO - 股票 1 数据列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:18:41,912 - __main__ - INFO - 所有数据集共有的列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:18:41,915 - __main__ - INFO - 将使用以下特征进行聚类: ['close', 'change_percent', 'volume', 'turnover_rate']
2025-04-16 20:18:41,916 - __main__ - INFO - 合并后的数据大小: 87 行 x 26 列
2025-04-16 20:18:41,916 - __main__ - INFO - 最终数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:18:41,917 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['close', 'change_percent', 'volume', 'turnover_rate']
2025-04-16 20:18:42,154 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 20:18:42,155 - src.analysis.clustering - INFO - 簇 0: 62 个样本 (71.26%)
2025-04-16 20:18:42,155 - src.analysis.clustering - INFO - 簇 1: 21 个样本 (24.14%)
2025-04-16 20:18:42,155 - src.analysis.clustering - INFO - 簇 2: 4 个样本 (4.60%)
2025-04-16 20:18:42,156 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 20:18:42,156 - __main__ - INFO -   0: 62个样本 (71.26%)
2025-04-16 20:18:42,156 - __main__ - INFO -   1: 21个样本 (24.14%)
2025-04-16 20:18:42,157 - __main__ - INFO -   2: 4个样本 (4.60%)
2025-04-16 20:18:42,157 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 20:18:42,704 - __main__ - INFO - 图表已保存到 results\clustering_clusters_3clusters.png
2025-04-16 20:18:42,719 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 20:18:42,724 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 20:18:42,740 - src.analysis.clustering - INFO - 聚类数 1: inertia = 522.00
2025-04-16 20:18:42,759 - src.analysis.clustering - INFO - 聚类数 2: inertia = 168.62
2025-04-16 20:18:42,775 - src.analysis.clustering - INFO - 聚类数 3: inertia = 91.10
2025-04-16 20:18:42,794 - src.analysis.clustering - INFO - 聚类数 4: inertia = 64.96
2025-04-16 20:18:42,812 - src.analysis.clustering - INFO - 聚类数 5: inertia = 40.25
2025-04-16 20:18:42,832 - src.analysis.clustering - INFO - 聚类数 6: inertia = 29.05
2025-04-16 20:18:42,853 - src.analysis.clustering - INFO - 聚类数 7: inertia = 20.90
2025-04-16 20:18:42,876 - src.analysis.clustering - INFO - 聚类数 8: inertia = 16.14
2025-04-16 20:18:42,901 - src.analysis.clustering - INFO - 聚类数 9: inertia = 12.81
2025-04-16 20:18:42,925 - src.analysis.clustering - INFO - 聚类数 10: inertia = 9.63
2025-04-16 20:18:42,945 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 20:18:43,208 - __main__ - INFO - 图表已保存到 results\clustering_elbow_3clusters.png
2025-04-16 20:18:43,217 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 20:18:43,412 - src.analysis.clustering - WARNING - 特征 'turnover_rate' 在聚类 1 中的方差为零或数据点不足，绘制条形图
2025-04-16 20:18:44,128 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_3clusters.png
2025-04-16 20:18:44,138 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 20:18:44,205 - src.analysis.clustering - INFO - 原始聚类中心数据类型: <class 'numpy.ndarray'>
2025-04-16 20:18:44,205 - src.analysis.clustering - INFO - 原始聚类中心数据形状: (3, 4)
2025-04-16 20:18:44,206 - src.analysis.clustering - INFO - 处理后的聚类中心数据形状: (3, 4)
2025-04-16 20:18:44,206 - src.analysis.clustering - INFO - 有效特征数量: 4, 特征名称: ['close', 'change_percent', 'volume', 'turnover_rate']
2025-04-16 20:18:44,206 - src.analysis.clustering - INFO - 成功创建聚类中心特征筛选数据，形状: (3, 4)
2025-04-16 20:18:44,207 - src.analysis.clustering - INFO - 所有特征列已成功标准化
2025-04-16 20:18:44,207 - src.analysis.clustering - INFO - 标准化后的数据形状: (3, 4)
2025-04-16 20:18:44,207 - src.analysis.clustering - INFO - 创建角度数组，长度: 4
2025-04-16 20:18:44,208 - src.analysis.clustering - INFO - 闭合角度数组，最终长度: 5
2025-04-16 20:18:44,208 - src.analysis.clustering - INFO - 将绘制 3 个簇的雷达图
2025-04-16 20:18:44,208 - src.analysis.clustering - INFO - 聚类 0 最终值数组长度: 5, 角度数组长度: 5
2025-04-16 20:18:44,209 - src.analysis.clustering - INFO - 成功绘制聚类 0 的雷达图
2025-04-16 20:18:44,209 - src.analysis.clustering - INFO - 聚类 1 最终值数组长度: 5, 角度数组长度: 5
2025-04-16 20:18:44,210 - src.analysis.clustering - INFO - 成功绘制聚类 1 的雷达图
2025-04-16 20:18:44,210 - src.analysis.clustering - INFO - 聚类 2 最终值数组长度: 5, 角度数组长度: 5
2025-04-16 20:18:44,211 - src.analysis.clustering - INFO - 成功绘制聚类 2 的雷达图
2025-04-16 20:18:44,212 - src.analysis.clustering - INFO - 成功绘制了 3 个聚类的雷达图
2025-04-16 20:18:44,501 - __main__ - INFO - 图表已保存到 results\clustering_centroids_3clusters.png
2025-04-16 20:18:44,512 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 20:18:44,513 - __main__ - INFO - 聚类分析完成
2025-04-16 20:18:44,513 - __main__ - INFO - 程序执行完毕
2025-04-16 20:18:52,339 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 20:18:52,339 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 20:18:52,340 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 20:18:52,340 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 20:18:52,341 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 20:18:52,658 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 20:18:52,659 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 20:18:52,660 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 20:19:01,464 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 20:19:01,465 - __main__ - INFO - 初始化CSV存储
2025-04-16 20:19:01,466 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 20:19:01,468 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 20:19:02,472 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 20:19:02,472 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 20:19:02,473 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1', '2', '600000', '601288', '651']
2025-04-16 20:19:02,473 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 20:19:02,483 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 20:19:02,490 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 20:19:02,498 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 20:19:02,498 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 20:19:02,504 - __main__ - INFO - 加载股票 2 的数据...
2025-04-16 20:19:02,504 - __main__ - INFO - 股票代码标准化: 2 -> 000002 (假设为深市股票)
2025-04-16 20:19:02,510 - __main__ - INFO - 加载股票 600000 的数据...
2025-04-16 20:19:02,516 - __main__ - INFO - 加载股票 601288 的数据...
2025-04-16 20:19:02,522 - __main__ - INFO - 加载股票 651 的数据...
2025-04-16 20:19:02,523 - __main__ - INFO - 股票代码标准化: 651 -> 000651 (上市股票)
2025-04-16 20:19:02,528 - __main__ - INFO - 股票 600519 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:19:02,529 - __main__ - INFO - 股票 601398 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:19:02,530 - __main__ - INFO - 股票 600036 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:19:02,530 - __main__ - INFO - 股票 1 数据列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:19:02,531 - __main__ - INFO - 股票 2 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:19:02,531 - __main__ - INFO - 股票 600000 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:19:02,531 - __main__ - INFO - 股票 601288 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:19:02,532 - __main__ - INFO - 股票 651 数据列: ['change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'volume']
2025-04-16 20:19:02,532 - __main__ - INFO - 所有数据集共有的列: ['change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'volume']
2025-04-16 20:19:02,538 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:19:02,538 - __main__ - INFO - 合并后的数据大小: 316 行 x 26 列
2025-04-16 20:19:02,539 - __main__ - INFO - 最终数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:19:02,539 - __main__ - INFO - 寻找最佳聚类数（最大尝试8个簇）...
2025-04-16 20:19:02,545 - src.analysis.clustering - INFO - 计算1到8个聚类的inertia值...
2025-04-16 20:19:02,628 - src.analysis.clustering - INFO - 聚类数 1: inertia = 1896.00
2025-04-16 20:19:02,642 - src.analysis.clustering - INFO - 聚类数 2: inertia = 610.97
2025-04-16 20:19:02,661 - src.analysis.clustering - INFO - 聚类数 3: inertia = 391.97
2025-04-16 20:19:02,681 - src.analysis.clustering - INFO - 聚类数 4: inertia = 259.89
2025-04-16 20:19:02,702 - src.analysis.clustering - INFO - 聚类数 5: inertia = 198.69
2025-04-16 20:19:02,726 - src.analysis.clustering - INFO - 聚类数 6: inertia = 160.70
2025-04-16 20:19:02,753 - src.analysis.clustering - INFO - 聚类数 7: inertia = 132.67
2025-04-16 20:19:02,780 - src.analysis.clustering - INFO - 聚类数 8: inertia = 106.52
2025-04-16 20:19:02,800 - src.analysis.clustering - INFO - 未找到明显的肘部点，使用简单方法确定最佳聚类数
2025-04-16 20:19:02,801 - src.analysis.clustering - INFO - 确定的最佳聚类数: 7
2025-04-16 20:19:02,801 - __main__ - INFO - 确定的最佳聚类数: 7
2025-04-16 20:19:02,801 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:19:03,007 - src.analysis.clustering - INFO - KMeans聚类完成，分为 7 个簇
2025-04-16 20:19:03,007 - src.analysis.clustering - INFO - 簇 0: 107 个样本 (33.86%)
2025-04-16 20:19:03,007 - src.analysis.clustering - INFO - 簇 1: 20 个样本 (6.33%)
2025-04-16 20:19:03,008 - src.analysis.clustering - INFO - 簇 2: 22 个样本 (6.96%)
2025-04-16 20:19:03,008 - src.analysis.clustering - INFO - 簇 3: 62 个样本 (19.62%)
2025-04-16 20:19:03,009 - src.analysis.clustering - INFO - 簇 4: 98 个样本 (31.01%)
2025-04-16 20:19:03,009 - src.analysis.clustering - INFO - 簇 5: 6 个样本 (1.90%)
2025-04-16 20:19:03,009 - src.analysis.clustering - INFO - 簇 6: 1 个样本 (0.32%)
2025-04-16 20:19:03,010 - __main__ - INFO - 聚类结果（7个簇）:
2025-04-16 20:19:03,010 - __main__ - INFO -   0: 107个样本 (33.86%)
2025-04-16 20:19:03,010 - __main__ - INFO -   1: 20个样本 (6.33%)
2025-04-16 20:19:03,011 - __main__ - INFO -   2: 22个样本 (6.96%)
2025-04-16 20:19:03,011 - __main__ - INFO -   3: 62个样本 (19.62%)
2025-04-16 20:19:03,011 - __main__ - INFO -   4: 98个样本 (31.01%)
2025-04-16 20:19:03,011 - __main__ - INFO -   5: 6个样本 (1.90%)
2025-04-16 20:19:03,011 - __main__ - INFO -   6: 1个样本 (0.32%)
2025-04-16 20:19:03,012 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 20:19:03,612 - __main__ - INFO - 图表已保存到 results\clustering_clusters_7clusters.png
2025-04-16 20:19:03,628 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 20:19:03,636 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 20:19:03,654 - src.analysis.clustering - INFO - 聚类数 1: inertia = 1896.00
2025-04-16 20:19:03,670 - src.analysis.clustering - INFO - 聚类数 2: inertia = 610.97
2025-04-16 20:19:03,691 - src.analysis.clustering - INFO - 聚类数 3: inertia = 391.97
2025-04-16 20:19:03,712 - src.analysis.clustering - INFO - 聚类数 4: inertia = 259.89
2025-04-16 20:19:03,735 - src.analysis.clustering - INFO - 聚类数 5: inertia = 198.69
2025-04-16 20:19:03,761 - src.analysis.clustering - INFO - 聚类数 6: inertia = 160.70
2025-04-16 20:19:03,787 - src.analysis.clustering - INFO - 聚类数 7: inertia = 132.67
2025-04-16 20:19:03,815 - src.analysis.clustering - INFO - 聚类数 8: inertia = 106.52
2025-04-16 20:19:03,845 - src.analysis.clustering - INFO - 聚类数 9: inertia = 91.58
2025-04-16 20:19:03,877 - src.analysis.clustering - INFO - 聚类数 10: inertia = 75.72
2025-04-16 20:19:03,877 - src.analysis.clustering - INFO - 确定的最佳聚类数: 8
2025-04-16 20:19:04,140 - __main__ - INFO - 图表已保存到 results\clustering_elbow_7clusters.png
2025-04-16 20:19:04,153 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 20:19:04,269 - src.analysis.clustering - WARNING - 特征 'open' 在聚类 6 中的方差为零或数据点不足，绘制条形图
2025-04-16 20:19:04,333 - src.analysis.clustering - WARNING - 特征 'close' 在聚类 6 中的方差为零或数据点不足，绘制条形图
2025-04-16 20:19:04,398 - src.analysis.clustering - WARNING - 特征 'high' 在聚类 6 中的方差为零或数据点不足，绘制条形图
2025-04-16 20:19:04,464 - src.analysis.clustering - WARNING - 特征 'low' 在聚类 6 中的方差为零或数据点不足，绘制条形图
2025-04-16 20:19:04,551 - src.analysis.clustering - WARNING - 特征 'volume' 在聚类 6 中的方差为零或数据点不足，绘制条形图
2025-04-16 20:19:04,611 - src.analysis.clustering - WARNING - 特征 'change_percent' 在聚类 6 中的方差为零或数据点不足，绘制条形图
2025-04-16 20:19:05,547 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_7clusters.png
2025-04-16 20:19:05,555 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 20:19:05,620 - src.analysis.clustering - INFO - 原始聚类中心数据类型: <class 'numpy.ndarray'>
2025-04-16 20:19:05,620 - src.analysis.clustering - INFO - 原始聚类中心数据形状: (7, 6)
2025-04-16 20:19:05,621 - src.analysis.clustering - INFO - 处理后的聚类中心数据形状: (7, 6)
2025-04-16 20:19:05,621 - src.analysis.clustering - INFO - 有效特征数量: 6, 特征名称: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:19:05,621 - src.analysis.clustering - INFO - 成功创建聚类中心特征筛选数据，形状: (7, 6)
2025-04-16 20:19:05,622 - src.analysis.clustering - INFO - 所有特征列已成功标准化
2025-04-16 20:19:05,622 - src.analysis.clustering - INFO - 标准化后的数据形状: (7, 6)
2025-04-16 20:19:05,623 - src.analysis.clustering - INFO - 创建角度数组，长度: 6
2025-04-16 20:19:05,623 - src.analysis.clustering - INFO - 闭合角度数组，最终长度: 7
2025-04-16 20:19:05,623 - src.analysis.clustering - INFO - 将绘制 7 个簇的雷达图
2025-04-16 20:19:05,623 - src.analysis.clustering - INFO - 聚类 0 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:19:05,624 - src.analysis.clustering - INFO - 成功绘制聚类 0 的雷达图
2025-04-16 20:19:05,625 - src.analysis.clustering - INFO - 聚类 1 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:19:05,626 - src.analysis.clustering - INFO - 成功绘制聚类 1 的雷达图
2025-04-16 20:19:05,626 - src.analysis.clustering - INFO - 聚类 2 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:19:05,628 - src.analysis.clustering - INFO - 成功绘制聚类 2 的雷达图
2025-04-16 20:19:05,628 - src.analysis.clustering - INFO - 聚类 3 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:19:05,629 - src.analysis.clustering - INFO - 成功绘制聚类 3 的雷达图
2025-04-16 20:19:05,630 - src.analysis.clustering - INFO - 聚类 4 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:19:05,631 - src.analysis.clustering - INFO - 成功绘制聚类 4 的雷达图
2025-04-16 20:19:05,632 - src.analysis.clustering - INFO - 聚类 5 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:19:05,632 - src.analysis.clustering - INFO - 成功绘制聚类 5 的雷达图
2025-04-16 20:19:05,633 - src.analysis.clustering - INFO - 聚类 6 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:19:05,634 - src.analysis.clustering - INFO - 成功绘制聚类 6 的雷达图
2025-04-16 20:19:05,634 - src.analysis.clustering - INFO - 成功绘制了 7 个聚类的雷达图
2025-04-16 20:19:05,980 - __main__ - INFO - 图表已保存到 results\clustering_centroids_7clusters.png
2025-04-16 20:19:05,994 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_7clusters.csv
2025-04-16 20:19:05,994 - __main__ - INFO - 聚类分析完成
2025-04-16 20:19:05,995 - __main__ - INFO - 程序执行完毕
2025-04-16 20:19:27,409 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 20:19:27,409 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 20:19:27,410 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 20:19:27,410 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 20:19:27,411 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 20:19:27,509 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 20:19:27,510 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 20:19:27,511 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 20:19:36,182 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 20:19:36,182 - __main__ - INFO - 初始化CSV存储
2025-04-16 20:19:36,183 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 20:19:36,184 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 20:19:37,200 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 20:19:37,201 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 20:19:37,201 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 20:19:37,201 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 20:19:37,211 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 20:19:37,218 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 20:19:37,226 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 20:19:37,226 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 20:19:37,230 - __main__ - INFO - 股票 600519 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:19:37,231 - __main__ - INFO - 股票 601398 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:19:37,232 - __main__ - INFO - 股票 600036 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:19:37,233 - __main__ - INFO - 股票 1 数据列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:19:37,233 - __main__ - INFO - 所有数据集共有的列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:19:37,238 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:19:37,238 - __main__ - INFO - 合并后的数据大小: 87 行 x 26 列
2025-04-16 20:19:37,239 - __main__ - INFO - 最终数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:19:37,239 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:19:37,484 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 20:19:37,485 - src.analysis.clustering - INFO - 簇 0: 44 个样本 (50.57%)
2025-04-16 20:19:37,485 - src.analysis.clustering - INFO - 簇 1: 21 个样本 (24.14%)
2025-04-16 20:19:37,485 - src.analysis.clustering - INFO - 簇 2: 22 个样本 (25.29%)
2025-04-16 20:19:37,486 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 20:19:37,486 - __main__ - INFO -   0: 44个样本 (50.57%)
2025-04-16 20:19:37,486 - __main__ - INFO -   1: 21个样本 (24.14%)
2025-04-16 20:19:37,487 - __main__ - INFO -   2: 22个样本 (25.29%)
2025-04-16 20:19:37,487 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 20:19:37,500 - src.analysis.clustering - INFO - PCA解释的方差比例: [0.79648179 0.16626515]
2025-04-16 20:19:37,500 - src.analysis.clustering - INFO - 前2个主成分解释的总方差比例: 96.27%
2025-04-16 20:19:38,037 - __main__ - INFO - 图表已保存到 results\clustering_clusters_3clusters.png
2025-04-16 20:19:38,053 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 20:19:38,058 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 20:19:38,072 - src.analysis.clustering - INFO - 聚类数 1: inertia = 522.00
2025-04-16 20:19:38,087 - src.analysis.clustering - INFO - 聚类数 2: inertia = 168.62
2025-04-16 20:19:38,101 - src.analysis.clustering - INFO - 聚类数 3: inertia = 91.10
2025-04-16 20:19:38,117 - src.analysis.clustering - INFO - 聚类数 4: inertia = 64.96
2025-04-16 20:19:38,136 - src.analysis.clustering - INFO - 聚类数 5: inertia = 40.25
2025-04-16 20:19:38,157 - src.analysis.clustering - INFO - 聚类数 6: inertia = 29.05
2025-04-16 20:19:38,178 - src.analysis.clustering - INFO - 聚类数 7: inertia = 20.90
2025-04-16 20:19:38,202 - src.analysis.clustering - INFO - 聚类数 8: inertia = 16.14
2025-04-16 20:19:38,225 - src.analysis.clustering - INFO - 聚类数 9: inertia = 12.81
2025-04-16 20:19:38,251 - src.analysis.clustering - INFO - 聚类数 10: inertia = 9.63
2025-04-16 20:19:38,271 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 20:19:38,535 - __main__ - INFO - 图表已保存到 results\clustering_elbow_3clusters.png
2025-04-16 20:19:38,546 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 20:19:39,730 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_3clusters.png
2025-04-16 20:19:39,738 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 20:19:39,803 - src.analysis.clustering - INFO - 原始聚类中心数据类型: <class 'numpy.ndarray'>
2025-04-16 20:19:39,804 - src.analysis.clustering - INFO - 原始聚类中心数据形状: (3, 6)
2025-04-16 20:19:39,804 - src.analysis.clustering - INFO - 处理后的聚类中心数据形状: (3, 6)
2025-04-16 20:19:39,804 - src.analysis.clustering - INFO - 有效特征数量: 6, 特征名称: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:19:39,805 - src.analysis.clustering - INFO - 成功创建聚类中心特征筛选数据，形状: (3, 6)
2025-04-16 20:19:39,805 - src.analysis.clustering - INFO - 所有特征列已成功标准化
2025-04-16 20:19:39,806 - src.analysis.clustering - INFO - 标准化后的数据形状: (3, 6)
2025-04-16 20:19:39,806 - src.analysis.clustering - INFO - 创建角度数组，长度: 6
2025-04-16 20:19:39,806 - src.analysis.clustering - INFO - 闭合角度数组，最终长度: 7
2025-04-16 20:19:39,806 - src.analysis.clustering - INFO - 将绘制 3 个簇的雷达图
2025-04-16 20:19:39,806 - src.analysis.clustering - INFO - 聚类 0 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:19:39,807 - src.analysis.clustering - INFO - 成功绘制聚类 0 的雷达图
2025-04-16 20:19:39,807 - src.analysis.clustering - INFO - 聚类 1 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:19:39,808 - src.analysis.clustering - INFO - 成功绘制聚类 1 的雷达图
2025-04-16 20:19:39,809 - src.analysis.clustering - INFO - 聚类 2 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:19:39,810 - src.analysis.clustering - INFO - 成功绘制聚类 2 的雷达图
2025-04-16 20:19:39,810 - src.analysis.clustering - INFO - 成功绘制了 3 个聚类的雷达图
2025-04-16 20:19:40,086 - __main__ - INFO - 图表已保存到 results\clustering_centroids_3clusters.png
2025-04-16 20:19:40,100 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 20:19:40,100 - __main__ - INFO - 聚类分析完成
2025-04-16 20:19:40,101 - __main__ - INFO - 程序执行完毕
2025-04-16 20:20:02,753 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 20:20:02,754 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 20:20:02,754 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 20:20:02,755 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 20:20:02,755 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 20:20:02,874 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 20:20:02,875 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 20:20:02,875 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 20:20:13,201 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 20:20:13,201 - __main__ - INFO - 初始化CSV存储
2025-04-16 20:20:13,201 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 20:20:13,202 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 20:20:14,143 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 20:20:14,144 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 20:20:14,144 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 20:20:14,145 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 20:20:14,154 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 20:20:14,160 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 20:20:14,168 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 20:20:14,168 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 20:20:14,173 - __main__ - INFO - 股票 600519 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:20:14,174 - __main__ - INFO - 股票 601398 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:20:14,174 - __main__ - INFO - 股票 600036 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:20:14,175 - __main__ - INFO - 股票 1 数据列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:20:14,175 - __main__ - INFO - 所有数据集共有的列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:20:14,178 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:20:14,179 - __main__ - INFO - 合并后的数据大小: 87 行 x 26 列
2025-04-16 20:20:14,179 - __main__ - INFO - 最终数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:20:14,179 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:20:14,425 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 20:20:14,425 - src.analysis.clustering - INFO - 簇 0: 44 个样本 (50.57%)
2025-04-16 20:20:14,425 - src.analysis.clustering - INFO - 簇 1: 21 个样本 (24.14%)
2025-04-16 20:20:14,426 - src.analysis.clustering - INFO - 簇 2: 22 个样本 (25.29%)
2025-04-16 20:20:14,426 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 20:20:14,426 - __main__ - INFO -   0: 44个样本 (50.57%)
2025-04-16 20:20:14,426 - __main__ - INFO -   1: 21个样本 (24.14%)
2025-04-16 20:20:14,427 - __main__ - INFO -   2: 22个样本 (25.29%)
2025-04-16 20:20:14,427 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 20:20:14,997 - __main__ - INFO - 图表已保存到 results\clustering_clusters_3clusters.png
2025-04-16 20:20:15,008 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 20:20:15,014 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 20:20:15,029 - src.analysis.clustering - INFO - 聚类数 1: inertia = 522.00
2025-04-16 20:20:15,045 - src.analysis.clustering - INFO - 聚类数 2: inertia = 168.62
2025-04-16 20:20:15,063 - src.analysis.clustering - INFO - 聚类数 3: inertia = 91.10
2025-04-16 20:20:15,083 - src.analysis.clustering - INFO - 聚类数 4: inertia = 64.96
2025-04-16 20:20:15,104 - src.analysis.clustering - INFO - 聚类数 5: inertia = 40.25
2025-04-16 20:20:15,126 - src.analysis.clustering - INFO - 聚类数 6: inertia = 29.05
2025-04-16 20:20:15,148 - src.analysis.clustering - INFO - 聚类数 7: inertia = 20.90
2025-04-16 20:20:15,172 - src.analysis.clustering - INFO - 聚类数 8: inertia = 16.14
2025-04-16 20:20:15,195 - src.analysis.clustering - INFO - 聚类数 9: inertia = 12.81
2025-04-16 20:20:15,220 - src.analysis.clustering - INFO - 聚类数 10: inertia = 9.63
2025-04-16 20:20:15,239 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 20:20:15,512 - __main__ - INFO - 图表已保存到 results\clustering_elbow_3clusters.png
2025-04-16 20:20:15,520 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 20:20:16,797 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_3clusters.png
2025-04-16 20:20:16,803 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 20:20:16,868 - src.analysis.clustering - INFO - 原始聚类中心数据类型: <class 'numpy.ndarray'>
2025-04-16 20:20:16,869 - src.analysis.clustering - INFO - 原始聚类中心数据形状: (3, 6)
2025-04-16 20:20:16,869 - src.analysis.clustering - INFO - 处理后的聚类中心数据形状: (3, 6)
2025-04-16 20:20:16,869 - src.analysis.clustering - INFO - 有效特征数量: 6, 特征名称: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:20:16,870 - src.analysis.clustering - INFO - 成功创建聚类中心特征筛选数据，形状: (3, 6)
2025-04-16 20:20:16,871 - src.analysis.clustering - INFO - 所有特征列已成功标准化
2025-04-16 20:20:16,871 - src.analysis.clustering - INFO - 标准化后的数据形状: (3, 6)
2025-04-16 20:20:16,871 - src.analysis.clustering - INFO - 创建角度数组，长度: 6
2025-04-16 20:20:16,871 - src.analysis.clustering - INFO - 闭合角度数组，最终长度: 7
2025-04-16 20:20:16,872 - src.analysis.clustering - INFO - 将绘制 3 个簇的雷达图
2025-04-16 20:20:16,872 - src.analysis.clustering - INFO - 聚类 0 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:20:16,873 - src.analysis.clustering - INFO - 成功绘制聚类 0 的雷达图
2025-04-16 20:20:16,873 - src.analysis.clustering - INFO - 聚类 1 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:20:16,874 - src.analysis.clustering - INFO - 成功绘制聚类 1 的雷达图
2025-04-16 20:20:16,874 - src.analysis.clustering - INFO - 聚类 2 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:20:16,875 - src.analysis.clustering - INFO - 成功绘制聚类 2 的雷达图
2025-04-16 20:20:16,876 - src.analysis.clustering - INFO - 成功绘制了 3 个聚类的雷达图
2025-04-16 20:20:17,173 - __main__ - INFO - 图表已保存到 results\clustering_centroids_3clusters.png
2025-04-16 20:20:17,185 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 20:20:17,185 - __main__ - INFO - 聚类分析完成
2025-04-16 20:20:17,186 - __main__ - INFO - 程序执行完毕
2025-04-16 20:55:00,016 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 20:55:00,016 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 20:55:00,017 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 20:55:00,017 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 20:55:00,017 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 20:55:00,203 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 20:55:00,204 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 20:55:00,204 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 20:55:11,221 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 20:55:11,222 - __main__ - INFO - 初始化CSV存储
2025-04-16 20:55:11,222 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 20:55:11,224 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 20:55:17,281 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 20:55:17,281 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 20:55:17,281 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 20:55:17,282 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 20:55:17,301 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 20:55:17,316 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 20:55:17,330 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 20:55:17,330 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 20:55:17,342 - __main__ - INFO - 股票 600519 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:55:17,343 - __main__ - INFO - 股票 601398 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:55:17,344 - __main__ - INFO - 股票 600036 数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:55:17,344 - __main__ - INFO - 股票 1 数据列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:55:17,345 - __main__ - INFO - 所有数据集共有的列: ['change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '股票代码']
2025-04-16 20:55:17,348 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:55:17,348 - __main__ - INFO - 合并后的数据大小: 87 行 x 26 列
2025-04-16 20:55:17,349 - __main__ - INFO - 最终数据列: ['amount', 'amplitude', 'change', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'source', 'stock_id', 'symbol', 'turnover_rate', 'volume', '开盘', '成交量', '成交额', '振幅', '换手率', '收盘', '日期', '最低', '最高', '涨跌幅', '涨跌额', '股票代码']
2025-04-16 20:55:17,349 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:55:17,813 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 20:55:17,813 - src.analysis.clustering - INFO - 簇 0: 44 个样本 (50.57%)
2025-04-16 20:55:17,814 - src.analysis.clustering - INFO - 簇 1: 21 个样本 (24.14%)
2025-04-16 20:55:17,814 - src.analysis.clustering - INFO - 簇 2: 22 个样本 (25.29%)
2025-04-16 20:55:17,815 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 20:55:17,815 - __main__ - INFO -   0: 44个样本 (50.57%)
2025-04-16 20:55:17,816 - __main__ - INFO -   1: 21个样本 (24.14%)
2025-04-16 20:55:17,816 - __main__ - INFO -   2: 22个样本 (25.29%)
2025-04-16 20:55:17,817 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 20:55:18,863 - __main__ - INFO - 图表已保存到 results\clustering_clusters_3clusters.png
2025-04-16 20:55:18,875 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 20:55:18,882 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 20:55:18,902 - src.analysis.clustering - INFO - 聚类数 1: inertia = 522.00
2025-04-16 20:55:18,920 - src.analysis.clustering - INFO - 聚类数 2: inertia = 168.62
2025-04-16 20:55:18,942 - src.analysis.clustering - INFO - 聚类数 3: inertia = 91.10
2025-04-16 20:55:18,963 - src.analysis.clustering - INFO - 聚类数 4: inertia = 64.96
2025-04-16 20:55:18,985 - src.analysis.clustering - INFO - 聚类数 5: inertia = 40.25
2025-04-16 20:55:19,006 - src.analysis.clustering - INFO - 聚类数 6: inertia = 29.05
2025-04-16 20:55:19,028 - src.analysis.clustering - INFO - 聚类数 7: inertia = 20.90
2025-04-16 20:55:19,052 - src.analysis.clustering - INFO - 聚类数 8: inertia = 16.14
2025-04-16 20:55:19,076 - src.analysis.clustering - INFO - 聚类数 9: inertia = 12.81
2025-04-16 20:55:19,101 - src.analysis.clustering - INFO - 聚类数 10: inertia = 9.63
2025-04-16 20:55:19,298 - src.analysis.clustering - INFO - 确定的最佳聚类数: 5
2025-04-16 20:55:19,558 - __main__ - INFO - 图表已保存到 results\clustering_elbow_3clusters.png
2025-04-16 20:55:19,568 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 20:55:20,823 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_3clusters.png
2025-04-16 20:55:20,833 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 20:55:20,900 - src.analysis.clustering - INFO - 原始聚类中心数据类型: <class 'numpy.ndarray'>
2025-04-16 20:55:20,901 - src.analysis.clustering - INFO - 原始聚类中心数据形状: (3, 6)
2025-04-16 20:55:20,901 - src.analysis.clustering - INFO - 处理后的聚类中心数据形状: (3, 6)
2025-04-16 20:55:20,901 - src.analysis.clustering - INFO - 有效特征数量: 6, 特征名称: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 20:55:20,902 - src.analysis.clustering - INFO - 成功创建聚类中心特征筛选数据，形状: (3, 6)
2025-04-16 20:55:20,903 - src.analysis.clustering - INFO - 所有特征列已成功标准化
2025-04-16 20:55:20,903 - src.analysis.clustering - INFO - 标准化后的数据形状: (3, 6)
2025-04-16 20:55:20,903 - src.analysis.clustering - INFO - 创建角度数组，长度: 6
2025-04-16 20:55:20,904 - src.analysis.clustering - INFO - 闭合角度数组，最终长度: 7
2025-04-16 20:55:20,904 - src.analysis.clustering - INFO - 将绘制 3 个簇的雷达图
2025-04-16 20:55:20,904 - src.analysis.clustering - INFO - 聚类 0 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:55:20,905 - src.analysis.clustering - INFO - 成功绘制聚类 0 的雷达图
2025-04-16 20:55:20,905 - src.analysis.clustering - INFO - 聚类 1 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:55:20,906 - src.analysis.clustering - INFO - 成功绘制聚类 1 的雷达图
2025-04-16 20:55:20,906 - src.analysis.clustering - INFO - 聚类 2 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 20:55:20,908 - src.analysis.clustering - INFO - 成功绘制聚类 2 的雷达图
2025-04-16 20:55:20,908 - src.analysis.clustering - INFO - 成功绘制了 3 个聚类的雷达图
2025-04-16 20:55:21,189 - __main__ - INFO - 图表已保存到 results\clustering_centroids_3clusters.png
2025-04-16 20:55:21,202 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 20:55:21,202 - __main__ - INFO - 聚类分析完成
2025-04-16 20:55:21,203 - __main__ - INFO - 程序执行完毕
2025-04-16 21:03:37,423 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:03:37,423 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:03:37,423 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:03:37,424 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:03:37,424 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:03:37,589 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:03:37,589 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:03:37,589 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:04:42,971 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:04:42,972 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:04:42,972 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:04:42,972 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:04:42,973 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:04:43,048 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:04:43,048 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:04:43,049 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:05:00,429 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:05:00,430 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:05:00,430 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:05:00,430 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:05:00,431 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:05:00,500 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:05:00,500 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:05:00,501 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:06:12,660 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:06:12,660 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:06:12,661 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:06:12,661 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:06:12,662 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:06:12,735 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:06:12,736 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:06:12,736 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:06:21,994 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:06:22,080 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:06:22,080 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:06:22,081 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:06:22,095 - __main__ - ERROR - 初始化SQLite存储失败: table "indices" has more than one primary key
2025-04-16 21:06:22,098 - __main__ - INFO - 初始化CSV存储
2025-04-16 21:06:22,098 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 21:06:22,098 - __main__ - ERROR - 初始化CSV存储失败: 'str' object has no attribute 'get'
2025-04-16 21:06:22,098 - __main__ - WARNING - 指定的存储类型 sqlite 初始化失败，使用 CSV 存储作为备选
2025-04-16 21:06:22,099 - __main__ - ERROR - 没有可用的存储方式，程序退出
2025-04-16 21:13:29,345 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:13:29,345 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:13:29,346 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:13:29,346 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:13:29,347 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:13:29,634 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:13:29,635 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:13:29,636 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:13:39,496 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:13:39,512 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:13:39,512 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:13:39,513 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:13:39,526 - __main__ - INFO - 初始化CSV存储
2025-04-16 21:13:39,526 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 21:13:39,527 - __main__ - ERROR - 初始化CSV存储失败: 'str' object has no attribute 'get'
2025-04-16 21:13:39,532 - __main__ - ERROR - 程序执行过程中发生错误: 'csv'
Traceback (most recent call last):
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 1165, in <module>
    main()
    ~~~~^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 605, in main
    run_clustering_analysis(data_sources['akshare'], storage['csv'], args)
                                                     ~~~~~~~^^^^^^^
KeyError: 'csv'
2025-04-16 21:17:01,762 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:17:01,763 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:17:01,763 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:17:01,763 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:17:01,764 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:17:01,920 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:17:01,920 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:17:01,921 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:17:10,048 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:17:10,069 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:17:10,070 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:17:10,071 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:17:10,105 - __main__ - INFO - 初始化CSV存储
2025-04-16 21:17:10,105 - src.storage.base - INFO - 初始化存储方式: csv
2025-04-16 21:17:10,106 - src.storage.csv_storage - INFO - CSV存储初始化完成，数据将保存在 C:\Users\laisn\Desktop\Beeshare\data/stock_data
2025-04-16 21:17:11,217 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 21:17:11,217 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 21:17:11,218 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 21:17:11,218 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 21:17:11,218 - src.storage.csv_storage - INFO - 加载最新文件: C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical\600519_20250416.csv
2025-04-16 21:17:11,233 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 21:17:11,233 - src.storage.csv_storage - INFO - 加载最新文件: C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical\601398_20250416.csv
2025-04-16 21:17:11,246 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 21:17:11,246 - src.storage.csv_storage - WARNING - 未找到匹配模式 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical\600036_*.csv 的文件
2025-04-16 21:17:11,247 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:17:11,247 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:17:11,248 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600036 的历史数据
2025-04-16 21:17:11,249 - src.data_sources.akshare - INFO - 已生成 91 条 600036 的模拟历史数据
2025-04-16 21:17:11,252 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/600036_20250416.csv，行数: 91
2025-04-16 21:17:11,255 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 21:17:11,255 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 21:17:11,256 - src.storage.csv_storage - WARNING - 未找到匹配模式 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical\000001_*.csv 的文件
2025-04-16 21:17:11,256 - __main__ - INFO - 强制以股票代码模式获取 000001
2025-04-16 21:17:11,257 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 21:17:11,257 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:17:11,257 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 000001 的历史数据
2025-04-16 21:17:11,258 - src.data_sources.akshare - INFO - 已生成 91 条 000001 的模拟历史数据
2025-04-16 21:17:11,262 - src.storage.csv_storage - INFO - 已将数据保存到 C:\Users\laisn\Desktop\Beeshare\data/stock_data\historical/000001_20250416.csv，行数: 91
2025-04-16 21:17:11,264 - __main__ - INFO - 股票 600519 数据列: ['change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'volume']
2025-04-16 21:17:11,265 - __main__ - INFO - 股票 601398 数据列: ['change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'volume']
2025-04-16 21:17:11,265 - __main__ - INFO - 股票 600036 数据列: ['change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'volume']
2025-04-16 21:17:11,265 - __main__ - INFO - 股票 1 数据列: ['change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'volume']
2025-04-16 21:17:11,266 - __main__ - INFO - 所有数据集共有的列: ['change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'volume']
2025-04-16 21:17:11,268 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 21:17:11,268 - __main__ - INFO - 合并后的数据大小: 364 行 x 9 列
2025-04-16 21:17:11,269 - __main__ - INFO - 最终数据列: ['change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'volume']
2025-04-16 21:17:11,269 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 21:17:11,541 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 21:17:11,542 - src.analysis.clustering - INFO - 簇 0: 91 个样本 (25.00%)
2025-04-16 21:17:11,542 - src.analysis.clustering - INFO - 簇 1: 156 个样本 (42.86%)
2025-04-16 21:17:11,542 - src.analysis.clustering - INFO - 簇 2: 117 个样本 (32.14%)
2025-04-16 21:17:11,542 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 21:17:11,543 - __main__ - INFO -   0: 91个样本 (25.00%)
2025-04-16 21:17:11,543 - __main__ - INFO -   1: 156个样本 (42.86%)
2025-04-16 21:17:11,543 - __main__ - INFO -   2: 117个样本 (32.14%)
2025-04-16 21:17:11,543 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 21:17:12,159 - __main__ - INFO - 图表已保存到 results\clustering_clusters_3clusters.png
2025-04-16 21:17:12,172 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 21:17:12,177 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 21:17:12,197 - src.analysis.clustering - INFO - 聚类数 1: inertia = 2184.00
2025-04-16 21:17:12,218 - src.analysis.clustering - INFO - 聚类数 2: inertia = 861.36
2025-04-16 21:17:12,251 - src.analysis.clustering - INFO - 聚类数 3: inertia = 640.40
2025-04-16 21:17:12,277 - src.analysis.clustering - INFO - 聚类数 4: inertia = 508.46
2025-04-16 21:17:12,304 - src.analysis.clustering - INFO - 聚类数 5: inertia = 425.91
2025-04-16 21:17:12,334 - src.analysis.clustering - INFO - 聚类数 6: inertia = 362.56
2025-04-16 21:17:12,366 - src.analysis.clustering - INFO - 聚类数 7: inertia = 325.56
2025-04-16 21:17:12,397 - src.analysis.clustering - INFO - 聚类数 8: inertia = 288.65
2025-04-16 21:17:12,430 - src.analysis.clustering - INFO - 聚类数 9: inertia = 257.17
2025-04-16 21:17:12,465 - src.analysis.clustering - INFO - 聚类数 10: inertia = 234.05
2025-04-16 21:17:12,483 - src.analysis.clustering - INFO - 确定的最佳聚类数: 6
2025-04-16 21:17:12,753 - __main__ - INFO - 图表已保存到 results\clustering_elbow_3clusters.png
2025-04-16 21:17:12,763 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 21:17:14,048 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_3clusters.png
2025-04-16 21:17:14,054 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 21:17:14,117 - src.analysis.clustering - INFO - 原始聚类中心数据类型: <class 'numpy.ndarray'>
2025-04-16 21:17:14,118 - src.analysis.clustering - INFO - 原始聚类中心数据形状: (3, 6)
2025-04-16 21:17:14,118 - src.analysis.clustering - INFO - 处理后的聚类中心数据形状: (3, 6)
2025-04-16 21:17:14,118 - src.analysis.clustering - INFO - 有效特征数量: 6, 特征名称: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 21:17:14,119 - src.analysis.clustering - INFO - 成功创建聚类中心特征筛选数据，形状: (3, 6)
2025-04-16 21:17:14,119 - src.analysis.clustering - INFO - 所有特征列已成功标准化
2025-04-16 21:17:14,120 - src.analysis.clustering - INFO - 标准化后的数据形状: (3, 6)
2025-04-16 21:17:14,120 - src.analysis.clustering - INFO - 创建角度数组，长度: 6
2025-04-16 21:17:14,120 - src.analysis.clustering - INFO - 闭合角度数组，最终长度: 7
2025-04-16 21:17:14,120 - src.analysis.clustering - INFO - 将绘制 3 个簇的雷达图
2025-04-16 21:17:14,120 - src.analysis.clustering - INFO - 聚类 0 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 21:17:14,121 - src.analysis.clustering - INFO - 成功绘制聚类 0 的雷达图
2025-04-16 21:17:14,121 - src.analysis.clustering - INFO - 聚类 1 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 21:17:14,122 - src.analysis.clustering - INFO - 成功绘制聚类 1 的雷达图
2025-04-16 21:17:14,122 - src.analysis.clustering - INFO - 聚类 2 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 21:17:14,123 - src.analysis.clustering - INFO - 成功绘制聚类 2 的雷达图
2025-04-16 21:17:14,124 - src.analysis.clustering - INFO - 成功绘制了 3 个聚类的雷达图
2025-04-16 21:17:14,404 - __main__ - INFO - 图表已保存到 results\clustering_centroids_3clusters.png
2025-04-16 21:17:14,417 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 21:17:14,417 - __main__ - INFO - 聚类分析完成
2025-04-16 21:17:14,418 - __main__ - INFO - 程序执行完毕
2025-04-16 21:38:54,061 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:38:54,061 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:38:54,061 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:38:54,062 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:38:54,062 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:38:54,786 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:38:54,786 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:38:54,786 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:39:06,354 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:39:06,380 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:39:06,380 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:39:06,381 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:39:06,388 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:39:06,389 - __main__ - INFO - 当前存储类型: sqlite
2025-04-16 21:39:06,389 - __main__ - INFO - CSV存储配置: {}
2025-04-16 21:39:06,389 - __main__ - INFO - SQLite存储配置: {'db_path': 'data/stock_data.db'}
2025-04-16 21:39:06,390 - __main__ - INFO - 程序执行完毕
2025-04-16 21:39:30,167 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:39:30,167 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:39:30,167 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:39:30,168 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:39:30,168 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:39:30,464 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:39:30,465 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:39:30,466 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:39:38,861 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:39:38,887 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:39:38,888 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:39:38,889 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:39:39,964 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 21:39:39,964 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 21:39:39,964 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 21:39:39,964 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 21:39:39,965 - __main__ - ERROR - 获取股票 600519 数据时出错: 'str' object has no attribute 'value'
2025-04-16 21:39:39,965 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 21:39:39,965 - __main__ - ERROR - 获取股票 601398 数据时出错: 'str' object has no attribute 'value'
2025-04-16 21:39:39,965 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 21:39:39,966 - __main__ - ERROR - 获取股票 600036 数据时出错: 'str' object has no attribute 'value'
2025-04-16 21:39:39,966 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 21:39:39,966 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 21:39:39,966 - __main__ - ERROR - 获取股票 000001 数据时出错: 'str' object has no attribute 'value'
2025-04-16 21:39:39,966 - __main__ - ERROR - 没有有效的股票数据进行聚类分析
2025-04-16 21:39:39,966 - __main__ - INFO - 程序执行完毕
2025-04-16 21:44:52,405 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:44:52,405 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:44:52,405 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:44:52,406 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:44:52,406 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:44:52,770 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:44:52,770 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:44:52,770 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:45:04,830 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:45:04,832 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:45:04,832 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:45:04,832 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:45:05,943 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 21:45:05,943 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 21:45:05,944 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 21:45:05,944 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 21:45:05,944 - src.storage.sqlite_storage - WARNING - 表 historical_600519 不存在
2025-04-16 21:45:05,946 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 21:45:05,946 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:45:05,946 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600519 的历史数据
2025-04-16 21:45:05,947 - src.data_sources.akshare - INFO - 已生成 91 条 600519 的模拟历史数据
2025-04-16 21:45:05,948 - __main__ - ERROR - 获取股票 600519 数据时出错: SQLiteStorage.save_data() got an unexpected keyword argument 'mode'
2025-04-16 21:45:05,948 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 21:45:05,948 - src.storage.sqlite_storage - WARNING - 表 historical_601398 不存在
2025-04-16 21:45:05,949 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 21:45:05,949 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:45:05,949 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 601398 的历史数据
2025-04-16 21:45:05,950 - src.data_sources.akshare - INFO - 已生成 91 条 601398 的模拟历史数据
2025-04-16 21:45:05,951 - __main__ - ERROR - 获取股票 601398 数据时出错: SQLiteStorage.save_data() got an unexpected keyword argument 'mode'
2025-04-16 21:45:05,951 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 21:45:05,951 - src.storage.sqlite_storage - WARNING - 表 historical_600036 不存在
2025-04-16 21:45:05,952 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:45:05,952 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:45:05,952 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600036 的历史数据
2025-04-16 21:45:05,953 - src.data_sources.akshare - INFO - 已生成 91 条 600036 的模拟历史数据
2025-04-16 21:45:05,953 - __main__ - ERROR - 获取股票 600036 数据时出错: SQLiteStorage.save_data() got an unexpected keyword argument 'mode'
2025-04-16 21:45:05,954 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 21:45:05,954 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 21:45:05,954 - src.storage.sqlite_storage - WARNING - 表 historical_000001 不存在
2025-04-16 21:45:05,955 - __main__ - INFO - 强制以股票代码模式获取 000001
2025-04-16 21:45:05,955 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 21:45:05,955 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:45:05,955 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 000001 的历史数据
2025-04-16 21:45:05,956 - src.data_sources.akshare - INFO - 已生成 91 条 000001 的模拟历史数据
2025-04-16 21:45:05,957 - __main__ - ERROR - 获取股票 000001 数据时出错: SQLiteStorage.save_data() got an unexpected keyword argument 'mode'
2025-04-16 21:45:05,957 - __main__ - ERROR - 没有有效的股票数据进行聚类分析
2025-04-16 21:45:05,957 - __main__ - INFO - 程序执行完毕
2025-04-16 21:45:48,697 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:45:48,698 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:45:48,698 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:45:48,699 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:45:48,699 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:45:48,816 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:45:48,817 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:45:48,818 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:45:59,195 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:45:59,202 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:45:59,203 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:45:59,204 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:46:00,273 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 21:46:00,274 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 21:46:00,274 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 21:46:00,274 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 21:46:00,275 - src.storage.sqlite_storage - WARNING - 表 historical_600519 不存在
2025-04-16 21:46:00,276 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 21:46:00,276 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:46:00,276 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600519 的历史数据
2025-04-16 21:46:00,277 - src.data_sources.akshare - INFO - 已生成 91 条 600519 的模拟历史数据
2025-04-16 21:46:00,277 - __main__ - ERROR - 获取股票 600519 数据时出错: SQLiteStorage.save_data() got an unexpected keyword argument 'mode'
2025-04-16 21:46:00,278 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 21:46:00,278 - src.storage.sqlite_storage - WARNING - 表 historical_601398 不存在
2025-04-16 21:46:00,278 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 21:46:00,278 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:46:00,278 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 601398 的历史数据
2025-04-16 21:46:00,280 - src.data_sources.akshare - INFO - 已生成 91 条 601398 的模拟历史数据
2025-04-16 21:46:00,280 - __main__ - ERROR - 获取股票 601398 数据时出错: SQLiteStorage.save_data() got an unexpected keyword argument 'mode'
2025-04-16 21:46:00,280 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 21:46:00,281 - src.storage.sqlite_storage - WARNING - 表 historical_600036 不存在
2025-04-16 21:46:00,281 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:46:00,281 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:46:00,281 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600036 的历史数据
2025-04-16 21:46:00,282 - src.data_sources.akshare - INFO - 已生成 91 条 600036 的模拟历史数据
2025-04-16 21:46:00,282 - __main__ - ERROR - 获取股票 600036 数据时出错: SQLiteStorage.save_data() got an unexpected keyword argument 'mode'
2025-04-16 21:46:00,283 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 21:46:00,283 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 21:46:00,283 - src.storage.sqlite_storage - WARNING - 表 historical_000001 不存在
2025-04-16 21:46:00,283 - __main__ - INFO - 强制以股票代码模式获取 000001
2025-04-16 21:46:00,284 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 21:46:00,284 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:46:00,284 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 000001 的历史数据
2025-04-16 21:46:00,285 - src.data_sources.akshare - INFO - 已生成 91 条 000001 的模拟历史数据
2025-04-16 21:46:00,285 - __main__ - ERROR - 获取股票 000001 数据时出错: SQLiteStorage.save_data() got an unexpected keyword argument 'mode'
2025-04-16 21:46:00,286 - __main__ - ERROR - 没有有效的股票数据进行聚类分析
2025-04-16 21:46:00,286 - __main__ - INFO - 程序执行完毕
2025-04-16 21:48:31,603 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:48:31,604 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:48:31,604 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:48:31,604 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:48:31,605 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:48:32,551 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:48:32,551 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:48:32,551 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:48:43,229 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:48:43,231 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:48:43,231 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:48:43,231 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:48:44,347 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 21:48:44,348 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 21:48:44,348 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 21:48:44,348 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 21:48:44,348 - src.storage.sqlite_storage - WARNING - 表 historical_600519 不存在
2025-04-16 21:48:44,350 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 21:48:44,350 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:48:44,350 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600519 的历史数据
2025-04-16 21:48:44,351 - src.data_sources.akshare - INFO - 已生成 91 条 600519 的模拟历史数据
2025-04-16 21:48:44,357 - src.storage.sqlite_storage - INFO - 成功保存 91 条 600519 的 historical 数据
2025-04-16 21:48:44,360 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 21:48:44,360 - src.storage.sqlite_storage - WARNING - 表 historical_601398 不存在
2025-04-16 21:48:44,361 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 21:48:44,361 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:48:44,361 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 601398 的历史数据
2025-04-16 21:48:44,363 - src.data_sources.akshare - INFO - 已生成 91 条 601398 的模拟历史数据
2025-04-16 21:48:44,368 - src.storage.sqlite_storage - INFO - 成功保存 91 条 601398 的 historical 数据
2025-04-16 21:48:44,371 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 21:48:44,372 - src.storage.sqlite_storage - WARNING - 表 historical_600036 不存在
2025-04-16 21:48:44,372 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:48:44,372 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:48:44,373 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600036 的历史数据
2025-04-16 21:48:44,374 - src.data_sources.akshare - INFO - 已生成 91 条 600036 的模拟历史数据
2025-04-16 21:48:44,380 - src.storage.sqlite_storage - INFO - 成功保存 91 条 600036 的 historical 数据
2025-04-16 21:48:44,382 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 21:48:44,382 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 21:48:44,383 - src.storage.sqlite_storage - WARNING - 表 historical_000001 不存在
2025-04-16 21:48:44,383 - __main__ - INFO - 强制以股票代码模式获取 000001
2025-04-16 21:48:44,384 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 21:48:44,384 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:48:44,384 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 000001 的历史数据
2025-04-16 21:48:44,386 - src.data_sources.akshare - INFO - 已生成 91 条 000001 的模拟历史数据
2025-04-16 21:48:44,392 - src.storage.sqlite_storage - INFO - 成功保存 91 条 000001 的 historical 数据
2025-04-16 21:48:44,394 - __main__ - INFO - 股票 600519 数据列: ['change_pct', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 21:48:44,394 - __main__ - INFO - 股票 601398 数据列: ['change_pct', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 21:48:44,395 - __main__ - INFO - 股票 600036 数据列: ['change_pct', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 21:48:44,395 - __main__ - INFO - 股票 1 数据列: ['change_pct', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 21:48:44,396 - __main__ - INFO - 所有数据集共有的列: ['change_pct', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 21:48:44,398 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 21:48:44,399 - __main__ - INFO - 合并后的数据大小: 364 行 x 11 列
2025-04-16 21:48:44,399 - __main__ - INFO - 最终数据列: ['change_pct', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 21:48:44,400 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 21:48:44,694 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 21:48:44,695 - src.analysis.clustering - INFO - 簇 0: 182 个样本 (50.00%)
2025-04-16 21:48:44,695 - src.analysis.clustering - INFO - 簇 1: 91 个样本 (25.00%)
2025-04-16 21:48:44,695 - src.analysis.clustering - INFO - 簇 2: 91 个样本 (25.00%)
2025-04-16 21:48:44,696 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 21:48:44,696 - __main__ - INFO -   0: 182个样本 (50.00%)
2025-04-16 21:48:44,696 - __main__ - INFO -   1: 91个样本 (25.00%)
2025-04-16 21:48:44,696 - __main__ - INFO -   2: 91个样本 (25.00%)
2025-04-16 21:48:44,697 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 21:48:45,310 - __main__ - INFO - 图表已保存到 results\clustering_clusters_3clusters.png
2025-04-16 21:48:45,323 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 21:48:45,329 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 21:48:45,343 - src.analysis.clustering - INFO - 聚类数 1: inertia = 2184.00
2025-04-16 21:48:45,362 - src.analysis.clustering - INFO - 聚类数 2: inertia = 910.50
2025-04-16 21:48:45,381 - src.analysis.clustering - INFO - 聚类数 3: inertia = 759.38
2025-04-16 21:48:45,408 - src.analysis.clustering - INFO - 聚类数 4: inertia = 621.36
2025-04-16 21:48:45,451 - src.analysis.clustering - INFO - 聚类数 5: inertia = 533.63
2025-04-16 21:48:45,479 - src.analysis.clustering - INFO - 聚类数 6: inertia = 449.48
2025-04-16 21:48:45,510 - src.analysis.clustering - INFO - 聚类数 7: inertia = 384.92
2025-04-16 21:48:45,543 - src.analysis.clustering - INFO - 聚类数 8: inertia = 338.89
2025-04-16 21:48:45,574 - src.analysis.clustering - INFO - 聚类数 9: inertia = 298.96
2025-04-16 21:48:45,609 - src.analysis.clustering - INFO - 聚类数 10: inertia = 260.97
2025-04-16 21:48:45,631 - src.analysis.clustering - INFO - 确定的最佳聚类数: 4
2025-04-16 21:48:45,926 - __main__ - INFO - 图表已保存到 results\clustering_elbow_3clusters.png
2025-04-16 21:48:45,933 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 21:48:47,254 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_3clusters.png
2025-04-16 21:48:47,262 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 21:48:47,328 - src.analysis.clustering - INFO - 原始聚类中心数据类型: <class 'numpy.ndarray'>
2025-04-16 21:48:47,328 - src.analysis.clustering - INFO - 原始聚类中心数据形状: (3, 6)
2025-04-16 21:48:47,329 - src.analysis.clustering - INFO - 处理后的聚类中心数据形状: (3, 6)
2025-04-16 21:48:47,329 - src.analysis.clustering - INFO - 有效特征数量: 6, 特征名称: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 21:48:47,329 - src.analysis.clustering - INFO - 成功创建聚类中心特征筛选数据，形状: (3, 6)
2025-04-16 21:48:47,330 - src.analysis.clustering - INFO - 所有特征列已成功标准化
2025-04-16 21:48:47,330 - src.analysis.clustering - INFO - 标准化后的数据形状: (3, 6)
2025-04-16 21:48:47,331 - src.analysis.clustering - INFO - 创建角度数组，长度: 6
2025-04-16 21:48:47,331 - src.analysis.clustering - INFO - 闭合角度数组，最终长度: 7
2025-04-16 21:48:47,331 - src.analysis.clustering - INFO - 将绘制 3 个簇的雷达图
2025-04-16 21:48:47,331 - src.analysis.clustering - INFO - 聚类 0 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 21:48:47,332 - src.analysis.clustering - INFO - 成功绘制聚类 0 的雷达图
2025-04-16 21:48:47,332 - src.analysis.clustering - INFO - 聚类 1 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 21:48:47,333 - src.analysis.clustering - INFO - 成功绘制聚类 1 的雷达图
2025-04-16 21:48:47,333 - src.analysis.clustering - INFO - 聚类 2 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 21:48:47,335 - src.analysis.clustering - INFO - 成功绘制聚类 2 的雷达图
2025-04-16 21:48:47,335 - src.analysis.clustering - INFO - 成功绘制了 3 个聚类的雷达图
2025-04-16 21:48:47,630 - __main__ - INFO - 图表已保存到 results\clustering_centroids_3clusters.png
2025-04-16 21:48:47,643 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 21:48:47,644 - __main__ - INFO - 聚类分析完成
2025-04-16 21:48:47,644 - __main__ - INFO - 程序执行完毕
2025-04-16 21:49:15,212 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:49:15,212 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:49:15,212 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:49:15,213 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:49:15,214 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:49:15,305 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:49:15,306 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:49:15,306 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:49:24,913 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:49:24,917 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:49:24,918 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:49:24,919 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:49:24,956 - __main__ - INFO - 从 akshare 获取 600036 的历史数据...
2025-04-16 21:49:24,956 - __main__ - INFO - 数据时间范围: 2023-01-01 至 2023-12-31
2025-04-16 21:49:24,957 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:49:24,957 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:49:24,958 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 21:49:24,958 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:49:24,958 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:49:24,959 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 21:49:26,095 - src.data_sources.akshare - WARNING - 解析600036的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 21:49:26,101 - __main__ - INFO - 股票确认: 600036 - 招商银行, 交易所: 上海证券交易所
2025-04-16 21:49:26,103 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:49:26,104 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:49:26,105 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600036 的历史数据
2025-04-16 21:49:26,122 - src.data_sources.akshare - INFO - 已生成 365 条 600036 的模拟历史数据
2025-04-16 21:49:26,123 - __main__ - INFO - 成功获取 365 条历史数据
2025-04-16 21:49:26,124 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 21:49:26,177 - src.storage.sqlite_storage - INFO - 成功保存 365 条 600036 的 historical 数据
2025-04-16 21:49:26,178 - __main__ - INFO - 成功保存 600036 的历史数据
2025-04-16 21:49:26,178 - __main__ - INFO - 程序执行完毕
2025-04-16 21:49:53,762 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:49:53,762 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:49:53,762 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:49:53,763 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:49:53,764 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:49:54,329 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:49:54,330 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:49:54,331 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:50:06,799 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:50:06,805 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:50:06,806 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:50:06,807 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:50:06,854 - __main__ - INFO - 从 akshare 获取 5 只股票的实时数据...
2025-04-16 21:50:06,854 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 21:50:46,832 - src.data_sources.akshare - INFO - 成功获取A股实时行情，共 5410 只股票
2025-04-16 21:50:46,833 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:50:46,833 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:50:46,834 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 21:50:46,835 - src.data_sources.akshare - INFO - 获取 600036 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 21:50:46,835 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:50:46,836 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:50:46,837 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 21:50:46,838 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600036 的实时数据...
2025-04-16 21:50:46,839 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600036 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 21:50:46,839 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600036 的当日数据...
2025-04-16 21:50:48,010 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600036 的当日数据
2025-04-16 21:50:48,011 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600036 的行情数据...
2025-04-16 21:50:50,907 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600036 的行情数据
2025-04-16 21:50:50,908 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 21:50:50,908 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 21:50:50,910 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 21:50:50,910 - src.data_sources.akshare - INFO - 获取 601398 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 21:50:50,911 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 21:50:50,911 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 21:50:50,912 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 21:50:50,914 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601398 的实时数据...
2025-04-16 21:50:50,915 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 601398 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 21:50:50,915 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 601398 的当日数据...
2025-04-16 21:50:51,072 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 601398 的当日数据
2025-04-16 21:50:51,073 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 601398 的行情数据...
2025-04-16 21:50:53,655 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 601398 的行情数据
2025-04-16 21:50:53,655 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 21:50:53,656 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 21:50:53,657 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 21:50:53,658 - src.data_sources.akshare - INFO - 获取 600276 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 21:50:53,658 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 21:50:53,658 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 21:50:53,660 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 21:50:53,661 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600276 的实时数据...
2025-04-16 21:50:53,661 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600276 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 21:50:53,662 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600276 的当日数据...
2025-04-16 21:50:53,803 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600276 的当日数据
2025-04-16 21:50:53,804 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600276 的行情数据...
2025-04-16 21:50:56,373 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600276 的行情数据
2025-04-16 21:50:56,373 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 21:50:56,374 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 21:50:56,375 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 21:50:56,376 - src.data_sources.akshare - INFO - 获取 600519 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 21:50:56,377 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 21:50:56,377 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 21:50:56,378 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 21:50:56,380 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600519 的实时数据...
2025-04-16 21:50:56,381 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600519 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 21:50:56,381 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600519 的当日数据...
2025-04-16 21:50:56,710 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600519 的当日数据
2025-04-16 21:50:56,711 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600519 的行情数据...
2025-04-16 21:50:59,601 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600519 的行情数据
2025-04-16 21:50:59,602 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 21:50:59,602 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 21:50:59,603 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 21:50:59,603 - src.data_sources.akshare - INFO - 获取 601288 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 21:50:59,604 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 21:50:59,604 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 21:50:59,605 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 21:50:59,606 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601288 的实时数据...
2025-04-16 21:50:59,606 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 601288 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 21:50:59,607 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 601288 的当日数据...
2025-04-16 21:50:59,686 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 601288 的当日数据
2025-04-16 21:50:59,687 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 601288 的行情数据...
2025-04-16 21:51:02,040 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 601288 的行情数据
2025-04-16 21:51:02,041 - src.data_sources.akshare - INFO - 成功获取 10 只股票的实时数据
2025-04-16 21:51:02,043 - __main__ - INFO - 成功获取 10 条实时数据
2025-04-16 21:51:02,043 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 21:51:02,044 - src.storage.sqlite_storage - ERROR - 保存 DataType.REALTIME 数据失败: 必须提供symbol参数
2025-04-16 21:51:02,044 - __main__ - ERROR - 保存实时数据失败
2025-04-16 21:51:02,045 - __main__ - INFO - 程序执行完毕
2025-04-16 21:52:31,008 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:52:31,008 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:52:31,009 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:52:31,009 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:52:31,010 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:52:32,176 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:52:32,176 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:52:32,177 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:52:40,877 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:52:40,879 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:52:40,879 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:52:40,880 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:52:40,890 - __main__ - INFO - 从 akshare 获取 1 只股票的实时数据...
2025-04-16 21:52:40,890 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 21:52:41,040 - src.data_sources.akshare - WARNING - 获取A股全部实时行情失败: Can not decode value starting with character '<'
2025-04-16 21:52:41,041 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:52:41,041 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:52:41,042 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 21:52:41,042 - src.data_sources.akshare - INFO - 获取 600036 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 21:52:41,043 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:52:41,043 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:52:41,044 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 21:52:41,044 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600036 的实时数据...
2025-04-16 21:52:41,044 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600036 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 21:52:41,045 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600036 的当日数据...
2025-04-16 21:52:41,481 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600036 的当日数据
2025-04-16 21:52:41,481 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600036 的行情数据...
2025-04-16 21:52:45,864 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600036 的行情数据
2025-04-16 21:52:45,865 - src.data_sources.akshare - INFO - 成功获取 2 只股票的实时数据
2025-04-16 21:52:45,866 - __main__ - INFO - 成功获取 2 条实时数据
2025-04-16 21:52:45,866 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 21:52:45,866 - src.storage.sqlite_storage - ERROR - 保存 DataType.REALTIME 数据失败: 必须提供symbol参数
2025-04-16 21:52:45,867 - __main__ - ERROR - 保存实时数据失败
2025-04-16 21:52:45,867 - __main__ - INFO - 程序执行完毕
2025-04-16 21:53:38,297 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:53:38,297 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:53:38,297 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:53:38,298 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:53:38,298 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:53:38,380 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:53:38,381 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:53:38,381 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:53:47,478 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:53:47,479 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:53:47,479 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:53:47,479 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:53:47,487 - __main__ - INFO - 从 akshare 获取 1 只股票的实时数据...
2025-04-16 21:53:47,487 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 21:53:47,660 - src.data_sources.akshare - WARNING - 获取A股全部实时行情失败: Can not decode value starting with character '<'
2025-04-16 21:53:47,661 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:53:47,661 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:53:47,662 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 21:53:47,663 - src.data_sources.akshare - INFO - 获取 600036 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 21:53:47,663 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:53:47,664 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:53:47,664 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 21:53:47,665 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600036 的实时数据...
2025-04-16 21:53:47,665 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600036 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 21:53:47,665 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600036 的当日数据...
2025-04-16 21:53:47,992 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600036 的当日数据
2025-04-16 21:53:47,992 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600036 的行情数据...
2025-04-16 21:53:52,379 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600036 的行情数据
2025-04-16 21:53:52,379 - src.data_sources.akshare - INFO - 成功获取 2 只股票的实时数据
2025-04-16 21:53:52,380 - __main__ - INFO - 成功获取 2 条实时数据
2025-04-16 21:53:52,381 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 21:53:52,385 - src.storage.sqlite_storage - INFO - 成功保存 2 条 600036 的 realtime 数据
2025-04-16 21:53:52,385 - __main__ - INFO - 成功保存实时数据
2025-04-16 21:53:52,386 - __main__ - INFO - 程序执行完毕
2025-04-16 21:54:04,664 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:54:04,664 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:54:04,664 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:54:04,665 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:54:04,665 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:54:04,760 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:54:04,761 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:54:04,761 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:54:15,102 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:54:15,104 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:54:15,104 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:54:15,104 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:54:15,138 - __main__ - INFO - 从 akshare 获取 5 只股票的实时数据...
2025-04-16 21:54:15,138 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 21:54:15,291 - src.data_sources.akshare - WARNING - 获取A股全部实时行情失败: Can not decode value starting with character '<'
2025-04-16 21:54:15,292 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:54:15,292 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:54:15,293 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 21:54:15,293 - src.data_sources.akshare - INFO - 获取 600036 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 21:54:15,294 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:54:15,294 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:54:15,295 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 21:54:15,295 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600036 的实时数据...
2025-04-16 21:54:15,295 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600036 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 21:54:15,296 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600036 的当日数据...
2025-04-16 21:54:15,389 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600036 的当日数据
2025-04-16 21:54:15,390 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600036 的行情数据...
2025-04-16 21:54:19,351 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600036 的行情数据
2025-04-16 21:54:19,352 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 21:54:19,352 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 21:54:19,353 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 21:54:19,354 - src.data_sources.akshare - INFO - 获取 601398 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 21:54:19,354 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 21:54:19,354 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 21:54:19,355 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 21:54:19,356 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601398 的实时数据...
2025-04-16 21:54:19,356 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 601398 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 21:54:19,356 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 601398 的当日数据...
2025-04-16 21:54:19,468 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 601398 的当日数据
2025-04-16 21:54:19,468 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 601398 的行情数据...
2025-04-16 21:54:23,488 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 601398 的行情数据
2025-04-16 21:54:23,488 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 21:54:23,489 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 21:54:23,490 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 21:54:23,490 - src.data_sources.akshare - INFO - 获取 600276 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 21:54:23,491 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 21:54:23,491 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 21:54:23,492 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 21:54:23,492 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600276 的实时数据...
2025-04-16 21:54:23,492 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600276 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 21:54:23,493 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600276 的当日数据...
2025-04-16 21:54:23,578 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600276 的当日数据
2025-04-16 21:54:23,579 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600276 的行情数据...
2025-04-16 21:54:27,719 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600276 的行情数据
2025-04-16 21:54:27,720 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 21:54:27,720 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 21:54:27,721 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 21:54:27,722 - src.data_sources.akshare - INFO - 获取 600519 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 21:54:27,722 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 21:54:27,722 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 21:54:27,723 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 21:54:27,724 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600519 的实时数据...
2025-04-16 21:54:27,724 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600519 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 21:54:27,724 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600519 的当日数据...
2025-04-16 21:54:27,830 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600519 的当日数据
2025-04-16 21:54:27,831 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600519 的行情数据...
2025-04-16 21:54:31,795 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600519 的行情数据
2025-04-16 21:54:31,795 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 21:54:31,795 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 21:54:31,796 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 21:54:31,797 - src.data_sources.akshare - INFO - 获取 601288 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 21:54:31,797 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 21:54:31,798 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 21:54:31,798 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 21:54:31,799 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601288 的实时数据...
2025-04-16 21:54:31,799 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 601288 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 21:54:31,799 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 601288 的当日数据...
2025-04-16 21:54:31,921 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 601288 的当日数据
2025-04-16 21:54:31,922 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 601288 的行情数据...
2025-04-16 21:54:35,803 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 601288 的行情数据
2025-04-16 21:54:35,803 - src.data_sources.akshare - INFO - 成功获取 10 只股票的实时数据
2025-04-16 21:54:35,804 - __main__ - INFO - 成功获取 10 条实时数据
2025-04-16 21:54:35,805 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 21:54:35,807 - src.storage.sqlite_storage - INFO - 成功保存 2 条 600036 的 realtime 数据
2025-04-16 21:54:35,809 - src.storage.sqlite_storage - INFO - 成功保存 2 条 600276 的 realtime 数据
2025-04-16 21:54:35,811 - src.storage.sqlite_storage - INFO - 成功保存 2 条 600519 的 realtime 数据
2025-04-16 21:54:35,813 - src.storage.sqlite_storage - INFO - 成功保存 2 条 601288 的 realtime 数据
2025-04-16 21:54:35,815 - src.storage.sqlite_storage - INFO - 成功保存 2 条 601398 的 realtime 数据
2025-04-16 21:54:35,815 - __main__ - INFO - 成功保存实时数据
2025-04-16 21:54:35,815 - __main__ - INFO - 程序执行完毕
2025-04-16 21:54:46,866 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:54:46,866 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:54:46,867 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:54:46,867 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:54:46,868 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:54:46,974 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:54:46,975 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:54:46,976 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:54:56,861 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:54:56,863 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:54:56,864 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:54:56,864 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:54:56,886 - __main__ - INFO - 从 akshare 获取 1 只股票的实时数据...
2025-04-16 21:54:56,886 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 21:54:57,078 - src.data_sources.akshare - WARNING - 获取A股全部实时行情失败: Can not decode value starting with character '<'
2025-04-16 21:54:57,079 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:54:57,079 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:54:57,080 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 21:54:57,081 - src.data_sources.akshare - INFO - 获取 600036 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 21:54:57,081 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:54:57,081 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:54:57,082 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 21:54:57,082 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600036 的实时数据...
2025-04-16 21:54:57,083 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600036 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 21:54:57,083 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600036 的当日数据...
2025-04-16 21:54:57,277 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600036 的当日数据
2025-04-16 21:54:57,278 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600036 的行情数据...
2025-04-16 21:55:01,207 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600036 的行情数据
2025-04-16 21:55:01,208 - src.data_sources.akshare - INFO - 成功获取 2 只股票的实时数据
2025-04-16 21:55:01,211 - __main__ - INFO - 成功获取 2 条实时数据
2025-04-16 21:55:01,212 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 21:55:01,219 - src.storage.sqlite_storage - INFO - 成功保存 2 条 600036 的 realtime 数据
2025-04-16 21:55:01,219 - __main__ - INFO - 成功保存实时数据
2025-04-16 21:55:01,220 - __main__ - INFO - 程序执行完毕
2025-04-16 21:56:47,598 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:56:47,599 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:56:47,599 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:56:47,599 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:56:47,600 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:56:47,733 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:56:47,733 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:56:47,733 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:56:57,762 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 21:56:57,764 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 21:56:57,764 - __main__ - INFO - 初始化SQLite存储
2025-04-16 21:56:57,764 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 21:56:57,787 - __main__ - INFO - 从 akshare 获取 600036 的历史数据...
2025-04-16 21:56:57,787 - __main__ - INFO - 数据时间范围: 2023-01-01 至 2023-01-10
2025-04-16 21:56:57,787 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:56:57,787 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:56:57,788 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 21:56:57,789 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:56:57,789 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:56:57,790 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 21:56:58,171 - src.data_sources.akshare - WARNING - 解析600036的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 21:56:58,172 - __main__ - INFO - 股票确认: 600036 - 招商银行, 交易所: 上海证券交易所
2025-04-16 21:56:58,173 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 21:56:58,173 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 21:56:58,174 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600036 的历史数据
2025-04-16 21:56:58,175 - src.data_sources.akshare - INFO - 已生成 10 条 600036 的模拟历史数据
2025-04-16 21:56:58,175 - __main__ - INFO - 成功获取 10 条历史数据
2025-04-16 21:56:58,175 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 21:56:58,177 - src.storage.sqlite_storage - INFO - 成功保存 10 条 600036 的 historical 数据
2025-04-16 21:56:58,177 - __main__ - INFO - 成功保存 600036 的历史数据
2025-04-16 21:56:58,177 - __main__ - INFO - 程序执行完毕
2025-04-16 21:57:17,403 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:57:17,403 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:57:17,403 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:57:17,404 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:57:17,404 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:57:17,529 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:57:17,529 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:57:17,530 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:57:28,973 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:57:28,973 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:57:28,973 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:57:28,974 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:57:28,974 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:57:29,044 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:57:29,044 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:57:29,045 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 21:57:42,168 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 21:57:42,168 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 21:57:42,168 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 21:57:42,169 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 21:57:42,169 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 21:57:42,245 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 21:57:42,246 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 21:57:42,246 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 22:00:06,410 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:00:06,411 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:00:06,411 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:00:06,411 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:00:06,412 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:00:06,497 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:00:06,498 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:00:06,498 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 22:00:14,864 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 22:00:14,866 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 22:00:14,867 - __main__ - INFO - 初始化SQLite存储
2025-04-16 22:00:14,867 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 22:00:15,994 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 22:00:15,994 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 22:00:15,994 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 22:00:15,994 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 22:00:15,995 - src.storage.sqlite_storage - ERROR - 加载数据失败: 'str' object has no attribute 'isoformat'
2025-04-16 22:00:15,996 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:00:15,996 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 22:00:15,996 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600519 的历史数据
2025-04-16 22:00:15,998 - src.data_sources.akshare - INFO - 已生成 91 条 600519 的模拟历史数据
2025-04-16 22:00:16,003 - src.storage.sqlite_storage - INFO - 成功保存 91 条 600519 的 historical 数据
2025-04-16 22:00:16,006 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 22:00:16,007 - src.storage.sqlite_storage - ERROR - 加载数据失败: 'str' object has no attribute 'isoformat'
2025-04-16 22:00:16,008 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:00:16,008 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 22:00:16,008 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 601398 的历史数据
2025-04-16 22:00:16,009 - src.data_sources.akshare - INFO - 已生成 91 条 601398 的模拟历史数据
2025-04-16 22:00:16,015 - src.storage.sqlite_storage - INFO - 成功保存 91 条 601398 的 historical 数据
2025-04-16 22:00:16,018 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 22:00:16,018 - src.storage.sqlite_storage - ERROR - 加载数据失败: 'str' object has no attribute 'isoformat'
2025-04-16 22:00:16,019 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:00:16,019 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 22:00:16,019 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600036 的历史数据
2025-04-16 22:00:16,021 - src.data_sources.akshare - INFO - 已生成 91 条 600036 的模拟历史数据
2025-04-16 22:00:16,026 - src.storage.sqlite_storage - INFO - 成功保存 91 条 600036 的 historical 数据
2025-04-16 22:00:16,029 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 22:00:16,029 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 22:00:16,029 - src.storage.sqlite_storage - ERROR - 加载数据失败: 'str' object has no attribute 'isoformat'
2025-04-16 22:00:16,030 - __main__ - INFO - 强制以股票代码模式获取 000001
2025-04-16 22:00:16,030 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 000001 -> 输出 000001
2025-04-16 22:00:16,031 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 22:00:16,031 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 000001 的历史数据
2025-04-16 22:00:16,032 - src.data_sources.akshare - INFO - 已生成 91 条 000001 的模拟历史数据
2025-04-16 22:00:16,038 - src.storage.sqlite_storage - INFO - 成功保存 91 条 000001 的 historical 数据
2025-04-16 22:00:16,041 - __main__ - INFO - 股票 600519 数据列: ['change_pct', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 22:00:16,041 - __main__ - INFO - 股票 601398 数据列: ['change_pct', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 22:00:16,042 - __main__ - INFO - 股票 600036 数据列: ['change_pct', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 22:00:16,042 - __main__ - INFO - 股票 1 数据列: ['change_pct', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 22:00:16,042 - __main__ - INFO - 所有数据集共有的列: ['change_pct', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 22:00:16,045 - __main__ - INFO - 将使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 22:00:16,045 - __main__ - INFO - 合并后的数据大小: 364 行 x 11 列
2025-04-16 22:00:16,046 - __main__ - INFO - 最终数据列: ['change_pct', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 22:00:16,046 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 22:00:16,328 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 22:00:16,328 - src.analysis.clustering - INFO - 簇 0: 91 个样本 (25.00%)
2025-04-16 22:00:16,329 - src.analysis.clustering - INFO - 簇 1: 182 个样本 (50.00%)
2025-04-16 22:00:16,329 - src.analysis.clustering - INFO - 簇 2: 91 个样本 (25.00%)
2025-04-16 22:00:16,329 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 22:00:16,330 - __main__ - INFO -   0: 91个样本 (25.00%)
2025-04-16 22:00:16,330 - __main__ - INFO -   1: 182个样本 (50.00%)
2025-04-16 22:00:16,330 - __main__ - INFO -   2: 91个样本 (25.00%)
2025-04-16 22:00:16,330 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 22:00:16,941 - __main__ - INFO - 图表已保存到 results\clustering_clusters_3clusters.png
2025-04-16 22:00:16,952 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 22:00:16,958 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 22:00:16,974 - src.analysis.clustering - INFO - 聚类数 1: inertia = 2184.00
2025-04-16 22:00:16,994 - src.analysis.clustering - INFO - 聚类数 2: inertia = 985.15
2025-04-16 22:00:17,020 - src.analysis.clustering - INFO - 聚类数 3: inertia = 772.40
2025-04-16 22:00:17,050 - src.analysis.clustering - INFO - 聚类数 4: inertia = 625.07
2025-04-16 22:00:17,077 - src.analysis.clustering - INFO - 聚类数 5: inertia = 540.82
2025-04-16 22:00:17,109 - src.analysis.clustering - INFO - 聚类数 6: inertia = 464.41
2025-04-16 22:00:17,162 - src.analysis.clustering - INFO - 聚类数 7: inertia = 397.51
2025-04-16 22:00:17,195 - src.analysis.clustering - INFO - 聚类数 8: inertia = 342.75
2025-04-16 22:00:17,230 - src.analysis.clustering - INFO - 聚类数 9: inertia = 292.66
2025-04-16 22:00:17,266 - src.analysis.clustering - INFO - 聚类数 10: inertia = 261.46
2025-04-16 22:00:17,287 - src.analysis.clustering - INFO - 确定的最佳聚类数: 7
2025-04-16 22:00:17,592 - __main__ - INFO - 图表已保存到 results\clustering_elbow_3clusters.png
2025-04-16 22:00:17,599 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 22:00:18,950 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_3clusters.png
2025-04-16 22:00:18,958 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 22:00:19,026 - src.analysis.clustering - INFO - 原始聚类中心数据类型: <class 'numpy.ndarray'>
2025-04-16 22:00:19,027 - src.analysis.clustering - INFO - 原始聚类中心数据形状: (3, 6)
2025-04-16 22:00:19,027 - src.analysis.clustering - INFO - 处理后的聚类中心数据形状: (3, 6)
2025-04-16 22:00:19,027 - src.analysis.clustering - INFO - 有效特征数量: 6, 特征名称: ['open', 'close', 'high', 'low', 'volume', 'change_percent']
2025-04-16 22:00:19,028 - src.analysis.clustering - INFO - 成功创建聚类中心特征筛选数据，形状: (3, 6)
2025-04-16 22:00:19,029 - src.analysis.clustering - INFO - 所有特征列已成功标准化
2025-04-16 22:00:19,029 - src.analysis.clustering - INFO - 标准化后的数据形状: (3, 6)
2025-04-16 22:00:19,029 - src.analysis.clustering - INFO - 创建角度数组，长度: 6
2025-04-16 22:00:19,029 - src.analysis.clustering - INFO - 闭合角度数组，最终长度: 7
2025-04-16 22:00:19,030 - src.analysis.clustering - INFO - 将绘制 3 个簇的雷达图
2025-04-16 22:00:19,030 - src.analysis.clustering - INFO - 聚类 0 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 22:00:19,031 - src.analysis.clustering - INFO - 成功绘制聚类 0 的雷达图
2025-04-16 22:00:19,031 - src.analysis.clustering - INFO - 聚类 1 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 22:00:19,032 - src.analysis.clustering - INFO - 成功绘制聚类 1 的雷达图
2025-04-16 22:00:19,032 - src.analysis.clustering - INFO - 聚类 2 最终值数组长度: 7, 角度数组长度: 7
2025-04-16 22:00:19,033 - src.analysis.clustering - INFO - 成功绘制聚类 2 的雷达图
2025-04-16 22:00:19,034 - src.analysis.clustering - INFO - 成功绘制了 3 个聚类的雷达图
2025-04-16 22:00:19,339 - __main__ - INFO - 图表已保存到 results\clustering_centroids_3clusters.png
2025-04-16 22:00:19,351 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 22:00:19,352 - __main__ - INFO - 聚类分析完成
2025-04-16 22:00:19,352 - __main__ - INFO - 程序执行完毕
2025-04-16 22:01:12,527 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:01:12,528 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:01:12,528 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:01:12,529 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:01:12,529 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:01:12,608 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:01:12,608 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:01:12,608 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 22:01:29,353 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:01:29,353 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:01:29,353 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:01:29,354 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:01:29,354 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:01:29,421 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:01:29,421 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:01:29,422 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 22:02:28,719 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:02:28,719 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:02:28,720 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:02:28,720 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:02:28,721 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:02:28,911 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:02:28,912 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:02:28,913 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 22:02:37,655 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 22:02:37,661 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 22:02:37,662 - __main__ - INFO - 初始化SQLite存储
2025-04-16 22:02:37,663 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 22:02:37,704 - __main__ - INFO - 从 akshare 获取 5 只股票的实时数据...
2025-04-16 22:02:37,705 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 22:03:17,490 - src.data_sources.akshare - INFO - 成功获取A股实时行情，共 5410 只股票
2025-04-16 22:03:17,491 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:03:17,491 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:03:17,493 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:03:17,494 - src.data_sources.akshare - INFO - 获取 600036 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:03:17,494 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:03:17,494 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:03:17,496 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:03:17,498 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600036 的实时数据...
2025-04-16 22:03:17,498 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600036 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 22:03:17,499 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600036 的当日数据...
2025-04-16 22:03:17,694 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600036 的当日数据
2025-04-16 22:03:17,696 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600036 的行情数据...
2025-04-16 22:03:22,393 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600036 的行情数据
2025-04-16 22:03:22,394 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:03:22,394 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:03:22,396 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 22:03:22,396 - src.data_sources.akshare - INFO - 获取 601398 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:03:22,397 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:03:22,397 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:03:22,397 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 22:03:22,398 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601398 的实时数据...
2025-04-16 22:03:22,399 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 601398 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 22:03:22,399 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 601398 的当日数据...
2025-04-16 22:03:22,531 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 601398 的当日数据
2025-04-16 22:03:22,531 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 601398 的行情数据...
2025-04-16 22:03:26,912 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 601398 的行情数据
2025-04-16 22:03:26,912 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:03:26,913 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:03:26,914 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 22:03:26,915 - src.data_sources.akshare - INFO - 获取 600276 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:03:26,915 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:03:26,915 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:03:26,917 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 22:03:26,918 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600276 的实时数据...
2025-04-16 22:03:26,919 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600276 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 22:03:26,919 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600276 的当日数据...
2025-04-16 22:03:27,047 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600276 的当日数据
2025-04-16 22:03:27,048 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600276 的行情数据...
2025-04-16 22:03:31,499 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600276 的行情数据
2025-04-16 22:03:31,500 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:03:31,500 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:03:31,502 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 22:03:31,502 - src.data_sources.akshare - INFO - 获取 600519 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:03:31,503 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:03:31,503 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:03:31,505 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 22:03:31,507 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600519 的实时数据...
2025-04-16 22:03:31,507 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600519 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 22:03:31,508 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600519 的当日数据...
2025-04-16 22:03:31,644 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600519 的当日数据
2025-04-16 22:03:31,645 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600519 的行情数据...
2025-04-16 22:03:35,925 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600519 的行情数据
2025-04-16 22:03:35,925 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:03:35,926 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:03:35,927 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 22:03:35,928 - src.data_sources.akshare - INFO - 获取 601288 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:03:35,928 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:03:35,928 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:03:35,929 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 22:03:35,930 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601288 的实时数据...
2025-04-16 22:03:35,931 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 601288 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 22:03:35,931 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 601288 的当日数据...
2025-04-16 22:03:36,050 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 601288 的当日数据
2025-04-16 22:03:36,050 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 601288 的行情数据...
2025-04-16 22:03:41,214 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 601288 的行情数据
2025-04-16 22:03:41,214 - src.data_sources.akshare - INFO - 成功获取 10 只股票的实时数据
2025-04-16 22:03:41,216 - __main__ - INFO - 成功获取 10 条实时数据
2025-04-16 22:03:41,216 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 22:03:41,232 - src.storage.sqlite_storage - INFO - 成功保存 2 条 600036 的 realtime 数据
2025-04-16 22:03:41,234 - src.storage.sqlite_storage - INFO - 成功保存 2 条 600276 的 realtime 数据
2025-04-16 22:03:41,236 - src.storage.sqlite_storage - INFO - 成功保存 2 条 600519 的 realtime 数据
2025-04-16 22:03:41,237 - src.storage.sqlite_storage - INFO - 成功保存 2 条 601288 的 realtime 数据
2025-04-16 22:03:41,239 - src.storage.sqlite_storage - INFO - 成功保存 2 条 601398 的 realtime 数据
2025-04-16 22:03:41,239 - __main__ - INFO - 成功保存实时数据
2025-04-16 22:03:41,239 - __main__ - INFO - 程序执行完毕
2025-04-16 22:14:16,902 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:14:16,902 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:14:16,902 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:14:16,903 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:14:16,903 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:14:18,091 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:14:18,091 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:14:18,091 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 22:14:26,353 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 22:14:26,355 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 22:14:26,355 - __main__ - INFO - 初始化SQLite存储
2025-04-16 22:14:26,355 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 22:14:27,482 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 22:14:27,482 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 22:14:27,483 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 22:14:27,483 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 22:14:27,483 - src.storage.sqlite_storage - ERROR - SQLiteStorage.load_data 发生异常: 'str' object has no attribute 'value'
2025-04-16 22:14:27,485 - __main__ - ERROR - 获取股票 600519 数据时出错: 'str' object has no attribute 'value'
2025-04-16 22:14:27,485 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 22:14:27,485 - src.storage.sqlite_storage - ERROR - SQLiteStorage.load_data 发生异常: 'str' object has no attribute 'value'
2025-04-16 22:14:27,486 - __main__ - ERROR - 获取股票 601398 数据时出错: 'str' object has no attribute 'value'
2025-04-16 22:14:27,486 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 22:14:27,487 - src.storage.sqlite_storage - ERROR - SQLiteStorage.load_data 发生异常: 'str' object has no attribute 'value'
2025-04-16 22:14:27,487 - __main__ - ERROR - 获取股票 600036 数据时出错: 'str' object has no attribute 'value'
2025-04-16 22:14:27,488 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 22:14:27,488 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 22:14:27,488 - src.storage.sqlite_storage - ERROR - SQLiteStorage.load_data 发生异常: 'str' object has no attribute 'value'
2025-04-16 22:14:27,489 - __main__ - ERROR - 获取股票 000001 数据时出错: 'str' object has no attribute 'value'
2025-04-16 22:14:27,489 - __main__ - ERROR - 没有有效的股票数据进行聚类分析
2025-04-16 22:14:27,489 - __main__ - INFO - 程序执行完毕
2025-04-16 22:19:47,565 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:19:47,565 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:19:47,566 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:19:47,566 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:19:47,567 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:19:47,787 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:19:47,788 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:19:47,789 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 22:19:57,454 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 22:19:57,458 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 22:19:57,459 - __main__ - INFO - 初始化SQLite存储
2025-04-16 22:19:57,460 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 22:19:57,480 - __main__ - INFO - 从 akshare 获取 600036 的历史数据...
2025-04-16 22:19:57,481 - __main__ - INFO - 数据时间范围: 2023-01-01 至 2023-12-31
2025-04-16 22:19:57,481 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:19:57,481 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:19:57,482 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:19:57,482 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:19:57,483 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:19:57,483 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:19:57,576 - src.data_sources.akshare - WARNING - 解析600036的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 22:19:57,577 - __main__ - INFO - 股票确认: 600036 - 招商银行, 交易所: 上海证券交易所
2025-04-16 22:19:57,578 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:19:57,578 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 22:19:57,579 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600036 的历史数据
2025-04-16 22:19:57,581 - src.data_sources.akshare - INFO - 已生成 365 条 600036 的模拟历史数据
2025-04-16 22:19:57,581 - __main__ - INFO - 成功获取 365 条历史数据
2025-04-16 22:19:57,581 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 22:19:57,591 - src.storage.sqlite_storage - ERROR - SQLiteStorage.save_data 发生异常: SQLiteStorage.save_data() missing 1 required positional argument: 'self'
2025-04-16 22:19:57,591 - __main__ - ERROR - 程序执行过程中发生错误: SQLiteStorage.save_data() missing 1 required positional argument: 'self'
Traceback (most recent call last):
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 1171, in <module>
    main()
    ~~~~^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 595, in main
    get_historical_data(args, data_sources, storage)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 203, in get_historical_data
    success = storage_instance.save_data(
        data=df,
        data_type=DataType.HISTORICAL,
        symbol=args.symbol
    )
  File "C:\Users\laisn\Desktop\Beeshare\src\utils\logging_utils.py", line 165, in wrapper
    result = func(*args, **kwargs)
TypeError: SQLiteStorage.save_data() missing 1 required positional argument: 'self'
2025-04-16 22:23:59,779 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:23:59,779 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:23:59,779 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:23:59,780 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:23:59,780 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:23:59,954 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:23:59,954 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:23:59,954 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 22:24:10,090 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 22:24:10,094 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 22:24:10,095 - __main__ - INFO - 初始化SQLite存储
2025-04-16 22:24:10,095 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 22:24:10,103 - __main__ - INFO - 从 akshare 获取 600036 的历史数据...
2025-04-16 22:24:10,103 - __main__ - INFO - 数据时间范围: 2023-01-01 至 2023-12-31
2025-04-16 22:24:10,104 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:24:10,104 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:24:10,105 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:24:10,105 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:24:10,106 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:24:10,107 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:24:10,219 - src.data_sources.akshare - WARNING - 解析600036的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 22:24:10,221 - __main__ - INFO - 股票确认: 600036 - 招商银行, 交易所: 上海证券交易所
2025-04-16 22:24:10,221 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:24:10,222 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 22:24:10,222 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600036 的历史数据
2025-04-16 22:24:10,225 - src.data_sources.akshare - INFO - 已生成 365 条 600036 的模拟历史数据
2025-04-16 22:24:10,225 - __main__ - INFO - 成功获取 365 条历史数据
2025-04-16 22:24:10,225 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 22:24:10,234 - src.storage.sqlite_storage - ERROR - SQLiteStorage.save_data 发生异常: 'DataType' object has no attribute 'empty'
2025-04-16 22:24:10,236 - __main__ - ERROR - 程序执行过程中发生错误: 'DataType' object has no attribute 'empty'
Traceback (most recent call last):
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 1163, in <module>
    main()
    ~~~~^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 587, in main
    get_historical_data(args, data_sources, storage)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 203, in get_historical_data
    success = storage_instance.save_data(df, DataType.HISTORICAL, args.symbol)
  File "C:\Users\laisn\Desktop\Beeshare\src\utils\logging_utils.py", line 165, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\laisn\Desktop\Beeshare\src\storage\sqlite_storage.py", line 418, in save_data
    if data.empty:
       ^^^^^^^^^^
AttributeError: 'DataType' object has no attribute 'empty'
2025-04-16 22:24:57,626 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:24:57,626 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:24:57,626 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:24:57,627 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:24:57,628 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:24:57,745 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:24:57,745 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:24:57,746 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 22:25:06,044 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 22:25:06,046 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 22:25:06,047 - __main__ - INFO - 初始化SQLite存储
2025-04-16 22:25:06,047 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 22:25:06,061 - __main__ - INFO - 从 akshare 获取 600036 的历史数据...
2025-04-16 22:25:06,062 - __main__ - INFO - 数据时间范围: 2023-01-01 至 2023-12-31
2025-04-16 22:25:06,062 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:25:06,062 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:25:06,063 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:25:06,063 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:25:06,063 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:25:06,064 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:25:06,160 - src.data_sources.akshare - WARNING - 解析600036的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 22:25:06,162 - __main__ - INFO - 股票确认: 600036 - 招商银行, 交易所: 上海证券交易所
2025-04-16 22:25:06,163 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:25:06,163 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 22:25:06,163 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600036 的历史数据
2025-04-16 22:25:06,166 - src.data_sources.akshare - INFO - 已生成 365 条 600036 的模拟历史数据
2025-04-16 22:25:06,166 - __main__ - INFO - 成功获取 365 条历史数据
2025-04-16 22:25:06,167 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 22:25:06,176 - src.storage.sqlite_storage - ERROR - SQLiteStorage.save_data 发生异常: 'DataType' object has no attribute 'empty'
2025-04-16 22:25:06,177 - __main__ - ERROR - 程序执行过程中发生错误: 'DataType' object has no attribute 'empty'
Traceback (most recent call last):
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 1163, in <module>
    main()
    ~~~~^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 587, in main
    get_historical_data(args, data_sources, storage)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 203, in get_historical_data
    success = storage_instance.save_data(df, DataType.HISTORICAL, args.symbol)
  File "C:\Users\laisn\Desktop\Beeshare\src\utils\logging_utils.py", line 165, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\laisn\Desktop\Beeshare\src\storage\sqlite_storage.py", line 418, in save_data
    if data.empty:
       ^^^^^^^^^^
AttributeError: 'DataType' object has no attribute 'empty'
2025-04-16 22:26:32,649 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:26:32,650 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:26:32,650 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:26:32,650 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:26:32,651 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:26:32,779 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:26:32,780 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:26:32,780 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 22:26:41,592 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 22:26:41,596 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 22:26:41,597 - __main__ - INFO - 初始化SQLite存储
2025-04-16 22:26:41,597 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 22:26:41,611 - __main__ - INFO - 从 akshare 获取 600036 的历史数据...
2025-04-16 22:26:41,611 - __main__ - INFO - 数据时间范围: 2023-01-01 至 2023-12-31
2025-04-16 22:26:41,611 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:26:41,611 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:26:41,612 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:26:41,613 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:26:41,613 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:26:41,614 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:26:41,707 - src.data_sources.akshare - WARNING - 解析600036的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 22:26:41,708 - __main__ - INFO - 股票确认: 600036 - 招商银行, 交易所: 上海证券交易所
2025-04-16 22:26:41,709 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:26:41,709 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 22:26:41,709 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600036 的历史数据
2025-04-16 22:26:41,712 - src.data_sources.akshare - INFO - 已生成 365 条 600036 的模拟历史数据
2025-04-16 22:26:41,712 - __main__ - INFO - 成功获取 365 条历史数据
2025-04-16 22:26:41,712 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 22:26:41,721 - src.storage.sqlite_storage - ERROR - SQLiteStorage.save_data 发生异常: SQLiteStorage.save_data() missing 1 required positional argument: 'self'
2025-04-16 22:26:41,722 - __main__ - ERROR - 程序执行过程中发生错误: SQLiteStorage.save_data() missing 1 required positional argument: 'self'
Traceback (most recent call last):
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 1163, in <module>
    main()
    ~~~~^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 587, in main
    get_historical_data(args, data_sources, storage)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 203, in get_historical_data
    success = storage_instance.save_data(data=df, data_type=DataType.HISTORICAL, symbol=args.symbol)
  File "C:\Users\laisn\Desktop\Beeshare\src\utils\logging_utils.py", line 165, in wrapper
    result = func(*args, **kwargs)
TypeError: SQLiteStorage.save_data() missing 1 required positional argument: 'self'
2025-04-16 22:27:48,585 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:27:48,586 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:27:48,586 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:27:48,587 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:27:48,587 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:27:49,720 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:27:49,721 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:27:49,722 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 22:27:58,306 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 22:27:58,312 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 22:27:58,314 - __main__ - INFO - 初始化SQLite存储
2025-04-16 22:27:58,315 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 22:27:58,335 - __main__ - INFO - 从 akshare 获取 600036 的历史数据...
2025-04-16 22:27:58,336 - __main__ - INFO - 数据时间范围: 2023-01-01 至 2023-12-31
2025-04-16 22:27:58,337 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:27:58,337 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:27:58,340 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:27:58,341 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:27:58,341 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:27:58,343 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:27:58,450 - src.data_sources.akshare - WARNING - 解析600036的详细信息时发生错误: If using all scalar values, you must pass an index
2025-04-16 22:27:58,455 - __main__ - INFO - 股票确认: 600036 - 招商银行, 交易所: 上海证券交易所
2025-04-16 22:27:58,458 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:27:58,459 - src.data_sources.akshare - INFO - AKShareDS状态: is_ready=True, partial_ready=True, testing=True
2025-04-16 22:27:58,460 - src.data_sources.akshare - WARNING - 数据源未就绪或启用了测试模式，使用模拟数据获取 600036 的历史数据
2025-04-16 22:27:58,471 - src.data_sources.akshare - INFO - 已生成 365 条 600036 的模拟历史数据
2025-04-16 22:27:58,472 - __main__ - INFO - 成功获取 365 条历史数据
2025-04-16 22:27:58,473 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 22:27:58,503 - src.storage.sqlite_storage - WARNING - 数据缺少必要列: ['turnover', 'change_pct']，将使用null值填充
2025-04-16 22:27:58,542 - src.storage.sqlite_storage - INFO - 成功保存 365 条 600036 的 historical 数据
2025-04-16 22:27:58,542 - __main__ - INFO - 成功保存 600036 的历史数据
2025-04-16 22:27:58,543 - __main__ - INFO - 程序执行完毕
2025-04-16 22:29:39,010 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:29:39,011 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:29:39,011 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:29:39,012 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:29:39,012 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:29:39,139 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:29:39,140 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:29:39,141 - src.data_sources.akshare - WARNING - 数据源已启用测试模式，在API调用失败时将使用模拟数据
2025-04-16 22:29:48,852 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 22:29:48,853 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 22:29:48,854 - __main__ - INFO - 初始化SQLite存储
2025-04-16 22:29:48,854 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 22:29:48,895 - __main__ - INFO - 从 akshare 获取 5 只股票的实时数据...
2025-04-16 22:29:48,895 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 22:30:28,734 - src.data_sources.akshare - INFO - 成功获取A股实时行情，共 5410 只股票
2025-04-16 22:30:28,734 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:30:28,735 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:30:28,735 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:30:28,736 - src.data_sources.akshare - INFO - 获取 600036 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:30:28,736 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:30:28,737 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:30:28,737 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:30:28,738 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600036 的实时数据...
2025-04-16 22:30:28,739 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600036 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 22:30:28,739 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600036 的当日数据...
2025-04-16 22:30:29,228 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600036 的当日数据
2025-04-16 22:30:29,229 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600036 的行情数据...
2025-04-16 22:30:35,746 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600036 的行情数据
2025-04-16 22:30:35,747 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:30:35,747 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:30:35,748 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 22:30:35,749 - src.data_sources.akshare - INFO - 获取 601398 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:30:35,749 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:30:35,749 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:30:35,750 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 22:30:35,751 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601398 的实时数据...
2025-04-16 22:30:35,751 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 601398 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 22:30:35,751 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 601398 的当日数据...
2025-04-16 22:30:35,862 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 601398 的当日数据
2025-04-16 22:30:35,863 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 601398 的行情数据...
2025-04-16 22:30:43,746 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 601398 的行情数据
2025-04-16 22:30:43,746 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:30:43,746 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:30:43,747 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 22:30:43,748 - src.data_sources.akshare - INFO - 获取 600276 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:30:43,748 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:30:43,748 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:30:43,749 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 22:30:43,750 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600276 的实时数据...
2025-04-16 22:30:43,750 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600276 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 22:30:43,751 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600276 的当日数据...
2025-04-16 22:30:43,832 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600276 的当日数据
2025-04-16 22:30:43,833 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600276 的行情数据...
2025-04-16 22:30:51,587 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600276 的行情数据
2025-04-16 22:30:51,588 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:30:51,588 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:30:51,590 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 22:30:51,590 - src.data_sources.akshare - INFO - 获取 600519 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:30:51,591 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:30:51,591 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:30:51,592 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 22:30:51,594 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600519 的实时数据...
2025-04-16 22:30:51,594 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 600519 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 22:30:51,595 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 600519 的当日数据...
2025-04-16 22:30:51,721 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 600519 的当日数据
2025-04-16 22:30:51,721 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 600519 的行情数据...
2025-04-16 22:30:58,383 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 600519 的行情数据
2025-04-16 22:30:58,383 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:30:58,384 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:30:58,385 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 22:30:58,386 - src.data_sources.akshare - INFO - 获取 601288 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:30:58,386 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:30:58,387 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:30:58,388 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 22:30:58,389 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601288 的实时数据...
2025-04-16 22:30:58,390 - src.data_sources.akshare - WARNING - 使用单独股票行情接口获取 601288 数据失败: stock_zh_a_spot_em() got an unexpected keyword argument 'symbol'
2025-04-16 22:30:58,390 - src.data_sources.akshare - INFO - 尝试使用历史数据接口获取 601288 的当日数据...
2025-04-16 22:30:58,823 - src.data_sources.akshare - INFO - 通过历史数据接口成功获取 601288 的当日数据
2025-04-16 22:30:58,824 - src.data_sources.akshare - INFO - 尝试使用特定股票代码接口获取 601288 的行情数据...
2025-04-16 22:31:03,529 - src.data_sources.akshare - INFO - 通过特定交易所接口成功获取 601288 的行情数据
2025-04-16 22:31:03,530 - src.data_sources.akshare - INFO - 成功获取 10 只股票的实时数据
2025-04-16 22:31:03,532 - __main__ - INFO - 成功获取 10 条实时数据
2025-04-16 22:31:03,532 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 22:31:03,550 - src.storage.sqlite_storage - WARNING - 数据缺少必要列: ['bid_price', 'ask_price', 'bid_volume', 'ask_volume', 'change_pct']，将使用null值填充
2025-04-16 22:31:03,553 - src.storage.sqlite_storage - INFO - 成功保存 2 条 600036 的 realtime 数据
2025-04-16 22:31:03,572 - src.storage.sqlite_storage - WARNING - 数据缺少必要列: ['bid_price', 'ask_price', 'bid_volume', 'ask_volume', 'change_pct']，将使用null值填充
2025-04-16 22:31:03,575 - src.storage.sqlite_storage - INFO - 成功保存 2 条 600276 的 realtime 数据
2025-04-16 22:31:03,584 - src.storage.sqlite_storage - WARNING - 数据缺少必要列: ['bid_price', 'ask_price', 'bid_volume', 'ask_volume', 'change_pct']，将使用null值填充
2025-04-16 22:31:03,586 - src.storage.sqlite_storage - INFO - 成功保存 2 条 600519 的 realtime 数据
2025-04-16 22:31:03,595 - src.storage.sqlite_storage - WARNING - 数据缺少必要列: ['bid_price', 'ask_price', 'bid_volume', 'ask_volume', 'change_pct']，将使用null值填充
2025-04-16 22:31:03,597 - src.storage.sqlite_storage - INFO - 成功保存 2 条 601288 的 realtime 数据
2025-04-16 22:31:03,606 - src.storage.sqlite_storage - WARNING - 数据缺少必要列: ['bid_price', 'ask_price', 'bid_volume', 'ask_volume', 'change_pct']，将使用null值填充
2025-04-16 22:31:03,609 - src.storage.sqlite_storage - INFO - 成功保存 2 条 601398 的 realtime 数据
2025-04-16 22:31:03,609 - __main__ - INFO - 成功保存实时数据
2025-04-16 22:31:03,609 - __main__ - INFO - 程序执行完毕
2025-04-16 22:35:22,733 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:35:22,734 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:35:22,734 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:35:22,734 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:35:22,735 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:35:22,867 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:35:22,868 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:35:32,785 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 22:35:32,793 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 22:35:32,794 - __main__ - INFO - 初始化SQLite存储
2025-04-16 22:35:32,795 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 22:35:32,819 - __main__ - INFO - 从 akshare 获取 5 只股票的实时数据...
2025-04-16 22:35:32,819 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 22:36:09,556 - src.data_sources.akshare - INFO - 成功获取A股实时行情，共 5410 只股票
2025-04-16 22:36:09,556 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:36:09,557 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:36:09,559 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:36:09,560 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:36:09,560 - src.data_sources.akshare - INFO - 获取 600036 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:36:09,561 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:36:09,561 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:36:09,562 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:36:09,562 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:36:09,563 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600036 的实时数据...
2025-04-16 22:36:26,167 - src.data_sources.akshare - INFO - 通过单独接口成功获取 600036 的实时数据
2025-04-16 22:36:26,168 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:36:26,168 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:36:26,169 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 22:36:26,169 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 22:36:26,170 - src.data_sources.akshare - INFO - 获取 601398 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:36:26,170 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:36:26,170 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:36:26,171 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 22:36:26,171 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 22:36:26,172 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601398 的实时数据...
2025-04-16 22:36:40,823 - src.data_sources.akshare - INFO - 通过单独接口成功获取 601398 的实时数据
2025-04-16 22:36:40,824 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:36:40,824 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:36:40,825 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 22:36:40,826 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 22:36:40,827 - src.data_sources.akshare - INFO - 获取 600276 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:36:40,827 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:36:40,827 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:36:40,828 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 22:36:40,829 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 22:36:40,830 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600276 的实时数据...
2025-04-16 22:36:52,632 - src.data_sources.akshare - INFO - 通过单独接口成功获取 600276 的实时数据
2025-04-16 22:36:52,633 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:36:52,633 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:36:52,634 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 22:36:52,635 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 22:36:52,635 - src.data_sources.akshare - INFO - 获取 600519 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:36:52,635 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:36:52,635 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:36:52,636 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 22:36:52,637 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 22:36:52,638 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600519 的实时数据...
2025-04-16 22:37:04,028 - src.data_sources.akshare - INFO - 通过单独接口成功获取 600519 的实时数据
2025-04-16 22:37:04,028 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:37:04,029 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:37:04,029 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 22:37:04,030 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 22:37:04,030 - src.data_sources.akshare - INFO - 获取 601288 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:37:04,031 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:37:04,031 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:37:04,032 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 22:37:04,032 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 22:37:04,033 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601288 的实时数据...
2025-04-16 22:37:18,220 - src.data_sources.akshare - INFO - 通过单独接口成功获取 601288 的实时数据
2025-04-16 22:37:18,222 - src.data_sources.akshare - INFO - 成功获取 5 只股票的实时数据
2025-04-16 22:37:18,223 - __main__ - INFO - 成功获取 5 条实时数据
2025-04-16 22:37:18,223 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 22:37:18,249 - src.storage.sqlite_storage - WARNING - 数据缺少必要列: ['change_pct']，将使用null值填充
2025-04-16 22:37:18,252 - src.storage.sqlite_storage - INFO - 成功保存 1 条 600036 的 realtime 数据
2025-04-16 22:37:18,265 - src.storage.sqlite_storage - WARNING - 数据缺少必要列: ['change_pct']，将使用null值填充
2025-04-16 22:37:18,267 - src.storage.sqlite_storage - INFO - 成功保存 1 条 600276 的 realtime 数据
2025-04-16 22:37:18,278 - src.storage.sqlite_storage - WARNING - 数据缺少必要列: ['change_pct']，将使用null值填充
2025-04-16 22:37:18,280 - src.storage.sqlite_storage - INFO - 成功保存 1 条 600519 的 realtime 数据
2025-04-16 22:37:18,315 - src.storage.sqlite_storage - WARNING - 数据缺少必要列: ['change_pct']，将使用null值填充
2025-04-16 22:37:18,317 - src.storage.sqlite_storage - INFO - 成功保存 1 条 601288 的 realtime 数据
2025-04-16 22:37:18,328 - src.storage.sqlite_storage - WARNING - 数据缺少必要列: ['change_pct']，将使用null值填充
2025-04-16 22:37:18,330 - src.storage.sqlite_storage - INFO - 成功保存 1 条 601398 的 realtime 数据
2025-04-16 22:37:18,331 - __main__ - INFO - 成功保存实时数据
2025-04-16 22:37:18,331 - __main__ - INFO - 程序执行完毕
2025-04-16 22:43:00,632 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:43:00,632 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:43:00,632 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:43:00,633 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:43:00,633 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:43:00,814 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:43:00,814 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:44:56,215 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:44:56,216 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:44:56,216 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:44:56,216 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:44:56,217 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:44:56,333 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:44:56,334 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:45:09,562 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:45:09,563 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:45:09,563 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:45:09,564 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:45:09,564 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:45:09,680 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:45:09,680 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:50:26,313 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:50:26,314 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:50:26,314 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:50:26,314 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:50:26,315 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:50:26,554 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:50:26,555 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:50:35,705 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 22:50:35,712 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 22:50:35,713 - __main__ - INFO - 初始化SQLite存储
2025-04-16 22:50:35,714 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 22:50:35,752 - __main__ - INFO - 从 akshare 获取 5 只股票的实时数据...
2025-04-16 22:50:35,752 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 22:51:18,132 - src.data_sources.akshare - INFO - 成功获取A股实时行情，共 5410 只股票
2025-04-16 22:51:18,133 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:51:18,134 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:51:18,135 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:51:18,135 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:51:18,136 - src.data_sources.akshare - INFO - 获取 600036 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:51:18,136 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:51:18,137 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600036 -> 输出 600036
2025-04-16 22:51:18,138 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:51:18,139 - src.data_sources.akshare - INFO - 股票 600036 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '招商银行', 'exists': True}
2025-04-16 22:51:18,140 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600036 的实时数据...
2025-04-16 22:51:28,141 - src.data_sources.akshare - INFO - 通过单独接口成功获取 600036 的实时数据
2025-04-16 22:51:28,142 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:51:28,142 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:51:28,143 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 22:51:28,143 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 22:51:28,144 - src.data_sources.akshare - INFO - 获取 601398 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:51:28,144 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:51:28,144 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 22:51:28,145 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 22:51:28,146 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 22:51:28,147 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601398 的实时数据...
2025-04-16 22:51:37,582 - src.data_sources.akshare - INFO - 通过单独接口成功获取 601398 的实时数据
2025-04-16 22:51:37,582 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:51:37,582 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:51:37,583 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 22:51:37,584 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 22:51:37,584 - src.data_sources.akshare - INFO - 获取 600276 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:51:37,584 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:51:37,584 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600276 -> 输出 600276
2025-04-16 22:51:37,585 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 22:51:37,585 - src.data_sources.akshare - INFO - 股票 600276 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '恒瑞医药', 'exists': True}
2025-04-16 22:51:37,586 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600276 的实时数据...
2025-04-16 22:51:49,026 - src.data_sources.akshare - INFO - 通过单独接口成功获取 600276 的实时数据
2025-04-16 22:51:49,026 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:51:49,026 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:51:49,027 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 22:51:49,028 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 22:51:49,028 - src.data_sources.akshare - INFO - 获取 600519 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:51:49,029 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:51:49,029 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 22:51:49,030 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 22:51:49,030 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 22:51:49,031 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600519 的实时数据...
2025-04-16 22:51:58,324 - src.data_sources.akshare - INFO - 通过单独接口成功获取 600519 的实时数据
2025-04-16 22:51:58,325 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:51:58,325 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:51:58,326 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 22:51:58,326 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 22:51:58,327 - src.data_sources.akshare - INFO - 获取 601288 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 22:51:58,327 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:51:58,327 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601288 -> 输出 601288
2025-04-16 22:51:58,328 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 22:51:58,328 - src.data_sources.akshare - INFO - 股票 601288 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '农业银行', 'exists': True}
2025-04-16 22:51:58,329 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601288 的实时数据...
2025-04-16 22:52:07,697 - src.data_sources.akshare - INFO - 通过单独接口成功获取 601288 的实时数据
2025-04-16 22:52:07,698 - src.data_sources.akshare - INFO - 结果DataFrame的列：['symbol', 'timestamp', 'price', 'change', 'change_pct', 'volume', 'amount', 'high', 'low', 'open', 'prev_close', 'bid_price', 'ask_price', 'bid_volume', 'ask_volume', 'source']
2025-04-16 22:52:07,699 - src.data_sources.akshare - INFO - 列 symbol 的前3个值: ['600036', '601398', '600276']
2025-04-16 22:52:07,699 - src.data_sources.akshare - INFO - 列 timestamp 的前3个值: [Timestamp('2025-04-16 22:51:28.141741'), Timestamp('2025-04-16 22:51:37.581968'), Timestamp('2025-04-16 22:51:49.026178')]
2025-04-16 22:52:07,700 - src.data_sources.akshare - INFO - 列 price 的前3个值: [42.25, 7.06, 48.9]
2025-04-16 22:52:07,700 - src.data_sources.akshare - INFO - 列 change 的前3个值: [0.15, 0.1, 0.63]
2025-04-16 22:52:07,700 - src.data_sources.akshare - INFO - 列 change_pct 的前3个值: [0.36, 1.44, 1.31]
2025-04-16 22:52:07,701 - src.data_sources.akshare - INFO - 列 volume 的前3个值: [576294.0, 4132402.0, 455344.0]
2025-04-16 22:52:07,701 - src.data_sources.akshare - INFO - 列 amount 的前3个值: [2425842589.0, 2892689930.0, 2184411134.0]
2025-04-16 22:52:07,701 - src.data_sources.akshare - INFO - 列 high 的前3个值: [42.58, 7.06, 48.9]
2025-04-16 22:52:07,701 - src.data_sources.akshare - INFO - 列 low 的前3个值: [41.82, 6.93, 47.36]
2025-04-16 22:52:07,701 - src.data_sources.akshare - INFO - 列 open 的前3个值: [None, None, None]
2025-04-16 22:52:07,702 - src.data_sources.akshare - INFO - 列 prev_close 的前3个值: [42.1, 6.96, 48.27]
2025-04-16 22:52:07,702 - src.data_sources.akshare - INFO - 列 bid_price 的前3个值: [None, None, None]
2025-04-16 22:52:07,702 - src.data_sources.akshare - INFO - 列 ask_price 的前3个值: [None, None, None]
2025-04-16 22:52:07,702 - src.data_sources.akshare - INFO - 列 bid_volume 的前3个值: [0, 0, 0]
2025-04-16 22:52:07,703 - src.data_sources.akshare - INFO - 列 ask_volume 的前3个值: [0, 0, 0]
2025-04-16 22:52:07,703 - src.data_sources.akshare - INFO - 列 source 的前3个值: ['akshare', 'akshare', 'akshare']
2025-04-16 22:52:07,703 - src.data_sources.akshare - INFO - 成功获取 5 只股票的实时数据
2025-04-16 22:52:07,704 - __main__ - INFO - 成功获取 5 条实时数据
2025-04-16 22:52:07,704 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 22:52:07,719 - src.storage.sqlite_storage - INFO - 映射前DataFrame的列：['symbol', 'timestamp', 'price', 'change', 'change_pct', 'volume', 'amount', 'high', 'low', 'open', 'prev_close', 'bid_price', 'ask_price', 'bid_volume', 'ask_volume', 'source']
2025-04-16 22:52:07,720 - src.storage.sqlite_storage - INFO - 存储表需要的列: ['timestamp', 'price', 'volume', 'bid_price', 'ask_price', 'bid_volume', 'ask_volume', 'change_percent']
2025-04-16 22:52:07,720 - src.storage.sqlite_storage - WARNING - 数据缺少必要列: ['change_percent']，将使用null值填充
2025-04-16 22:52:07,722 - src.storage.sqlite_storage - ERROR - 保存股票数据失败: table realtime_600036 has no column named change_percent
2025-04-16 22:52:07,723 - src.storage.sqlite_storage - ERROR - 保存数据失败: 存储错误 [sqlite]: 保存数据失败 (realtime, 股票代码: 600036): 保存股票数据失败: table realtime_600036 has no column named change_percent (原始错误: table realtime_600036 has no column named change_percent)
2025-04-16 22:52:07,724 - src.storage.sqlite_storage - ERROR - SQLiteStorage.save_data 发生异常: 存储错误 [sqlite]: 保存数据失败 (realtime, 股票代码: 600036): 保存数据失败: 存储错误 [sqlite]: 保存数据失败 (realtime, 股票代码: 600036): 保存股票数据失败: table realtime_600036 has no column named change_percent (原始错误: table realtime_600036 has no column named change_percent) (原始错误: 存储错误 [sqlite]: 保存数据失败 (realtime, 股票代码: 600036): 保存股票数据失败: table realtime_600036 has no column named change_percent (原始错误: table realtime_600036 has no column named change_percent))
2025-04-16 22:52:07,727 - __main__ - ERROR - 程序执行过程中发生错误: 存储错误 [sqlite]: 保存数据失败 (realtime, 股票代码: 600036): 保存数据失败: 存储错误 [sqlite]: 保存数据失败 (realtime, 股票代码: 600036): 保存股票数据失败: table realtime_600036 has no column named change_percent (原始错误: table realtime_600036 has no column named change_percent) (原始错误: 存储错误 [sqlite]: 保存数据失败 (realtime, 股票代码: 600036): 保存股票数据失败: table realtime_600036 has no column named change_percent (原始错误: table realtime_600036 has no column named change_percent))
Traceback (most recent call last):
  File "C:\Users\laisn\Desktop\Beeshare\src\storage\sqlite_storage.py", line 670, in _save_stock_data
    cursor.executemany(insert_sql, rows)
    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: table realtime_600036 has no column named change_percent

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\laisn\Desktop\Beeshare\src\storage\sqlite_storage.py", line 445, in save_data
    self._save_stock_data(conn, data, data_type, symbol)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\laisn\Desktop\Beeshare\src\storage\sqlite_storage.py", line 676, in _save_stock_data
    raise DataSaveException(error_msg, storage_type="sqlite", data_type=data_type, symbol=symbol, original_error=e)
src.utils.exceptions.DataSaveException: 存储错误 [sqlite]: 保存数据失败 (realtime, 股票代码: 600036): 保存股票数据失败: table realtime_600036 has no column named change_percent (原始错误: table realtime_600036 has no column named change_percent)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 1163, in <module>
    main()
    ~~~~^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 589, in main
    get_realtime_data(args, data_sources, storage)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\laisn\Desktop\Beeshare\main.py", line 278, in get_realtime_data
    symbol_success = storage_instance.save_data(data=group_data, data_type=DataType.REALTIME, symbol=symbol)
  File "C:\Users\laisn\Desktop\Beeshare\src\utils\logging_utils.py", line 173, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\laisn\Desktop\Beeshare\src\storage\sqlite_storage.py", line 478, in save_data
    raise DataSaveException(error_msg, storage_type="sqlite", data_type=data_type, symbol=symbol, original_error=e)
src.utils.exceptions.DataSaveException: 存储错误 [sqlite]: 保存数据失败 (realtime, 股票代码: 600036): 保存数据失败: 存储错误 [sqlite]: 保存数据失败 (realtime, 股票代码: 600036): 保存股票数据失败: table realtime_600036 has no column named change_percent (原始错误: table realtime_600036 has no column named change_percent) (原始错误: 存储错误 [sqlite]: 保存数据失败 (realtime, 股票代码: 600036): 保存股票数据失败: table realtime_600036 has no column named change_percent (原始错误: table realtime_600036 has no column named change_percent))
2025-04-16 22:55:53,681 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:55:53,682 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:55:53,682 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:55:53,682 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:55:53,683 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:55:53,814 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:55:53,814 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:56:02,779 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 22:56:02,781 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 22:56:02,781 - __main__ - INFO - 初始化SQLite存储
2025-04-16 22:56:02,781 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 22:56:02,789 - __main__ - INFO - 清理实时数据表...
2025-04-16 22:56:02,790 - __main__ - INFO - 将清理默认A股股票列表的实时数据表: ['600036', '601398', '600276', '600519', '601288']
2025-04-16 22:56:02,799 - src.storage.sqlite_storage - INFO - 删除了 600036 的 realtime 数据表
2025-04-16 22:56:02,799 - __main__ - INFO - 成功删除 600036 的实时数据表
2025-04-16 22:56:02,800 - src.storage.sqlite_storage - INFO - 删除了 601398 的 realtime 数据表
2025-04-16 22:56:02,800 - __main__ - INFO - 成功删除 601398 的实时数据表
2025-04-16 22:56:02,801 - src.storage.sqlite_storage - INFO - 删除了 600276 的 realtime 数据表
2025-04-16 22:56:02,801 - __main__ - INFO - 成功删除 600276 的实时数据表
2025-04-16 22:56:02,802 - src.storage.sqlite_storage - INFO - 删除了 600519 的 realtime 数据表
2025-04-16 22:56:02,802 - __main__ - INFO - 成功删除 600519 的实时数据表
2025-04-16 22:56:02,802 - src.storage.sqlite_storage - INFO - 删除了 601288 的 realtime 数据表
2025-04-16 22:56:02,803 - __main__ - INFO - 成功删除 601288 的实时数据表
2025-04-16 22:56:02,803 - __main__ - INFO - 实时数据表清理完成，下次获取数据时将自动创建新表
2025-04-16 22:56:02,803 - __main__ - INFO - 程序执行完毕
2025-04-16 22:56:16,553 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:56:16,553 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:56:16,553 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:56:16,554 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:56:16,554 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:56:16,634 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:56:16,634 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:57:05,990 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:57:05,990 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:57:05,990 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:57:05,991 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:57:05,991 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:57:06,091 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:57:06,092 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:57:14,037 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 22:57:14,038 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 22:57:14,038 - __main__ - INFO - 初始化SQLite存储
2025-04-16 22:57:14,038 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 22:57:14,059 - __main__ - INFO - 清理实时数据表...
2025-04-16 22:57:14,059 - __main__ - INFO - 将清理默认A股股票列表的实时数据表: ['600036', '601398', '600276', '600519', '601288']
2025-04-16 22:57:14,059 - src.storage.sqlite_storage - WARNING - 表 realtime_600036 不存在，无法删除
2025-04-16 22:57:14,059 - __main__ - INFO - 成功删除 600036 的实时数据表
2025-04-16 22:57:14,060 - src.storage.sqlite_storage - WARNING - 表 realtime_601398 不存在，无法删除
2025-04-16 22:57:14,060 - __main__ - INFO - 成功删除 601398 的实时数据表
2025-04-16 22:57:14,060 - src.storage.sqlite_storage - WARNING - 表 realtime_600276 不存在，无法删除
2025-04-16 22:57:14,060 - __main__ - INFO - 成功删除 600276 的实时数据表
2025-04-16 22:57:14,060 - src.storage.sqlite_storage - WARNING - 表 realtime_600519 不存在，无法删除
2025-04-16 22:57:14,060 - __main__ - INFO - 成功删除 600519 的实时数据表
2025-04-16 22:57:14,061 - src.storage.sqlite_storage - WARNING - 表 realtime_601288 不存在，无法删除
2025-04-16 22:57:14,061 - __main__ - INFO - 成功删除 601288 的实时数据表
2025-04-16 22:57:14,061 - __main__ - INFO - 实时数据表清理完成，下次获取数据时将自动创建新表
2025-04-16 22:57:14,061 - __main__ - INFO - 程序执行完毕
2025-04-16 22:57:29,612 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:57:29,612 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:57:29,612 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:57:29,612 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:57:29,613 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:57:29,743 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:57:29,743 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:58:37,394 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 22:58:37,394 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 22:58:37,394 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 22:58:37,395 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 22:58:37,395 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 22:58:37,533 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 22:58:37,534 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 22:58:45,443 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 22:58:45,449 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 22:58:45,450 - __main__ - INFO - 初始化SQLite存储
2025-04-16 22:58:45,451 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 22:58:45,467 - __main__ - INFO - 清理实时数据表...
2025-04-16 22:58:45,467 - __main__ - WARNING - 未提供股票代码或市场，将尝试清理所有实时数据表
2025-04-16 22:58:45,468 - __main__ - INFO - 未找到任何实时数据表
2025-04-16 22:58:45,468 - __main__ - INFO - 实时数据表清理完成，下次获取数据时将自动创建新表
2025-04-16 22:58:45,469 - __main__ - INFO - 程序执行完毕
2025-04-16 23:03:53,148 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 23:03:53,148 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 23:03:53,148 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 23:03:53,149 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 23:03:53,149 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 23:03:53,316 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 23:03:53,317 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 23:04:01,571 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 23:04:01,577 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 23:04:01,578 - __main__ - INFO - 初始化SQLite存储
2025-04-16 23:04:01,578 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 23:04:01,595 - __main__ - INFO - 从 akshare 获取 2 只股票的实时数据...
2025-04-16 23:04:01,595 - src.data_sources.akshare - INFO - 尝试获取A股所有实时行情数据...
2025-04-16 23:04:45,364 - src.data_sources.akshare - INFO - 成功获取A股实时行情，共 5410 只股票
2025-04-16 23:04:45,365 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 23:04:45,366 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 23:04:45,367 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 23:04:45,368 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 23:04:45,368 - src.data_sources.akshare - INFO - 获取 600519 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 23:04:45,369 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 23:04:45,369 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 600519 -> 输出 600519
2025-04-16 23:04:45,370 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 23:04:45,371 - src.data_sources.akshare - INFO - 股票 600519 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '贵州茅台', 'exists': True}
2025-04-16 23:04:45,373 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 600519 的实时数据...
2025-04-16 23:04:51,459 - src.data_sources.akshare - INFO - 通过单独接口成功获取 600519 的实时数据
2025-04-16 23:04:51,460 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 23:04:51,460 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 23:04:51,461 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 23:04:51,461 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 23:04:51,462 - src.data_sources.akshare - INFO - 获取 601398 实时数据，市场: 上海证券交易所, 板块: 主板
2025-04-16 23:04:51,462 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 23:04:51,462 - src.data_sources.akshare - INFO - 标准化股票代码: 输入 601398 -> 输出 601398
2025-04-16 23:04:51,463 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 23:04:51,464 - src.data_sources.akshare - INFO - 股票 601398 分析结果: {'market': 'A股', 'exchange': '上海证券交易所', 'board': '主板', 'prefix': 'sh', 'name': '工商银行', 'exists': True}
2025-04-16 23:04:51,465 - src.data_sources.akshare - INFO - 尝试使用股票行情接口获取 601398 的实时数据...
2025-04-16 23:04:56,901 - src.data_sources.akshare - INFO - 通过单独接口成功获取 601398 的实时数据
2025-04-16 23:04:56,902 - src.data_sources.akshare - INFO - 结果DataFrame的列：['symbol', 'timestamp', 'price', 'change', 'change_pct', 'volume', 'amount', 'high', 'low', 'open', 'prev_close', 'bid_price', 'ask_price', 'bid_volume', 'ask_volume', 'source']
2025-04-16 23:04:56,903 - src.data_sources.akshare - INFO - 列 symbol 的前3个值: ['600519', '601398']
2025-04-16 23:04:56,903 - src.data_sources.akshare - INFO - 列 timestamp 的前3个值: [Timestamp('2025-04-16 23:04:51.459540'), Timestamp('2025-04-16 23:04:56.901582')]
2025-04-16 23:04:56,904 - src.data_sources.akshare - INFO - 列 price 的前3个值: [1559.17, 7.06]
2025-04-16 23:04:56,904 - src.data_sources.akshare - INFO - 列 change 的前3个值: [1.17, 0.1]
2025-04-16 23:04:56,905 - src.data_sources.akshare - INFO - 列 change_pct 的前3个值: [0.08, 1.44]
2025-04-16 23:04:56,905 - src.data_sources.akshare - INFO - 列 volume 的前3个值: [31156.0, 4132402.0]
2025-04-16 23:04:56,905 - src.data_sources.akshare - INFO - 列 amount 的前3个值: [4834880596.0, 2892689930.0]
2025-04-16 23:04:56,905 - src.data_sources.akshare - INFO - 列 high 的前3个值: [1576.0, 7.06]
2025-04-16 23:04:56,906 - src.data_sources.akshare - INFO - 列 low 的前3个值: [1537.0, 6.93]
2025-04-16 23:04:56,906 - src.data_sources.akshare - INFO - 列 open 的前3个值: [None, None]
2025-04-16 23:04:56,906 - src.data_sources.akshare - INFO - 列 prev_close 的前3个值: [1558.0, 6.96]
2025-04-16 23:04:56,906 - src.data_sources.akshare - INFO - 列 bid_price 的前3个值: [None, None]
2025-04-16 23:04:56,907 - src.data_sources.akshare - INFO - 列 ask_price 的前3个值: [None, None]
2025-04-16 23:04:56,907 - src.data_sources.akshare - INFO - 列 bid_volume 的前3个值: [0, 0]
2025-04-16 23:04:56,907 - src.data_sources.akshare - INFO - 列 ask_volume 的前3个值: [0, 0]
2025-04-16 23:04:56,908 - src.data_sources.akshare - INFO - 列 source 的前3个值: ['akshare', 'akshare']
2025-04-16 23:04:56,908 - src.data_sources.akshare - INFO - 成功获取 2 只股票的实时数据
2025-04-16 23:04:56,909 - __main__ - INFO - 成功获取 2 条实时数据
2025-04-16 23:04:56,909 - __main__ - INFO - 将数据保存到 sqlite 存储...
2025-04-16 23:04:56,923 - src.storage.sqlite_storage - INFO - 映射前DataFrame的列：['symbol', 'timestamp', 'price', 'change', 'change_pct', 'volume', 'amount', 'high', 'low', 'open', 'prev_close', 'bid_price', 'ask_price', 'bid_volume', 'ask_volume', 'source']
2025-04-16 23:04:56,924 - src.storage.sqlite_storage - INFO - 存储表需要的列: ['timestamp', 'price', 'volume', 'bid_price', 'ask_price', 'bid_volume', 'ask_volume', 'change_pct']
2025-04-16 23:04:56,926 - src.storage.sqlite_storage - INFO - 成功保存 1 条 600519 的 realtime 数据
2025-04-16 23:04:56,938 - src.storage.sqlite_storage - INFO - 映射前DataFrame的列：['symbol', 'timestamp', 'price', 'change', 'change_pct', 'volume', 'amount', 'high', 'low', 'open', 'prev_close', 'bid_price', 'ask_price', 'bid_volume', 'ask_volume', 'source']
2025-04-16 23:04:56,939 - src.storage.sqlite_storage - INFO - 存储表需要的列: ['timestamp', 'price', 'volume', 'bid_price', 'ask_price', 'bid_volume', 'ask_volume', 'change_pct']
2025-04-16 23:04:56,941 - src.storage.sqlite_storage - INFO - 成功保存 1 条 601398 的 realtime 数据
2025-04-16 23:04:56,941 - __main__ - INFO - 成功保存实时数据
2025-04-16 23:04:56,942 - __main__ - INFO - 程序执行完毕
2025-04-16 23:05:48,030 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 23:05:48,030 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 23:05:48,031 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 23:05:48,031 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 23:05:48,034 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 23:05:48,160 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 23:05:48,161 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 23:05:56,152 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 23:05:56,158 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 23:05:56,159 - __main__ - INFO - 初始化SQLite存储
2025-04-16 23:05:56,160 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 23:05:57,278 - src.analysis.clustering - INFO - 已设置matplotlib中文字体支持
2025-04-16 23:05:57,279 - __main__ - INFO - 分析时间范围: 2025-01-16 至 2025-04-16
2025-04-16 23:05:57,279 - __main__ - INFO - 分析股票: ['600519', '601398', '600036', '1']
2025-04-16 23:05:57,280 - __main__ - INFO - 加载股票 600519 的数据...
2025-04-16 23:05:57,282 - src.storage.sqlite_storage - INFO - 成功加载 600519 的 91 条 从 2025-01-16 到 2025-04-16 historical 数据
2025-04-16 23:05:57,291 - __main__ - INFO - 加载股票 601398 的数据...
2025-04-16 23:05:57,294 - src.storage.sqlite_storage - INFO - 成功加载 601398 的 91 条 从 2025-01-16 到 2025-04-16 historical 数据
2025-04-16 23:05:57,303 - __main__ - INFO - 加载股票 600036 的数据...
2025-04-16 23:05:57,305 - src.storage.sqlite_storage - INFO - 成功加载 600036 的 91 条 从 2025-01-16 到 2025-04-16 historical 数据
2025-04-16 23:05:57,313 - __main__ - INFO - 加载股票 1 的数据...
2025-04-16 23:05:57,313 - __main__ - INFO - 股票代码标准化: 1 -> 000001 (平安银行，非上证指数)
2025-04-16 23:05:57,315 - src.storage.sqlite_storage - INFO - 成功加载 000001 的 91 条 从 2025-01-16 到 2025-04-16 historical 数据
2025-04-16 23:05:57,323 - __main__ - INFO - 股票 600519 数据列: ['change_pct', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 23:05:57,324 - __main__ - INFO - 股票 601398 数据列: ['change_pct', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 23:05:57,324 - __main__ - INFO - 股票 600036 数据列: ['change_pct', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 23:05:57,325 - __main__ - INFO - 股票 1 数据列: ['change_pct', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 23:05:57,325 - __main__ - INFO - 所有数据集共有的列: ['change_pct', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'volume']
2025-04-16 23:05:57,325 - __main__ - WARNING - 特征 'change_percent' 在以下股票数据中缺失: ['600519', '601398', '600036', '1']
2025-04-16 23:05:57,325 - __main__ - WARNING - 特征 'turnover_rate' 在以下股票数据中缺失: ['600519', '601398', '600036', '1']
2025-04-16 23:05:57,330 - __main__ - INFO - 将使用以下特征进行聚类: ['close', 'change_percent', 'volume', 'turnover_rate']
2025-04-16 23:05:57,330 - __main__ - INFO - 合并后的数据大小: 364 行 x 12 列
2025-04-16 23:05:57,331 - __main__ - INFO - 最终数据列: ['change_pct', 'change_percent', 'close', 'date', 'high', 'low', 'open', 'stock_id', 'symbol', 'turnover', 'turnover_rate', 'volume']
2025-04-16 23:05:57,331 - src.analysis.clustering - INFO - 使用以下特征进行聚类: ['close', 'change_percent', 'volume', 'turnover_rate']
2025-04-16 23:05:57,584 - src.analysis.clustering - INFO - KMeans聚类完成，分为 3 个簇
2025-04-16 23:05:57,585 - src.analysis.clustering - INFO - 簇 0: 115 个样本 (31.59%)
2025-04-16 23:05:57,585 - src.analysis.clustering - INFO - 簇 1: 126 个样本 (34.62%)
2025-04-16 23:05:57,585 - src.analysis.clustering - INFO - 簇 2: 123 个样本 (33.79%)
2025-04-16 23:05:57,586 - __main__ - INFO - 聚类结果（3个簇）:
2025-04-16 23:05:57,586 - __main__ - INFO -   0: 115个样本 (31.59%)
2025-04-16 23:05:57,586 - __main__ - INFO -   1: 126个样本 (34.62%)
2025-04-16 23:05:57,587 - __main__ - INFO -   2: 123个样本 (33.79%)
2025-04-16 23:05:57,587 - __main__ - INFO - 生成clusters类型的可视化图表...
2025-04-16 23:05:58,125 - __main__ - INFO - 图表已保存到 results\clustering_clusters_3clusters.png
2025-04-16 23:05:58,139 - __main__ - INFO - 生成elbow类型的可视化图表...
2025-04-16 23:05:58,146 - src.analysis.clustering - INFO - 计算1到10个聚类的inertia值...
2025-04-16 23:05:58,164 - src.analysis.clustering - INFO - 聚类数 1: inertia = 1820.00
2025-04-16 23:05:58,184 - src.analysis.clustering - INFO - 聚类数 2: inertia = 621.29
2025-04-16 23:05:58,205 - src.analysis.clustering - INFO - 聚类数 3: inertia = 410.81
2025-04-16 23:05:58,227 - src.analysis.clustering - INFO - 聚类数 4: inertia = 275.00
2025-04-16 23:05:58,251 - src.analysis.clustering - INFO - 聚类数 5: inertia = 201.13
2025-04-16 23:05:58,276 - src.analysis.clustering - INFO - 聚类数 6: inertia = 134.92
2025-04-16 23:05:58,303 - src.analysis.clustering - INFO - 聚类数 7: inertia = 107.66
2025-04-16 23:05:58,330 - src.analysis.clustering - INFO - 聚类数 8: inertia = 93.94
2025-04-16 23:05:58,360 - src.analysis.clustering - INFO - 聚类数 9: inertia = 85.05
2025-04-16 23:05:58,391 - src.analysis.clustering - INFO - 聚类数 10: inertia = 76.28
2025-04-16 23:05:58,412 - src.analysis.clustering - INFO - 确定的最佳聚类数: 6
2025-04-16 23:05:58,672 - __main__ - INFO - 图表已保存到 results\clustering_elbow_3clusters.png
2025-04-16 23:05:58,681 - __main__ - INFO - 生成feature_distribution类型的可视化图表...
2025-04-16 23:05:58,785 - src.analysis.clustering - WARNING - 特征 'change_percent' 在聚类 0 中的方差为零或数据点不足，绘制条形图
2025-04-16 23:05:58,787 - src.analysis.clustering - WARNING - 特征 'change_percent' 在聚类 1 中的方差为零或数据点不足，绘制条形图
2025-04-16 23:05:58,789 - src.analysis.clustering - WARNING - 特征 'change_percent' 在聚类 2 中的方差为零或数据点不足，绘制条形图
2025-04-16 23:05:58,837 - src.analysis.clustering - WARNING - 特征 'turnover_rate' 在聚类 0 中的方差为零或数据点不足，绘制条形图
2025-04-16 23:05:58,839 - src.analysis.clustering - WARNING - 特征 'turnover_rate' 在聚类 1 中的方差为零或数据点不足，绘制条形图
2025-04-16 23:05:58,841 - src.analysis.clustering - WARNING - 特征 'turnover_rate' 在聚类 2 中的方差为零或数据点不足，绘制条形图
2025-04-16 23:05:59,506 - __main__ - INFO - 图表已保存到 results\clustering_feature_distribution_3clusters.png
2025-04-16 23:05:59,517 - __main__ - INFO - 生成centroids类型的可视化图表...
2025-04-16 23:05:59,585 - src.analysis.clustering - INFO - 原始聚类中心数据类型: <class 'numpy.ndarray'>
2025-04-16 23:05:59,585 - src.analysis.clustering - INFO - 原始聚类中心数据形状: (3, 4)
2025-04-16 23:05:59,586 - src.analysis.clustering - INFO - 处理后的聚类中心数据形状: (3, 4)
2025-04-16 23:05:59,586 - src.analysis.clustering - INFO - 有效特征数量: 4, 特征名称: ['close', 'change_percent', 'volume', 'turnover_rate']
2025-04-16 23:05:59,586 - src.analysis.clustering - INFO - 成功创建聚类中心特征筛选数据，形状: (3, 4)
2025-04-16 23:05:59,587 - src.analysis.clustering - WARNING - 以下特征列是常量，将跳过标准化: ['change_percent', 'turnover_rate']
2025-04-16 23:05:59,587 - src.analysis.clustering - INFO - 标准化后的数据形状: (3, 4)
2025-04-16 23:05:59,587 - src.analysis.clustering - INFO - 创建角度数组，长度: 4
2025-04-16 23:05:59,588 - src.analysis.clustering - INFO - 闭合角度数组，最终长度: 5
2025-04-16 23:05:59,588 - src.analysis.clustering - INFO - 将绘制 3 个簇的雷达图
2025-04-16 23:05:59,588 - src.analysis.clustering - INFO - 聚类 0 最终值数组长度: 5, 角度数组长度: 5
2025-04-16 23:05:59,589 - src.analysis.clustering - INFO - 成功绘制聚类 0 的雷达图
2025-04-16 23:05:59,589 - src.analysis.clustering - INFO - 聚类 1 最终值数组长度: 5, 角度数组长度: 5
2025-04-16 23:05:59,590 - src.analysis.clustering - INFO - 成功绘制聚类 1 的雷达图
2025-04-16 23:05:59,590 - src.analysis.clustering - INFO - 聚类 2 最终值数组长度: 5, 角度数组长度: 5
2025-04-16 23:05:59,591 - src.analysis.clustering - INFO - 成功绘制聚类 2 的雷达图
2025-04-16 23:05:59,591 - src.analysis.clustering - INFO - 成功绘制了 3 个聚类的雷达图
2025-04-16 23:05:59,864 - __main__ - INFO - 图表已保存到 results\clustering_centroids_3clusters.png
2025-04-16 23:05:59,878 - __main__ - INFO - 聚类结果已保存到 results\clustering_result_3clusters.csv
2025-04-16 23:05:59,879 - __main__ - INFO - 聚类分析完成
2025-04-16 23:05:59,880 - __main__ - INFO - 程序执行完毕
2025-04-16 23:40:55,535 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 23:40:55,536 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 23:40:55,536 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 23:40:55,537 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 23:40:55,538 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 23:40:55,674 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 23:40:55,674 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 23:49:15,912 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 23:49:15,912 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 23:49:15,912 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 23:49:15,913 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 23:49:15,913 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 23:49:16,104 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 23:49:16,105 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 23:49:26,702 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 23:49:26,709 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 23:49:26,709 - __main__ - INFO - 初始化SQLite存储
2025-04-16 23:49:26,710 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 23:49:26,741 - __main__ - ERROR - 初始化SQLite存储失败: sequence item 0: expected str instance, StandardColumns found
2025-04-16 23:49:26,744 - __main__ - ERROR - 没有可用的存储方式，程序退出
2025-04-16 23:52:49,541 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 23:52:49,541 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 23:52:49,541 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 23:52:49,542 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 23:52:49,542 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 23:52:49,685 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 23:52:49,685 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 23:53:04,407 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 23:53:04,407 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 23:53:04,407 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 23:53:04,407 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 23:53:04,408 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 23:53:04,520 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 23:53:04,521 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 23:53:50,333 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 23:53:50,333 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 23:53:50,334 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 23:53:50,334 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 23:53:50,335 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 23:53:50,443 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 23:53:50,444 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 23:53:58,161 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 23:53:58,164 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 23:53:58,165 - __main__ - INFO - 初始化SQLite存储
2025-04-16 23:53:58,165 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 23:53:58,168 - src.storage.sqlite_storage - INFO - 成功为表 symbols 添加索引
2025-04-16 23:53:58,169 - src.storage.sqlite_storage - INFO - 成功为表 indices 添加索引
2025-04-16 23:53:58,180 - __main__ - ERROR - 聚类分析功能当前不可用
2025-04-16 23:53:58,180 - __main__ - INFO - 正在研发中的功能，请稍后再试
2025-04-16 23:53:58,181 - __main__ - INFO - 程序执行完毕
2025-04-16 23:57:10,811 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 23:57:10,812 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 23:57:10,812 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 23:57:10,812 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 23:57:10,813 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 23:57:10,917 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 23:57:10,917 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 23:57:37,465 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 23:57:37,465 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 23:57:37,465 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 23:57:37,466 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 23:57:37,466 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 23:57:37,575 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 23:57:37,575 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 23:57:45,457 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 23:57:45,472 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 23:57:45,472 - __main__ - INFO - 初始化SQLite存储
2025-04-16 23:57:45,472 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 23:57:45,474 - src.storage.sqlite_storage - INFO - 成功为表 symbols 添加索引
2025-04-16 23:57:45,475 - src.storage.sqlite_storage - INFO - 成功为表 indices 添加索引
2025-04-16 23:58:29,691 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 23:58:29,691 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 23:58:29,691 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 23:58:29,692 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 23:58:29,693 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 23:58:29,865 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 23:58:29,865 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
2025-04-16 23:58:37,178 - src.data_sources.akshare - INFO - 成功加载 5411 只A股股票信息
2025-04-16 23:58:37,180 - src.storage.config - INFO - 从 C:\Users\laisn\Desktop\Beeshare\config\storage.json 加载存储配置
2025-04-16 23:58:37,180 - __main__ - INFO - 初始化SQLite存储
2025-04-16 23:58:37,180 - src.storage.base - INFO - 初始化存储方式: sqlite
2025-04-16 23:58:37,188 - src.storage.sqlite_storage - INFO - 成功为表 symbols 添加索引
2025-04-16 23:58:37,189 - src.storage.sqlite_storage - INFO - 成功为表 indices 添加索引
2025-04-16 23:58:37,195 - __main__ - INFO - 开始对股票 ['1279', '603681', '605009'] 进行聚类分析
2025-04-16 23:58:37,196 - src.storage.sqlite_storage - ERROR - 无效的数据类型: HISTORICAL
2025-04-16 23:58:37,196 - src.storage.sqlite_storage - ERROR - SQLiteStorage.load_data 发生异常: 存储错误 [sqlite]: 加载数据失败 (未知类型): 无效的数据类型: HISTORICAL
2025-04-16 23:58:37,211 - __main__ - ERROR - 获取 1279 的历史数据失败: 存储错误 [sqlite]: 加载数据失败 (未知类型): 无效的数据类型: HISTORICAL
2025-04-16 23:58:37,212 - src.storage.sqlite_storage - ERROR - 无效的数据类型: HISTORICAL
2025-04-16 23:58:37,212 - src.storage.sqlite_storage - ERROR - SQLiteStorage.load_data 发生异常: 存储错误 [sqlite]: 加载数据失败 (未知类型): 无效的数据类型: HISTORICAL
2025-04-16 23:58:37,213 - __main__ - ERROR - 获取 603681 的历史数据失败: 存储错误 [sqlite]: 加载数据失败 (未知类型): 无效的数据类型: HISTORICAL
2025-04-16 23:58:37,214 - src.storage.sqlite_storage - ERROR - 无效的数据类型: HISTORICAL
2025-04-16 23:58:37,214 - src.storage.sqlite_storage - ERROR - SQLiteStorage.load_data 发生异常: 存储错误 [sqlite]: 加载数据失败 (未知类型): 无效的数据类型: HISTORICAL
2025-04-16 23:58:37,215 - __main__ - ERROR - 获取 605009 的历史数据失败: 存储错误 [sqlite]: 加载数据失败 (未知类型): 无效的数据类型: HISTORICAL
2025-04-16 23:58:37,215 - __main__ - ERROR - 未能获取任何数据，无法进行聚类分析
2025-04-16 23:58:37,216 - __main__ - INFO - 程序执行完毕
2025-04-16 23:59:04,674 - __main__ - INFO - 股票数据获取系统启动
2025-04-16 23:59:04,674 - __main__ - INFO - 初始化AKShare数据源
2025-04-16 23:59:04,675 - src.data_sources.base - INFO - 初始化数据源: akshare
2025-04-16 23:59:04,675 - src.data_sources.akshare - INFO - 正在测试与AKShare的连接...
2025-04-16 23:59:04,676 - src.data_sources.akshare - INFO - 连接超时设置为 10 秒
2025-04-16 23:59:04,755 - src.data_sources.akshare - INFO - AKShare连接测试成功
2025-04-16 23:59:04,756 - src.data_sources.akshare - INFO - AKShare 版本: 1.16.78
